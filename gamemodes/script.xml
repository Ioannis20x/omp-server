<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///C|/Users/ioann/OneDrive/Projekte/mein SAMP Server/openmp version(normal)/qawno/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="C:\Users\ioann\OneDrive\Projekte\mein SAMP Server\openmp version(normal)\gamemodes\script.pwn">
	<assembly>
		<name>script.pwn</name>
	</assembly>

	<!-- general -->
	<general>
		<library name="open.mp" summary="open.mp includes entry point.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="args" summary="Script arguments support functions.">  <license>  (c) Copyright 2005, ITB CompuPhase  This file is provided as is (no warranties).  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="console" summary="Console output.">  <license>  (c) Copyright 1998-2011, ITB CompuPhase  This file is provided as is (no warranties).  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_core" summary="open.mp core functions and defines.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_player" summary="open.mp player functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_actor" summary="open.mp actor functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_checkpoint" summary="open.mp checkpoint functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_class" summary="open.mp class functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_database" summary="open.mp SQLite functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_dialog" summary="open.mp dialog functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_gangzone" summary="open.mp text draw functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_http" summary="open.mp legacy HTTP include.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p /><p/> <p/><p/> <library name="omp_menu" summary="open.mp menu functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_network" summary="open.mp core functions and defines.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_object" summary="open.mp object functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_pickup" summary="open.mp pickup functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <library name="omp_textdraw" summary="open.mp text draw functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_variable" summary="open.mp global data functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <library name="omp_vehicle" summary="open.mp vehicle functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <p/><p/> <library name="omp_textlabel" summary="open.mp 3D text label functions.">  <license>  This Source Code Form is subject to the terms of the Mozilla Public License,  v. 2.0. If a copy of the MPL was not distributed with this file, You can  obtain one at http://mozilla.org/MPL/2.0/.  The original code is copyright (c) 2023, open.mp team and contributors.  </license>  <summary pawndoc="true">  This library uses the enhanced <em>pawndoc.xsl</em> from  <a href="https://github.com/pawn-lang/pawndoc">pawn-lang/pawndoc</a>.  This XSL has features such as library and markdown support, and will not  render this message when used.  </summary>  </library> <p/> <p/><p/> MySQL plugin R41-4 
	</general>

	<members>

		<!-- enumerations -->
		<member name="T:MAX_CARMODS" value="16">
			<tagname value="t_CARMODTYPE"/>
			<member name="C:UNKNOWN_CARMODTYPE" value="-1">
			</member>
			<member name="C:CARMODTYPE_NONE" value="-1">
			</member>
			<member name="C:CARMODTYPE_SPOILER" value="0">
			</member>
			<member name="C:CARMODTYPE_HOOD" value="1">
			</member>
			<member name="C:CARMODTYPE_ROOF" value="2">
			</member>
			<member name="C:CARMODTYPE_SIDESKIRT" value="3">
			</member>
			<member name="C:CARMODTYPE_LAMPS" value="4">
			</member>
			<member name="C:CARMODTYPE_NITRO" value="5">
			</member>
			<member name="C:CARMODTYPE_EXHAUST" value="6">
			</member>
			<member name="C:CARMODTYPE_WHEELS" value="7">
			</member>
			<member name="C:CARMODTYPE_STEREO" value="8">
			</member>
			<member name="C:CARMODTYPE_HYDRAULICS" value="9">
			</member>
			<member name="C:CARMODTYPE_FRONT_BUMPER" value="10">
			</member>
			<member name="C:CARMODTYPE_REAR_BUMPER" value="11">
			</member>
			<member name="C:CARMODTYPE_VENT_RIGHT" value="12">
			</member>
			<member name="C:CARMODTYPE_VENT_LEFT" value="13">
			</member>
			<member name="C:CARMODTYPE_FRONT_BULLBAR" value="14">
			</member>
			<member name="C:CARMODTYPE_REAR_BULLBAR" value="15">
			</member>
			<referrer name="_@CARMODTYPE"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:MAX_FIGHT_STYLES" value="17">
			<tagname value="t_FIGHT_STYLE"/>
			<member name="C:UNKNOWN_FIGHT_STYLE" value="-1">
			</member>
			<member name="C:FIGHT_STYLE_NORMAL" value="4">
			</member>
			<member name="C:FIGHT_STYLE_BOXING" value="5">
			</member>
			<member name="C:FIGHT_STYLE_KUNGFU" value="6">
			</member>
			<member name="C:FIGHT_STYLE_KNEEHEAD" value="7">
			</member>
			<member name="C:FIGHT_STYLE_GRABKICK" value="15">
			</member>
			<member name="C:FIGHT_STYLE_ELBOW" value="16">
			</member>
			<referrer name="_@FIGHT_STYLE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:MAX_VEHICLE_MODEL_INFOS" value="10">
			<tagname value="t_VEHICLE_MODEL_INFO"/>
			<member name="C:UNKNOWN_VEHICLE_MODEL_INFO" value="-1">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_SIZE" value="1">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONT_SEAT" value="2">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REAR_SEAT" value="3">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_PETROL_CAP" value="4">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELS_FRONT" value="5">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELS_REAR" value="6">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELS_MID" value="7">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONT_BUMPER_Z" value="8">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REAR_BUMPER_Z" value="9">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONTSEAT" value="2">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REARSEAT" value="3">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_PETROLCAP" value="4">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSFRONT" value="5">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSREAR" value="6">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_WHEELSMID" value="7">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_FRONT_BUMPER" value="8">
			</member>
			<member name="C:VEHICLE_MODEL_INFO_REAR_BUMPER" value="9">
			</member>
			<referrer name="_@VEHICLE_MODEL_INFO"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:MAX_WEAPONS" value="47">
			<tagname value="t_WEAPON"/>
			<member name="C:UNKNOWN_WEAPON" value="-1">
			</member>
			<member name="C:REASON_VEHICLE" value="49">
			</member>
			<member name="C:REASON_HELICOPTER_BLADES" value="50">
			</member>
			<member name="C:REASON_EXPLOSION" value="51">
			</member>
			<member name="C:REASON_DROWN" value="53">
			</member>
			<member name="C:REASON_COLLISION" value="54">
			</member>
			<member name="C:REASON_SPLAT" value="54">
			</member>
			<member name="C:REASON_CONNECT" value="200">
			</member>
			<member name="C:REASON_DISCONNECT" value="201">
			</member>
			<member name="C:REASON_SUICIDE" value="255">
			</member>
			<member name="C:WEAPON_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPON_VEHICLE" value="49">
			</member>
			<member name="C:WEAPON_DROWN" value="53">
			</member>
			<member name="C:WEAPON_COLLISION" value="54">
			</member>
			<member name="C:WEAPON_SPLAT" value="54">
			</member>
			<member name="C:WEAPON_FIST" value="0">
			</member>
			<member name="C:WEAPON_BRASSKNUCKLE" value="1">
			</member>
			<member name="C:WEAPON_GOLFCLUB" value="2">
			</member>
			<member name="C:WEAPON_NITESTICK" value="3">
			</member>
			<member name="C:WEAPON_NIGHTSTICK" value="3">
			</member>
			<member name="C:WEAPON_KNIFE" value="4">
			</member>
			<member name="C:WEAPON_BAT" value="5">
			</member>
			<member name="C:WEAPON_SHOVEL" value="6">
			</member>
			<member name="C:WEAPON_POOLSTICK" value="7">
			</member>
			<member name="C:WEAPON_KATANA" value="8">
			</member>
			<member name="C:WEAPON_CHAINSAW" value="9">
			</member>
			<member name="C:WEAPON_DILDO" value="10">
			</member>
			<member name="C:WEAPON_DILDO2" value="11">
			</member>
			<member name="C:WEAPON_VIBRATOR" value="12">
			</member>
			<member name="C:WEAPON_VIBRATOR2" value="13">
			</member>
			<member name="C:WEAPON_FLOWER" value="14">
			</member>
			<member name="C:WEAPON_CANE" value="15">
			</member>
			<member name="C:WEAPON_GRENADE" value="16">
			</member>
			<member name="C:WEAPON_TEARGAS" value="17">
			</member>
			<member name="C:WEAPON_MOLTOV" value="18">
			</member>
			<member name="C:WEAPON_MOLOTOV" value="18">
			</member>
			<member name="C:WEAPON_COLT45" value="22">
			</member>
			<member name="C:WEAPON_SILENCED" value="23">
			</member>
			<member name="C:WEAPON_DEAGLE" value="24">
			</member>
			<member name="C:WEAPON_SHOTGUN" value="25">
			</member>
			<member name="C:WEAPON_SAWEDOFF" value="26">
			</member>
			<member name="C:WEAPON_SHOTGSPA" value="27">
			</member>
			<member name="C:WEAPON_UZI" value="28">
			</member>
			<member name="C:WEAPON_MP5" value="29">
			</member>
			<member name="C:WEAPON_AK47" value="30">
			</member>
			<member name="C:WEAPON_M4" value="31">
			</member>
			<member name="C:WEAPON_TEC9" value="32">
			</member>
			<member name="C:WEAPON_RIFLE" value="33">
			</member>
			<member name="C:WEAPON_SNIPER" value="34">
			</member>
			<member name="C:WEAPON_ROCKETLAUNCHER" value="35">
			</member>
			<member name="C:WEAPON_HEATSEEKER" value="36">
			</member>
			<member name="C:WEAPON_FLAMETHROWER" value="37">
			</member>
			<member name="C:WEAPON_MINIGUN" value="38">
			</member>
			<member name="C:WEAPON_SATCHEL" value="39">
			</member>
			<member name="C:WEAPON_BOMB" value="40">
			</member>
			<member name="C:WEAPON_SPRAYCAN" value="41">
			</member>
			<member name="C:WEAPON_FIREEXTINGUISHER" value="42">
			</member>
			<member name="C:WEAPON_CAMERA" value="43">
			</member>
			<member name="C:WEAPON_NIGHT_VISION_GOGGLES" value="44">
			</member>
			<member name="C:WEAPON_THERMAL_GOGGLES" value="45">
			</member>
			<member name="C:WEAPON_PARACHUTE" value="46">
			</member>
			<referrer name="_@WEAPON"/>
			<library>open.mp</library>  <summary>Weapons</summary> 
		</member>
		<member name="T:MAX_WEAPONSKILLS" value="11">
			<tagname value="t_WEAPONSKILL"/>
			<member name="C:UNKNOWN_WEAPONSKILL" value="-1">
			</member>
			<member name="C:WEAPONSKILL_PISTOL" value="0">
			</member>
			<member name="C:WEAPONSKILL_PISTOL_SILENCED" value="1">
			</member>
			<member name="C:WEAPONSKILL_DESERT_EAGLE" value="2">
			</member>
			<member name="C:WEAPONSKILL_SHOTGUN" value="3">
			</member>
			<member name="C:WEAPONSKILL_SAWNOFF_SHOTGUN" value="4">
			</member>
			<member name="C:WEAPONSKILL_SPAS12_SHOTGUN" value="5">
			</member>
			<member name="C:WEAPONSKILL_MICRO_UZI" value="6">
			</member>
			<member name="C:WEAPONSKILL_MP5" value="7">
			</member>
			<member name="C:WEAPONSKILL_AK47" value="8">
			</member>
			<member name="C:WEAPONSKILL_M4" value="9">
			</member>
			<member name="C:WEAPONSKILL_SNIPERRIFLE" value="10">
			</member>
			<referrer name="_@WEAPONSKILL"/>
			<library>omp_player</library> 
		</member>
		<member name="T:MAX_WEAPON_SLOTS" value="13">
			<tagname value="t_WEAPON_SLOT"/>
			<member name="C:UNKNOWN_WEAPON_SLOT" value="-1">
			</member>
			<member name="C:WEAPON_SLOT_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPON_SLOT_UNARMED" value="0">
			</member>
			<member name="C:WEAPON_SLOT_MELEE" value="1">
			</member>
			<member name="C:WEAPON_SLOT_PISTOL" value="2">
			</member>
			<member name="C:WEAPON_SLOT_SHOTGUN" value="3">
			</member>
			<member name="C:WEAPON_SLOT_MACHINE_GUN" value="4">
			</member>
			<member name="C:WEAPON_SLOT_ASSAULT_RIFLE" value="5">
			</member>
			<member name="C:WEAPON_SLOT_LONG_RIFLE" value="6">
			</member>
			<member name="C:WEAPON_SLOT_ARTILLERY" value="7">
			</member>
			<member name="C:WEAPON_SLOT_EXPLOSIVES" value="8">
			</member>
			<member name="C:WEAPON_SLOT_EQUIPMENT" value="9">
			</member>
			<member name="C:WEAPON_SLOT_GIFT" value="10">
			</member>
			<member name="C:WEAPON_SLOT_GADGET" value="11">
			</member>
			<member name="C:WEAPON_SLOT_DETONATOR" value="12">
			</member>
			<referrer name="_@WEAPON_SLOT"/>
			<library>open.mp</library>  <summary>Weapon Slots</summary> 
		</member>
		<member name="T:__BULLET_HIT_TYPE" value="5">
			<tagname value="t_BULLET_HIT_TYPE"/>
			<member name="C:UNKNOWN_BULLET_HIT_TYPE" value="-1">
			</member>
			<member name="C:BULLET_HIT_TYPE_NONE" value="0">
			</member>
			<member name="C:BULLET_HIT_TYPE_PLAYER" value="1">
			</member>
			<member name="C:BULLET_HIT_TYPE_VEHICLE" value="2">
			</member>
			<member name="C:BULLET_HIT_TYPE_OBJECT" value="3">
			</member>
			<member name="C:BULLET_HIT_TYPE_PLAYER_OBJECT" value="4">
			</member>
			<referrer name="_@BULLET_HIT_TYPE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__CAM_MODE" value="57">
			<tagname value="t_CAM_MODE"/>
			<member name="C:UNKNOWN_CAM_MODE" value="-1">
			</member>
			<member name="C:CAM_MODE_DISCONNECTED" value="-1">
			</member>
			<member name="C:CAM_MODE_NONE" value="0">
			</member>
			<member name="C:CAM_MODE_BEHINDCAR" value="3">
			</member>
			<member name="C:CAM_MODE_FOLLOWPED" value="4">
			</member>
			<member name="C:CAM_MODE_SNIPER" value="7">
			</member>
			<member name="C:CAM_MODE_ROCKETLAUNCHER" value="8">
			</member>
			<member name="C:CAM_MODE_FIXED" value="15">
			</member>
			<member name="C:CAM_MODE_1STPERSON" value="16">
			</member>
			<member name="C:CAM_MODE_CAM_ON_A_STRING" value="18">
			</member>
			<member name="C:CAM_MODE_BEHINDBOAT" value="22">
			</member>
			<member name="C:CAM_MODE_CAMERA" value="46">
			</member>
			<member name="C:CAM_MODE_ROCKETLAUNCHER_HS" value="51">
			</member>
			<member name="C:CAM_MODE_AIMWEAPON" value="53">
			</member>
			<member name="C:CAM_MODE_AIMWEAPON_FROMCAR" value="55">
			</member>
			<member name="C:CAM_MODE_DW_HELI_CHASE" value="56">
			</member>
			<referrer name="_@CAM_MODE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__CLICK_SOURCE" value="1">
			<tagname value="t_CLICK_SOURCE"/>
			<member name="C:UNKNOWN_CLICK_SOURCE" value="-1">
			</member>
			<member name="C:CLICK_SOURCE_SCOREBOARD" value="0">
			</member>
			<referrer name="_@CLICK_SOURCE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__CONNSTAT" value="9">
			<tagname value="t_CONNECTION_STATUS"/>
			<member name="C:UNKNOWN_CONNECTION_STATUS" value="-1">
			</member>
			<member name="C:CONNECTION_STATUS_NO_ACTION" value="0">
			</member>
			<member name="C:CONNECTION_STATUS_DISCONNECT_ASAP" value="1">
			</member>
			<member name="C:CONNECTION_STATUS_DISCONNECT_ASAP_SILENTLY" value="2">
			</member>
			<member name="C:CONNECTION_STATUS_DISCONNECT_ON_NO_ACK" value="3">
			</member>
			<member name="C:CONNECTION_STATUS_REQUESTED_CONNECTION" value="4">
			</member>
			<member name="C:CONNECTION_STATUS_HANDLING_CONNECTION_REQUEST" value="5">
			</member>
			<member name="C:CONNECTION_STATUS_UNVERIFIED_SENDER" value="6">
			</member>
			<member name="C:CONNECTION_STATUS_SET_ENCRYPTION_ON_MULTIPLE_16_BYTE_PACKET" value="7">
			</member>
			<member name="C:CONNECTION_STATUS_CONNECTED" value="8">
			</member>
			<member name="C:CONNSTAT_NO_ACTION" value="0">
			</member>
			<member name="C:CONNSTAT_DISCONNECT_ASAP" value="1">
			</member>
			<member name="C:CONNSTAT_DISCONNECT_ASAP_SILNT" value="2">
			</member>
			<member name="C:CONNSTAT_DISCONNECT_ON_NO_ACK" value="3">
			</member>
			<member name="C:CONNSTAT_REQUESTED_CONNECTION" value="4">
			</member>
			<member name="C:CONNSTAT_HANDLING_CONN_REQ" value="5">
			</member>
			<member name="C:CONNSTAT_UNVERIFIED_SENDER" value="6">
			</member>
			<member name="C:CONNSTAT_SET_ENCRYPTION" value="7">
			</member>
			<member name="C:CONNSTAT_CONNECTED" value="8">
			</member>
			<referrer name="_@CONNECTION_STATUS"/>
			<library>omp_network</library>  <summary>Connection statuses</summary> 
		</member>
		<member name="T:__CP_TYPE" value="9">
			<tagname value="t_CP_TYPE"/>
			<member name="C:UNKNOWN_CP_TYPE" value="-1">
			</member>
			<member name="C:CP_TYPE_GROUND_NORMAL" value="0">
			</member>
			<member name="C:CP_TYPE_GROUND_FINISH" value="1">
			</member>
			<member name="C:CP_TYPE_GROUND_EMPTY" value="2">
			</member>
			<member name="C:CP_TYPE_AIR_NORMAL" value="3">
			</member>
			<member name="C:CP_TYPE_AIR_FINISH" value="4">
			</member>
			<member name="C:CP_TYPE_AIR_ROTATING" value="5">
			</member>
			<member name="C:CP_TYPE_AIR_STROBING" value="6">
			</member>
			<member name="C:CP_TYPE_AIR_SWINGING" value="7">
			</member>
			<member name="C:CP_TYPE_AIR_BOBBING" value="8">
			</member>
			<referrer name="_@CP_TYPE"/>
			<library>omp_checkpoint</library> 
		</member>
		<member name="T:__DIALOG_STYLE" value="6">
			<tagname value="t_DIALOG_STYLE"/>
			<member name="C:UNKNOWN_DIALOG_STYLE" value="-1">
			</member>
			<member name="C:DIALOG_STYLE_MSGBOX" value="0">
			</member>
			<member name="C:DIALOG_STYLE_INPUT" value="1">
			</member>
			<member name="C:DIALOG_STYLE_LIST" value="2">
			</member>
			<member name="C:DIALOG_STYLE_PASSWORD" value="3">
			</member>
			<member name="C:DIALOG_STYLE_TABLIST" value="4">
			</member>
			<member name="C:DIALOG_STYLE_TABLIST_HEADERS" value="5">
			</member>
			<referrer name="_@DIALOG_STYLE"/>
			<library>omp_dialog</library>  <summary>Player GUI dialog</summary> 
		</member>
		<member name="T:__DOWNLOAD_REQUEST" value="3">
			<tagname value="t_DOWNLOAD_REQUEST"/>
			<member name="C:UNKNOWN_DOWNLOAD_REQUEST" value="-1">
			</member>
			<member name="C:DOWNLOAD_REQUEST_EMPTY" value="0">
			</member>
			<member name="C:DOWNLOAD_REQUEST_MODEL_FILE" value="1">
			</member>
			<member name="C:DOWNLOAD_REQUEST_TEXTURE_FILE" value="2">
			</member>
			<referrer name="_@DOWNLOAD_REQUEST"/>
			<library>omp_network</library>  <summary>Artwork/NetModels</summary> 
		</member>
		<member name="T:__EDIT_RESPONSE" value="3">
			<tagname value="t_EDIT_RESPONSE"/>
			<member name="C:UNKNOWN_EDIT_RESPONSE" value="-1">
			</member>
			<member name="C:EDIT_RESPONSE_CANCEL" value="0">
			</member>
			<member name="C:EDIT_RESPONSE_FINAL" value="1">
			</member>
			<member name="C:EDIT_RESPONSE_UPDATE" value="2">
			</member>
			<referrer name="_@EDIT_RESPONSE"/>
			<library>omp_object</library> 
		</member>
		<member name="T:__FORCE_SYNC" value="3">
			<tagname value="t_FORCE_SYNC"/>
			<member name="C:UNKNOWN_FORCE_SYNC" value="-1">
			</member>
			<member name="C:SYNC_NONE" value="0">
			</member>
			<member name="C:SYNC_ALL" value="1">
			</member>
			<member name="C:SYNC_OTHER" value="2">
			</member>
			<referrer name="_@FORCE_SYNC"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__HTTP_ERROR" value="7">
			<tagname value="t_HTTP_ERROR"/>
			<member name="C:UNKNOWN_HTTP_ERROR" value="-1">
			</member>
			<member name="C:HTTP_ERROR_BAD_HOST" value="1">
			</member>
			<member name="C:HTTP_ERROR_NO_SOCKET" value="2">
			</member>
			<member name="C:HTTP_ERROR_CANT_CONNECT" value="3">
			</member>
			<member name="C:HTTP_ERROR_CANT_WRITE" value="4">
			</member>
			<member name="C:HTTP_ERROR_CONTENT_TOO_BIG" value="5">
			</member>
			<member name="C:HTTP_ERROR_MALFORMED_RESPONSE" value="6">
			</member>
			<referrer name="_@HTTP_ERROR"/>
			<library>omp_http</library>  <summary>HTTP error response codes</summary>  <remarks>  These codes compliment ordinary HTTP response codes returned in 'responseCode'  (10x) (20x OK) (30x Moved) (40x Unauthorised) (50x Server Error)  </remarks> 
		</member>
		<member name="T:__HTTP_METHOD" value="4">
			<tagname value="t_HTTP_METHOD"/>
			<member name="C:UNKNOWN_HTTP_METHOD" value="-1">
			</member>
			<member name="C:HTTP_GET" value="1">
			</member>
			<member name="C:HTTP_POST" value="2">
			</member>
			<member name="C:HTTP_HEAD" value="3">
			</member>
			<referrer name="_@HTTP_METHOD"/>
			<library>omp_http</library>  <summary>HTTP request types</summary> 
		</member>
		<member name="T:__KEY" value="256">
			<tagname value="t_KEY"/>
			<member name="C:UNKNOWN_KEY" value="-1">
			</member>
			<member name="C:KEY_NONE" value="0">
			</member>
			<member name="C:KEY_ACTION" value="1">
			</member>
			<member name="C:KEY_CROUCH" value="2">
			</member>
			<member name="C:KEY_FIRE" value="4">
			</member>
			<member name="C:KEY_SPRINT" value="8">
			</member>
			<member name="C:KEY_SECONDARY_ATTACK" value="16">
			</member>
			<member name="C:KEY_JUMP" value="32">
			</member>
			<member name="C:KEY_LOOK_RIGHT" value="64">
			</member>
			<member name="C:KEY_HANDBRAKE" value="128">
			</member>
			<member name="C:KEY_LOOK_LEFT" value="256">
			</member>
			<member name="C:KEY_SUBMISSION" value="512">
			</member>
			<member name="C:KEY_LOOK_BEHIND" value="512">
			</member>
			<member name="C:KEY_WALK" value="1024">
			</member>
			<member name="C:KEY_ANALOG_UP" value="2048">
			</member>
			<member name="C:KEY_ANALOG_DOWN" value="4096">
			</member>
			<member name="C:KEY_ANALOG_LEFT" value="8192">
			</member>
			<member name="C:KEY_ANALOG_RIGHT" value="16384">
			</member>
			<member name="C:KEY_YES" value="65536">
			</member>
			<member name="C:KEY_NO" value="131072">
			</member>
			<member name="C:KEY_CTRL_BACK" value="262144">
			</member>
			<member name="C:KEY_UP" value="-128">
			</member>
			<member name="C:KEY_DOWN" value="128">
			</member>
			<member name="C:KEY_LEFT" value="-128">
			</member>
			<member name="C:KEY_RIGHT" value="128">
			</member>
			<referrer name="_@KEY"/>
			<library>omp_player</library>  <summary>Keys</summary> 
		</member>
		<member name="T:__LANDING_GEAR_STATE" value="2">
			<tagname value="t_LANDING_GEAR_STATE"/>
			<member name="C:LANDING_GEAR_STATE_DOWN" value="0">
			</member>
			<member name="C:LANDING_GEAR_STATE_UP" value="1">
			</member>
			<referrer name="_@LANDING_GEAR_STATE"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__MAPICON" value="4">
			<tagname value="t_MAPICON"/>
			<member name="C:UNKNOWN_MAPICON" value="-1">
			</member>
			<member name="C:MAPICON_LOCAL" value="0">
			</member>
			<member name="C:MAPICON_GLOBAL" value="1">
			</member>
			<member name="C:MAPICON_LOCAL_CHECKPOINT" value="2">
			</member>
			<member name="C:MAPICON_GLOBAL_CHECKPOINT" value="3">
			</member>
			<referrer name="_@MAPICON"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__OBJECT_MATERIAL_SIZE" value="150">
			<tagname value="t_OBJECT_MATERIAL_SIZE"/>
			<member name="C:UNKNOWN_OBJECT_MATERIAL_SIZE" value="-1">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_32x32" value="10">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_64x32" value="20">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_64x64" value="30">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x32" value="40">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x64" value="50">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_128x128" value="60">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x32" value="70">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x64" value="80">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x128" value="90">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_256x256" value="100">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x64" value="110">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x128" value="120">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x256" value="130">
				<size value="10"/>
			</member>
			<member name="C:OBJECT_MATERIAL_SIZE_512x512" value="140">
				<size value="10"/>
			</member>
			<referrer name="_@OBJECT_MATERIAL_SIZE"/>
			<library>omp_object</library> 
		</member>
		<member name="T:__OBJECT_MATERIAL_TEXT_ALIGN" value="3">
			<tagname value="t_OBJECT_MATERIAL_TEXT_ALIGN"/>
			<member name="C:UNKNOWN_OBJECT_MATERIAL_TEXT_ALIGN" value="-1">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_CENTRE" value="1">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_CENTER" value="1">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_RIGHT" value="2">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_LEFT" value="0">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_CENT" value="1">
			</member>
			<member name="C:OBJECT_MATERIAL_TEXT_ALIGN_RIGT" value="2">
			</member>
			<referrer name="_@OBJECT_MATERIAL_TEXT_ALIGN"/>
			<library>omp_object</library> 
		</member>
		<member name="T:__PLAYER_MARKERS_MODE" value="3">
			<tagname value="t_PLAYER_MARKERS_MODE"/>
			<member name="C:UNKNOWN_PLAYER_MARKERS_MODE" value="-1">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_UNKNOWN" value="-1">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_OFF" value="0">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_GLOBAL" value="1">
			</member>
			<member name="C:PLAYER_MARKERS_MODE_STREAMED" value="2">
			</member>
			<referrer name="_@PLAYER_MARKERS_MODE"/>
			<library>omp_core</library>  <summary>Marker modes used by <c>ShowPlayerMarkers()</c></summary> 
		</member>
		<member name="T:__PLAYER_RECORDING_TYPE" value="3">
			<tagname value="t_PLAYER_RECORDING_TYPE"/>
			<member name="C:UNKNOWN_PLAYER_RECORDING_TYPE" value="-1">
			</member>
			<member name="C:PLAYER_RECORDING_TYPE_NONE" value="0">
			</member>
			<member name="C:PLAYER_RECORDING_TYPE_DRIVER" value="1">
			</member>
			<member name="C:PLAYER_RECORDING_TYPE_ONFOOT" value="2">
			</member>
			<referrer name="_@PLAYER_RECORDING_TYPE"/>
			<library>omp_player</library>  <summary>Recording for NPC playback</summary> 
		</member>
		<member name="T:__PLAYER_STATE" value="10">
			<tagname value="t_PLAYER_STATE"/>
			<member name="C:UNKNOWN_PLAYER_STATE" value="-1">
			</member>
			<member name="C:PLAYER_STATE_NONE" value="0">
			</member>
			<member name="C:PLAYER_STATE_ONFOOT" value="1">
			</member>
			<member name="C:PLAYER_STATE_DRIVER" value="2">
			</member>
			<member name="C:PLAYER_STATE_PASSENGER" value="3">
			</member>
			<member name="C:PLAYER_STATE_WASTED" value="7">
			</member>
			<member name="C:PLAYER_STATE_SPAWNED" value="8">
			</member>
			<member name="C:PLAYER_STATE_SPECTATING" value="9">
			</member>
			<referrer name="_@PLAYER_STATE"/>
			<library>omp_player</library>  <summary>States</summary> 
		</member>
		<member name="T:__SELECT_OBJECT" value="3">
			<tagname value="t_SELECT_OBJECT"/>
			<member name="C:UNKNOWN_SELECT_OBJECT" value="-1">
			</member>
			<member name="C:SELECT_OBJECT_GLOBAL_OBJECT" value="1">
			</member>
			<member name="C:SELECT_OBJECT_PLAYER_OBJECT" value="2">
			</member>
			<referrer name="_@SELECT_OBJECT"/>
			<library>omp_object</library> 
		</member>
		<member name="T:__SPECIAL_ACTION" value="69">
			<tagname value="t_SPECIAL_ACTION"/>
			<member name="C:UNKNOWN_SPECIAL_ACTION" value="-1">
			</member>
			<member name="C:SPECIAL_ACTION_NONE" value="0">
			</member>
			<member name="C:SPECIAL_ACTION_DUCK" value="1">
			</member>
			<member name="C:SPECIAL_ACTION_USEJETPACK" value="2">
			</member>
			<member name="C:SPECIAL_ACTION_ENTER_VEHICLE" value="3">
			</member>
			<member name="C:SPECIAL_ACTION_EXIT_VEHICLE" value="4">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE1" value="5">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE2" value="6">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE3" value="7">
			</member>
			<member name="C:SPECIAL_ACTION_DANCE4" value="8">
			</member>
			<member name="C:SPECIAL_ACTION_HANDSUP" value="10">
			</member>
			<member name="C:SPECIAL_ACTION_USECELLPHONE" value="11">
			</member>
			<member name="C:SPECIAL_ACTION_SITTING" value="12">
			</member>
			<member name="C:SPECIAL_ACTION_STOPUSECELLPHONE" value="13">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_BEER" value="20">
			</member>
			<member name="C:SPECIAL_ACTION_SMOKE_CIGGY" value="21">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_WINE" value="22">
			</member>
			<member name="C:SPECIAL_ACTION_DRINK_SPRUNK" value="23">
			</member>
			<member name="C:SPECIAL_ACTION_CUFFED" value="24">
			</member>
			<member name="C:SPECIAL_ACTION_CARRY" value="25">
			</member>
			<member name="C:SPECIAL_ACTION_PISSING" value="68">
			</member>
			<referrer name="_@SPECIAL_ACTION"/>
			<library>omp_player</library> 
		</member>
		<member name="T:__SPECTATE_MODE" value="4">
			<tagname value="t_SPECTATE_MODE"/>
			<member name="C:UNKNOWN_SPECTATE_MODE" value="-1">
			</member>
			<member name="C:SPECTATE_MODE_NORMAL" value="1">
			</member>
			<member name="C:SPECTATE_MODE_FIXED" value="2">
			</member>
			<member name="C:SPECTATE_MODE_SIDE" value="3">
			</member>
			<referrer name="_@SPECTATE_MODE"/>
			<library>omp_player</library>  <summary>Spectating</summary> 
		</member>
		<member name="T:__SQLITE_OPEN" value="33554433">
			<tagname value="SQLITE_OPEN"/>
			<member name="C:UNKNOWN_SQLITE_OPEN" value="-1">
			</member>
			<member name="C:SQLITE_OPEN_READONLY" value="1">
			</member>
			<member name="C:SQLITE_OPEN_READWRITE" value="2">
			</member>
			<member name="C:SQLITE_OPEN_CREATE" value="4">
			</member>
			<member name="C:SQLITE_OPEN_DELETEONCLOSE" value="8">
			</member>
			<member name="C:SQLITE_OPEN_EXCLUSIVE" value="16">
			</member>
			<member name="C:SQLITE_OPEN_AUTOPROXY" value="32">
			</member>
			<member name="C:SQLITE_OPEN_URI" value="64">
			</member>
			<member name="C:SQLITE_OPEN_MEMORY" value="128">
			</member>
			<member name="C:SQLITE_OPEN_MAIN_DB" value="256">
			</member>
			<member name="C:SQLITE_OPEN_TEMP_DB" value="512">
			</member>
			<member name="C:SQLITE_OPEN_TRANSIENT_DB" value="1024">
			</member>
			<member name="C:SQLITE_OPEN_MAIN_JOURNAL" value="2048">
			</member>
			<member name="C:SQLITE_OPEN_TEMP_JOURNAL" value="4096">
			</member>
			<member name="C:SQLITE_OPEN_SUBJOURNAL" value="8192">
			</member>
			<member name="C:SQLITE_OPEN_SUPER_JOURNAL" value="16384">
			</member>
			<member name="C:SQLITE_OPEN_NOMUTEX" value="32768">
			</member>
			<member name="C:SQLITE_OPEN_FULLMUTEX" value="65536">
			</member>
			<member name="C:SQLITE_OPEN_SHAREDCACHE" value="131072">
			</member>
			<member name="C:SQLITE_OPEN_PRIVATECACHE" value="262144">
			</member>
			<member name="C:SQLITE_OPEN_WAL" value="524288">
			</member>
			<member name="C:SQLITE_OPEN_NOFOLLOW" value="16777216">
			</member>
			<member name="C:SQLITE_OPEN_EXRESCODE" value="33554432">
			</member>
			<referrer name="_@SQLITE_OPEN"/>
			<library>omp_database</library> 
		</member>
		<member name="T:__TEXT_DRAW_ALIGN" value="4">
			<tagname value="t_TEXT_DRAW_ALIGN"/>
			<member name="C:UNKNOWN_TEXT_DRAW_ALIGN" value="-1">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_LEFT" value="1">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_CENTRE" value="2">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_CENTER" value="2">
			</member>
			<member name="C:TEXT_DRAW_ALIGN_RIGHT" value="3">
			</member>
			<referrer name="_@TEXT_DRAW_ALIGN"/>
			<library>omp_textdraw</library>  <summary>Text draw alignment</summary> 
		</member>
		<member name="T:__TEXT_DRAW_FONT" value="6">
			<tagname value="t_TEXT_DRAW_FONT"/>
			<member name="C:UNKNOWN_TEXT_DRAW_FONT" value="-1">
			</member>
			<member name="C:TEXT_DRAW_FONT_0" value="0">
			</member>
			<member name="C:TEXT_DRAW_FONT_1" value="1">
			</member>
			<member name="C:TEXT_DRAW_FONT_2" value="2">
			</member>
			<member name="C:TEXT_DRAW_FONT_3" value="3">
			</member>
			<member name="C:TEXT_DRAW_FONT_SPRITE_DRAW" value="4">
			</member>
			<member name="C:TEXT_DRAW_FONT_MODEL_PREVIEW" value="5">
			</member>
			<member name="C:TEXT_DRAW_FONT_BANK" value="0">
			</member>
			<member name="C:TEXT_DRAW_FONT_STANDARD" value="1">
			</member>
			<member name="C:TEXT_DRAW_FONT_SPACEAGE" value="2">
			</member>
			<member name="C:TEXT_DRAW_FONT_HEADING" value="3">
			</member>
			<member name="C:TEXT_DRAW_FONT_BECKETT_REGULAR" value="0">
			</member>
			<member name="C:TEXT_DRAW_FONT_AHARONI_BOLD" value="1">
			</member>
			<member name="C:TEXT_DRAW_FONT_BANK_GOTHIC" value="2">
			</member>
			<member name="C:TEXT_DRAW_FONT_PRICEDOWN" value="3">
			</member>
			<member name="C:TEXT_DRAW_FONT_SPRITE" value="4">
			</member>
			<member name="C:TEXT_DRAW_FONT_PREVIEW" value="5">
			</member>
			<referrer name="_@TEXT_DRAW_FONT"/>
			<library>omp_textdraw</library>  <summary>Text draw font</summary> 
		</member>
		<member name="T:__VARTYPE" value="4">
			<tagname value="t_VARTYPE"/>
			<member name="C:UNKNOWN_VARTYPE" value="-1">
			</member>
			<member name="C:VARTYPE_NONE" value="0">
			</member>
			<member name="C:VARTYPE_INT" value="1">
			</member>
			<member name="C:VARTYPE_STRING" value="2">
			</member>
			<member name="C:VARTYPE_FLOAT" value="3">
			</member>
			<member name="C:SERVER_VARTYPE_NONE" value="0">
			</member>
			<member name="C:SERVER_VARTYPE_INT" value="1">
			</member>
			<member name="C:SERVER_VARTYPE_STRING" value="2">
			</member>
			<member name="C:SERVER_VARTYPE_FLOAT" value="3">
			</member>
			<member name="C:PLAYER_VARTYPE_NONE" value="0">
			</member>
			<member name="C:PLAYER_VARTYPE_INT" value="1">
			</member>
			<member name="C:PLAYER_VARTYPE_STRING" value="2">
			</member>
			<member name="C:PLAYER_VARTYPE_FLOAT" value="3">
			</member>
			<referrer name="_@VARTYPE"/>
			<library>omp_variable</library>  <summary>PVar enumeration</summary> 
		</member>
		<member name="T:__VEHICLE_DOOR_STATUS" value="134217728">
			<tagname value="t_VEHICLE_DOOR_STATUS"/>
			<member name="C:UNKNOWN_VEHICLE_DOOR_STATUS" value="-1">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_NONE" value="0">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BONNET_OPEN" value="1">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BONNET_DAMAGED" value="2">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BONNET_MISSING" value="4">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_HOOD_OPEN" value="1">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_HOOD_DAMAGED" value="2">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_HOOD_MISSING" value="4">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BOOT_OPEN" value="256">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BOOT_DAMAGED" value="512">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_BOOT_MISSING" value="1024">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_TRUNK_OPEN" value="256">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_TRUNK_DAMAGED" value="512">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_TRUNK_MISSING" value="1024">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_LEFT_OPEN" value="65536">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_LEFT_DAMAGED" value="131072">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_LEFT_MISSING" value="262144">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_DRIVER_OPEN" value="65536">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_DRIVER_DAMAGED" value="131072">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_DRIVER_MISSING" value="262144">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_RIGHT_OPEN" value="16777216">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_RIGHT_DAMAGED" value="33554432">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_FRONT_RIGHT_MISSING" value="67108864">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_PASSENGER_OPEN" value="16777216">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_PASSENGER_DAMAGED" value="33554432">
			</member>
			<member name="C:VEHICLE_DOOR_STATUS_PASSENGER_MISSING" value="67108864">
			</member>
			<member name="C:CARDOOR_NONE" value="0">
			</member>
			<member name="C:CARDOOR_BONNET_OPEN" value="1">
			</member>
			<member name="C:CARDOOR_BONNET_DAMAGED" value="2">
			</member>
			<member name="C:CARDOOR_BONNET_MISSING" value="4">
			</member>
			<member name="C:CARDOOR_HOOD_OPEN" value="1">
			</member>
			<member name="C:CARDOOR_HOOD_DAMAGED" value="2">
			</member>
			<member name="C:CARDOOR_HOOD_MISSING" value="4">
			</member>
			<member name="C:CARDOOR_BOOT_OPEN" value="256">
			</member>
			<member name="C:CARDOOR_BOOT_DAMAGED" value="512">
			</member>
			<member name="C:CARDOOR_BOOT_MISSING" value="1024">
			</member>
			<member name="C:CARDOOR_TRUNK_OPEN" value="256">
			</member>
			<member name="C:CARDOOR_TRUNK_DAMAGED" value="512">
			</member>
			<member name="C:CARDOOR_TRUNK_MISSING" value="1024">
			</member>
			<member name="C:CARDOOR_FRONT_LEFT_OPEN" value="65536">
			</member>
			<member name="C:CARDOOR_FRONT_LEFT_DAMAGED" value="131072">
			</member>
			<member name="C:CARDOOR_FRONT_LEFT_MISSING" value="262144">
			</member>
			<member name="C:CARDOOR_DRIVER_OPEN" value="65536">
			</member>
			<member name="C:CARDOOR_DRIVER_DAMAGED" value="131072">
			</member>
			<member name="C:CARDOOR_DRIVER_MISSING" value="262144">
			</member>
			<member name="C:CARDOOR_FRONT_RIGHT_OPEN" value="16777216">
			</member>
			<member name="C:CARDOOR_FRONT_RIGHT_DAMAGED" value="33554432">
			</member>
			<member name="C:CARDOOR_FRONT_RIGHT_MISSING" value="67108864">
			</member>
			<member name="C:CARDOOR_PASSENGER_OPEN" value="16777216">
			</member>
			<member name="C:CARDOOR_PASSENGER_DAMAGED" value="33554432">
			</member>
			<member name="C:CARDOOR_PASSENGER_MISSING" value="67108864">
			</member>
			<referrer name="_@VEHICLE_DOOR_STATUS"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__VEHICLE_LIGHT_STATUS" value="65">
			<tagname value="t_VEHICLE_LIGHT_STATUS"/>
			<member name="C:UNKNOWN_VEHICLE_LIGHT_STATUS" value="0">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_NONE" value="0">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_FRONT_LEFT_BROKEN" value="1">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_FRONT_RIGHT_BROKEN" value="4">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_DRIVER_BROKEN" value="1">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_PASSENGER_BROKEN" value="4">
			</member>
			<member name="C:VEHICLE_LIGHT_STATUS_REAR_BROKEN" value="64">
			</member>
			<member name="C:CARLIGHT_FRONT_LEFT_BROKEN" value="1">
			</member>
			<member name="C:CARLIGHT_FRONT_RIGHT_BROKEN" value="4">
			</member>
			<member name="C:CARLIGHT_DRIVER_BROKEN" value="1">
			</member>
			<member name="C:CARLIGHT_PASSENGER_BROKEN" value="4">
			</member>
			<member name="C:CARLIGHT_REAR_BROKEN" value="64">
			</member>
			<referrer name="_@VEHICLE_LIGHT_STATUS"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__VEHICLE_PANEL_STATUS" value="1">
			<tagname value="t_VEHICLE_PANEL_STATUS"/>
			<member name="C:UNKNOWN_VEHICLE_PANEL_STATUS" value="-1">
			</member>
			<member name="C:VEHICLE_PANEL_STATUS_NONE" value="0">
			</member>
			<referrer name="_@VEHICLE_PANEL_STATUS"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__VEHICLE_TYRE_STATUS" value="2">
			<tagname value="t_VEHICLE_TYRE_STATUS"/>
			<member name="C:UNKNOWN_VEHICLE_TYRE_STATUS" value="-1">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_NONE" value="0">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_FRONT_LEFT_POPPED" value="8">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_FRONT_RIGHT_POPPED" value="2">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_REAR_LEFT_POPPED" value="4">
			</member>
			<member name="C:VEHICLE_TYRE_STATUS_REAR_RIGHT_POPPED" value="1">
			</member>
			<member name="C:VEHICLE_TIRE_STATUS_FRONT_LEFT_POPPED" value="8">
			</member>
			<member name="C:VEHICLE_TIRE_STATUS_FRONT_RIGHT_POPPED" value="2">
			</member>
			<member name="C:VEHICLE_TIRE_STATUS_REAR_LEFT_POPPED" value="4">
			</member>
			<member name="C:VEHICLE_TIRE_STATUS_REAR_RIGHT_POPPED" value="1">
			</member>
			<member name="C:CARTYRE_FRONT_LEFT_POPPED" value="8">
			</member>
			<member name="C:CARTYRE_FRONT_RIGHT_POPPED" value="2">
			</member>
			<member name="C:CARTYRE_REAR_LEFT_POPPED" value="4">
			</member>
			<member name="C:CARTYRE_REAR_RIGHT_POPPED" value="1">
			</member>
			<member name="C:CARTIRE_FRONT_LEFT_POPPED" value="8">
			</member>
			<member name="C:CARTIRE_FRONT_RIGHT_POPPED" value="2">
			</member>
			<member name="C:CARTIRE_REAR_LEFT_POPPED" value="4">
			</member>
			<member name="C:CARTIRE_REAR_RIGHT_POPPED" value="1">
			</member>
			<referrer name="_@VEHICLE_TYRE_STATUS"/>
			<library>omp_vehicle</library> 
		</member>
		<member name="T:__WEAPONSTATE" value="4">
			<tagname value="t_WEAPONSTATE"/>
			<member name="C:UNKNOWN_WEAPONSTATE" value="-1">
			</member>
			<member name="C:WEAPONSTATE_UNKNOWN" value="-1">
			</member>
			<member name="C:WEAPONSTATE_NO_BULLETS" value="0">
			</member>
			<member name="C:WEAPONSTATE_LAST_BULLET" value="1">
			</member>
			<member name="C:WEAPONSTATE_MORE_BULLETS" value="2">
			</member>
			<member name="C:WEAPONSTATE_RELOADING" value="3">
			</member>
			<referrer name="_@WEAPONSTATE"/>
			<library>omp_player</library> 
		</member>
		<member name="T:autohauscarenum" value="8">
			<tagname value="autohauscarenum"/>
			<member name="C:id_x" value="0">
			</member>
			<member name="C:model" value="1">
			</member>
			<member name="C:c_x" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:c_y" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:c_z" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:c_r" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:c_preis" value="6">
			</member>
			<member name="C:autohaus_id" value="7">
			</member>
		</member>
		<member name="T:autohausenum" value="4">
			<tagname value="autohausenum"/>
			<member name="C:s_x" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:s_y" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:s_z" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:s_r" value="3">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:buildingsenum" value="73">
			<tagname value="buildingsenum"/>
			<member name="C:b_x" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:b_y" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:b_z" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:b_ix" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:b_iy" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:b_iz" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:b_interior" value="6">
			</member>
			<member name="C:b_shopname" value="7">
				<size value="64"/>
			</member>
			<member name="C:EnterArea" value="71">
			</member>
			<member name="C:ExitArea" value="72">
			</member>
		</member>
		<member name="T:busEnum" value="3">
			<tagname value="busEnum"/>
			<member name="C:bj_x" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:bj_y" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:bj_z" value="2">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:carenum" value="37">
			<tagname value="carenum"/>
			<member name="C:model" value="0">
			</member>
			<member name="C:id_x" value="1">
			</member>
			<member name="C:besitzer" value="2">
				<size value="24"/>
			</member>
			<member name="C:c_x" value="26">
				<tagname value="Float"/>
			</member>
			<member name="C:c_y" value="27">
				<tagname value="Float"/>
			</member>
			<member name="C:c_z" value="28">
				<tagname value="Float"/>
			</member>
			<member name="C:c_r" value="29">
				<tagname value="Float"/>
			</member>
			<member name="C:db_id" value="30">
			</member>
			<member name="C:farbe1" value="31">
			</member>
			<member name="C:farbe2" value="32">
			</member>
			<member name="C:kennzeichen" value="33">
			</member>
			<member name="C:fraktion" value="34">
			</member>
			<member name="C:dl" value="35">
				<tagname value="Float"/>
			</member>
			<member name="C:abgeschlossen" value="36">
			</member>
		</member>
		<member name="T:fbaseenum" value="13">
			<tagname value="fbaseenum"/>
			<member name="C:fb_id" value="0">
			</member>
			<member name="C:f_inter" value="1">
			</member>
			<member name="C:f_world" value="2">
			</member>
			<member name="C:f_color" value="3">
			</member>
			<member name="C:f_dutyx" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:f_dutyy" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:f_dutyz" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:f_enterx" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:f_entery" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:f_enterz" value="9">
				<tagname value="Float"/>
			</member>
			<member name="C:f_exitx" value="10">
				<tagname value="Float"/>
			</member>
			<member name="C:f_exity" value="11">
				<tagname value="Float"/>
			</member>
			<member name="C:f_exitz" value="12">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:fcarenum" value="73">
			<tagname value="fcarenum"/>
			<member name="C:fcarid" value="0">
			</member>
			<member name="C:model" value="1">
			</member>
			<member name="C:fraktion" value="2">
			</member>
			<member name="C:fc_x" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:fc_y" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:fc_z" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:fc_r" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:farbe1" value="7">
			</member>
			<member name="C:farbe2" value="8">
			</member>
			<member name="C:kennzeichen" value="9">
			</member>
		</member>
		<member name="T:frakenum" value="791">
			<tagname value="frakenum"/>
			<member name="C:f_ID" value="0">
			</member>
			<member name="C:f_name" value="1">
				<size value="128"/>
			</member>
			<member name="C:f_x" value="129">
				<tagname value="Float"/>
			</member>
			<member name="C:f_y" value="130">
				<tagname value="Float"/>
			</member>
			<member name="C:f_z" value="131">
				<tagname value="Float"/>
			</member>
			<member name="C:f_r" value="132">
				<tagname value="Float"/>
			</member>
			<member name="C:f_green" value="133">
			</member>
			<member name="C:f_gold" value="134">
			</member>
			<member name="C:f_lsd" value="135">
			</member>
			<member name="C:f_kasse" value="136">
			</member>
			<member name="C:fmotd" value="137">
				<size value="128"/>
			</member>
			<member name="C:ep" value="265">
			</member>
			<member name="C:rangnull" value="266">
				<size value="75"/>
			</member>
			<member name="C:rangeins" value="341">
				<size value="75"/>
			</member>
			<member name="C:rangzwei" value="416">
				<size value="75"/>
			</member>
			<member name="C:rangdrei" value="491">
				<size value="75"/>
			</member>
			<member name="C:rangvier" value="566">
				<size value="75"/>
			</member>
			<member name="C:rangfunf" value="641">
				<size value="75"/>
			</member>
			<member name="C:rangsechs" value="716">
				<size value="75"/>
			</member>
		</member>
		<member name="T:hausEnum" value="140">
			<tagname value="hausEnum"/>
			<member name="C:h_x" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:h_y" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:h_z" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:ih_x" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:ih_y" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:ih_z" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:h_interior" value="6">
			</member>
			<member name="C:h_besitzer" value="7">
				<size value="128"/>
			</member>
			<member name="C:h_preis" value="135">
			</member>
			<member name="C:h_level" value="136">
			</member>
			<member name="C:h_id" value="137">
			</member>
			<member name="C:h_pickup" value="138">
			</member>
			<member name="C:h_text" value="139">
				<tagname value="Text3D"/>
			</member>
		</member>
		<member name="T:iraumenum" value="6">
			<tagname value="iraumenum"/>
			<member name="C:i_x" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:i_y" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:i_z" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:i_r" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:world" value="4">
			</member>
			<member name="C:i_int" value="5">
			</member>
		</member>
		<member name="T:jobEnum" value="131">
			<tagname value="jobEnum"/>
			<member name="C:jobname" value="0">
				<size value="128"/>
			</member>
			<member name="C:j_x" value="128">
				<tagname value="Float"/>
			</member>
			<member name="C:j_y" value="129">
				<tagname value="Float"/>
			</member>
			<member name="C:j_z" value="130">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:noclipenum" value="7">
			<tagname value="noclipenum"/>
			<member name="C:cameramode" value="0">
			</member>
			<member name="C:flyobject" value="1">
			</member>
			<member name="C:mode" value="2">
			</member>
			<member name="C:lrold" value="3">
			</member>
			<member name="C:udold" value="4">
			</member>
			<member name="C:lastmove" value="5">
			</member>
			<member name="C:accelmul" value="6">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:playerInfo" value="353">
			<tagname value="playerInfo"/>
			<member name="C:db_id" value="0">
			</member>
			<member name="C:pName" value="1">
			</member>
			<member name="C:eingeloggt" value="2">
			</member>
			<member name="C:plevel" value="3">
			</member>
			<member name="C:padminlevel" value="4">
			</member>
			<member name="C:pskin" value="5">
			</member>
			<member name="C:sx" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:sy" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:sz" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:pfSkin" value="9">
			</member>
			<member name="C:pfraktion" value="10">
			</member>
			<member name="C:pfrang" value="11">
			</member>
			<member name="C:pfleader" value="12">
			</member>
			<member name="C:pspawnchange" value="13">
				<size value="64"/>
			</member>
			<member name="C:pdonut" value="77">
			</member>
			<member name="C:pgreen" value="78">
			</member>
			<member name="C:pgold" value="79">
			</member>
			<member name="C:plsd" value="80">
			</member>
			<member name="C:pdeaths" value="81">
			</member>
			<member name="C:pOL" value="82">
			</member>
			<member name="C:ptazer" value="83">
			</member>
			<member name="C:pMoney" value="84">
			</member>
			<member name="C:pwanteds" value="85">
			</member>
			<member name="C:login" value="86">
				<size value="128"/>
			</member>
			<member name="C:logout" value="214">
				<size value="128"/>
			</member>
			<member name="C:pfahrzeuge" value="342">
				<size value="5"/>
			</member>
			<member name="C:dx" value="347">
				<tagname value="Float"/>
			</member>
			<member name="C:dy" value="348">
				<tagname value="Float"/>
			</member>
			<member name="C:dz" value="349">
				<tagname value="Float"/>
			</member>
			<member name="C:pPayDay" value="350">
			</member>
			<member name="C:pXP" value="351">
			</member>
			<member name="C:pXPMax" value="352">
			</member>
		</member>
		<member name="T:trashEnum" value="3">
			<tagname value="trashEnum"/>
			<member name="C:t_x" value="0">
				<tagname value="Float"/>
			</member>
			<member name="C:t_y" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:t_z" value="2">
				<tagname value="Float"/>
			</member>
		</member>

		<!-- constants -->
		<member name="C:__PawnBuild" value="11">
		</member>
		<member name="C:__namemax" value="63">
			<summary>  The maximum length of symbol names, excluding any NULLs.  </summary> 
		</member>
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="CancelFlyMode"/>
			<referrer name="loadBizes"/>
			<referrer name="stopMotor"/>
			<referrer name="OnCefInitialize"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_eveh"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_set"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_houses"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_cveh"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="FlyMode"/>
			<referrer name="saveFrakCarToDB"/>
			<referrer name="hatPlayerHaus"/>
			<referrer name="updateHaus"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="isMotorOn"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_netstat"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="saveCarToDB"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="unfreezePlayer"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_cveh"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="C:undefined" value="-1">
			<tagname value="bool"/>
			<summary>  An invalid value (<c>-1</c>) as a boolean for some natives (most notably  the vehicle param ones) that can skip `true`/`false` parameters.  </summary> 
		</member>

		<!-- variables -->
		<member name="F:JPs">
			<referrer name="loadJobs"/>
		</member>
		<member name="F:SSCANF_gInit">
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="zcmd_OnGameModeInit"/>
		</member>
		<member name="F:SSCANF_gOPC">
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="Streamer_OnPlayerConnect"/>
		</member>
		<member name="F:SSCANF_gOPDC">
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="Streamer_OnPlayerDisconnect"/>
		</member>
		<member name="F:Streamer_IncludeFileVersion">
			<attribute name="public"/>
		</member>
		<member name="F:Streamer_g_OPC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
		</member>
		<member name="F:Streamer_g_OPDC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerDisconnect"/>
		</member>
		<member name="F:Streamer_g_OPEC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="F:Streamer_g_OPEO">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerEditObject"/>
		</member>
		<member name="F:Streamer_g_OPERC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
		</member>
		<member name="F:Streamer_g_OPLC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
		</member>
		<member name="F:Streamer_g_OPLRC">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
		</member>
		<member name="F:Streamer_g_OPPP">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerPickUpPickup"/>
		</member>
		<member name="F:Streamer_g_OPSO">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerSelectObject"/>
		</member>
		<member name="F:Tacho">
			<tagname value="Text"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="sekunde"/>
			<referrer name="OnPlayerStateChange"/>
		</member>
		<member name="F:Tachobox">
			<tagname value="Text"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerStateChange"/>
		</member>
		<member name="F:__OPEN_MP_VERSION">
			<attribute name="public"/>
			<remarks>  If running on SA:MP this will remain <c>0</c>, open.mp will set it.  open.mp versions look like:  <code>  01.04.02.0544  </code>  Thus they are encoded here as:  <code>  (major &lt;&lt; 28) | (minor &lt;&lt; 21) | (patch &lt;&lt; 14) | (prerel)  </code>  </remarks> 
		</member>
		<member name="F:__SAMP_INCLUDES_VERSION">
			<attribute name="public"/>
			<remarks>  Version examples:  <ul>  <li><c>0.3.DL R1       - 03D010</c></li>  <li>                               </li>  <li><c>0.3.7 R3        - 037030</c></li>  <li><c>0.3.7 R2-2      - 037022</c></li>  <li><c>0.3.7 R1-2      - 037012</c></li>  <li><c>0.3.7           - 037000</c></li>  <li>                               </li>  <li><c>0.3z R4         - 030700</c></li>  <li><c>0.3z R3         - 030700</c></li>  <li><c>0.3z R2-1       - 030700</c></li>  <li><c>0.3z R1-2       - 030700</c></li>  <li><c>0.3z            - 030700</c></li>  <li><c>0.3x R2 patch 1 - 030621</c></li>  <li><c>0.3x R2         - 030620</c></li>  <li><c>0.3x R1-2       - 030612</c></li>  <li><c>0.3x            - 030600</c></li>  <li><c>0.3e            - 030500</c></li>  <li><c>0.3d            - 030400</c></li>  <li><c>0.3c            - 030300</c></li>  <li><c>0.3b            - 030200</c></li>  <li><c>0.3a            - 030100</c></li>  <li>                               </li>  <li><c>0.2X            - 02A000</c></li>  <li><c>0.2.2 R3        - 022300</c></li>  </ul>  Rough rules:  <p />  Uses (roughtly) BCD.  Special versions are denoted outside 0-9.  <code>  0.1.2c R4-5  | | ||  | |  0 1 23  4 5  =  0x012345  </code>  (assuming c is the third revision)  <p />  0.2X becomes 02A000 because it is basically 0.2.3, but not, while higher than  0.2.2 so can't be 020400 (for example).  Also, its a capital letter, so doesn't  use the revision method.  <p />  P.S.  Making a consistent scheme for SA:MP versions is REALLY hard.  <p />  open.mp releases can use `A` as the first digit.  </remarks> 
		</member>
		<member name="F:__date">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__file">
		</member>
		<member name="F:__time">
		</member>
		<member name="F:aHinfo">
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:aduty_text">
			<tagname value="Text"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_saduty"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:ahCars">
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:autosOhneMotor">
			<referrer name="hatAutoMotor"/>
			<referrer name="OnPlayerStateChange"/>
		</member>
		<member name="F:bCPs">
			<referrer name="cmd_startbus"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
		</member>
		<member name="F:bInfo">
			<referrer name="loadBizes"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_enter"/>
			<referrer name="OnPlayerKeyStateChange"/>
		</member>
		<member name="F:badfraks">
			<referrer name="isPlayerinBadFrak"/>
		</member>
		<member name="F:cInfo">
			<referrer name="saveFrakCarToDB"/>
			<referrer name="isPlayerInFrakVehicle"/>
			<referrer name="createfCar"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="saveCarToDB"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CarSavedToDB"/>
			<referrer name="createCar"/>
			<referrer name="cmd_vcolor"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_vehicles"/>
			<referrer name="cmd_getcarowner"/>
			<referrer name="getFreeCarID"/>
			<referrer name="OnPlayerCarsLoad"/>
		</member>
		<member name="F:dbhandle">
			<tagname value="MySQL"/>
			<referrer name="loadfraks"/>
			<referrer name="savefraks"/>
			<referrer name="saveFrakCarToDB"/>
			<referrer name="loadfrakcars"/>
			<referrer name="saveHaus"/>
			<referrer name="LoadHouses"/>
			<referrer name="loadiraum"/>
			<referrer name="savePlayer"/>
			<referrer name="savesession"/>
			<referrer name="cmd_deletehouse"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnGameModeExit"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="saveCarToDB"/>
			<referrer name="loadPlayerCars"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:fInfo">
			<referrer name="loadfraks"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="SFM"/>
			<referrer name="savefraks"/>
			<referrer name="saveFrakCarToDB"/>
			<referrer name="createfCar"/>
			<referrer name="FraktionName"/>
			<referrer name="cmd_fraks"/>
			<referrer name="cmd_finfo"/>
			<referrer name="cmd_allfinfo"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_setfstat"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_showfmotd"/>
			<referrer name="cmd_fmotd"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_epbonus"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_news"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_getfrang"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_annehmen"/>
		</member>
		<member name="F:fbase">
			<referrer name="OnFraksLoad"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_equip"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_enter"/>
			<referrer name="isPlayerInRangeOfFrakEnterPoint"/>
			<referrer name="isPlayerInRangeOfFrakExitPoint"/>
			<referrer name="OnPlayerSpawn"/>
		</member>
		<member name="F:fcar">
			<referrer name="OnFrakCarsLoad"/>
		</member>
		<member name="F:gNetStatsPlayerId">
			<referrer name="cmd_netstat"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="NetStatsDisplay"/>
		</member>
		<member name="F:gNetStatsTimerId">
			<referrer name="cmd_netstat"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:hInfo">
			<referrer name="saveHaus"/>
			<referrer name="OnHausCreated"/>
			<referrer name="hatPlayerHaus"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="updateHaus"/>
			<referrer name="cmd_deletehouse"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseinterior"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_enter"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="getFreeHausID"/>
			<referrer name="cmd_houses"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="OnPlayerKeyStateChange"/>
		</member>
		<member name="F:innenraum">
			<referrer name="OnIraumLoad"/>
			<referrer name="cmd_iraum"/>
		</member>
		<member name="F:kmhtd">
			<tagname value="Text"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerStateChange"/>
		</member>
		<member name="F:noclipdata">
			<referrer name="CancelFlyMode"/>
			<referrer name="FlyMode"/>
			<referrer name="MoveCamera"/>
			<referrer name="resetnoclip"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerUpdate"/>
		</member>
		<member name="F:p1">
			<referrer name="cmd_mv"/>
			<referrer name="SSCANF_OnGameModeInit"/>
		</member>
		<member name="F:p2">
			<referrer name="cmd_mv"/>
			<referrer name="SSCANF_OnGameModeInit"/>
		</member>
		<member name="F:p3">
			<referrer name="cmd_mv"/>
			<referrer name="SSCANF_OnGameModeInit"/>
		</member>
		<member name="F:payday">
			<referrer name="resetPlayer"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="CEF_OnPlayerConnect"/>
		</member>
		<member name="F:pdschranke">
			<referrer name="cmd_mv"/>
			<referrer name="SSCANF_OnGameModeInit"/>
		</member>
		<member name="F:pdtor">
			<referrer name="cmd_mv"/>
			<referrer name="SSCANF_OnGameModeInit"/>
		</member>
		<member name="F:restartcounter">
			<referrer name="restart"/>
			<referrer name="resetrestart"/>
		</member>
		<member name="F:sInfo">
			<referrer name="isAdmin"/>
			<referrer name="isAlevel"/>
			<referrer name="SendAdminMessage"/>
			<referrer name="SendTeamMessage"/>
			<referrer name="AdminRank"/>
			<referrer name="isPlayerinBadFrak"/>
			<referrer name="isPlayerinStaat"/>
			<referrer name="isLeader"/>
			<referrer name="SendFrakMessage"/>
			<referrer name="isPlayerInFrak"/>
			<referrer name="SFM"/>
			<referrer name="createfCar"/>
			<referrer name="isPlayerOnOrangelist"/>
			<referrer name="OnPlayerRegister"/>
			<referrer name="savePlayer"/>
			<referrer name="savesession"/>
			<referrer name="resetPlayer"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="FraktionName"/>
			<referrer name="PayDay"/>
			<referrer name="cmd_ainvite"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_setskin"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_checkspawn"/>
			<referrer name="cmd_set"/>
			<referrer name="cmd_makeadmin"/>
			<referrer name="cmd_givemoney"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_suspend"/>
			<referrer name="cmd_equip"/>
			<referrer name="cmd_showfmotd"/>
			<referrer name="cmd_fmotd"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_epbonus"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_uninvite"/>
			<referrer name="cmd_giverank"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_orangelist"/>
			<referrer name="cmd_delol"/>
			<referrer name="cmd_iraum"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="createCar"/>
			<referrer name="saveallplayers"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_setfskin"/>
			<referrer name="cmd_hduty"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_su"/>
			<referrer name="cmd_inv"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_getfrang"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_annehmen"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerCarsLoad"/>
			<referrer name="loadPlayerCars"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:stream">
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:stundentimer">
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="sekunde"/>
		</member>
		<member name="F:tCPs">
			<referrer name="cmd_startmuell"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
		</member>
		<member name="F:tank">
			<referrer name="createfCar"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="cmd_setfill"/>
			<referrer name="cmd_arefill"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="sekunde"/>
			<referrer name="saveCarToDB"/>
			<referrer name="createCar"/>
			<referrer name="cmd_showfill"/>
			<referrer name="cmd_vehicles"/>
			<referrer name="cmd_cveh"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerCarsLoad"/>
		</member>
		<member name="F:tankLabel">
			<tagname value="PlayerText"/>
			<referrer name="sekunde"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerStateChange"/>
		</member>
		<member name="F:tanktimer">
			<referrer name="sekunde"/>
		</member>
		<member name="F:uhrzeitlabel">
			<tagname value="Text"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="sekunde"/>
			<referrer name="CEF_OnPlayerConnect"/>
		</member>
		<member name="F:weatherids">
			<referrer name="changeweather"/>
		</member>
		<member name="F:zcmd_g_HasOPCE">
			<tagname value="bool"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
		</member>
		<member name="F:zcmd_g_HasOPCS">
			<tagname value="bool"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
		</member>

		<!-- functions -->
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="cmd_mv"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="cmd_slap"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_use"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="PayDay"/>
			<referrer name="getPlayerSpeed"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="GetNextCameraPosition"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<referrer name="GetNextCameraPosition"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<referrer name="MoveCamera"/>
			<referrer name="GetNextCameraPosition"/>
			<referrer name="loadBizes"/>
			<referrer name="loadJobs"/>
			<referrer name="getPlayerSpeed"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(Float:,Float:)" syntax="operator*(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="MoveCamera"/>
			<referrer name="GetNextCameraPosition"/>
			<referrer name="getPlayerSpeed"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(_:)" syntax="Float:operator=(_:)(oper)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="loadBizes"/>
			<referrer name="updateHaus"/>
			<referrer name="loadJobs"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="cmd_sethp"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_deletehouse"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_addschirmex"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_addequipex"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_weatherall"/>
			<referrer name="cmd_createfrakcar"/>
			<referrer name="cmd_mv"/>
			<referrer name="cmd_equip"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_enter"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_fcar"/>
			<referrer name="cmd_hduty"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_startbus"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_getcarowner"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnDialogResponse"/>
			<param name="oper">
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="cmd_mv"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="cmd_enter"/>
			<referrer name="cmd_use"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="cmd_use"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="cmd_mv"/>
			<referrer name="cmd_use"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_use"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="MoveCamera"/>
			<referrer name="cmd_mv"/>
			<referrer name="OnPlayerText"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AddVehicleComponent" syntax="AddVehicleComponent(vehicleid, component)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_setnitro"/>
			<param name="vehicleid">
				The ID of the vehicle to add the component to.  Not to be confused with <a  href="https://sampwiki.blast.hk/wiki/Confuse_modelid">modelid</a>
			</param>
			<param name="component">
				The <a href="https://www.open.mp/docs/scripting/resources/carcomponentid">ID  of the component</a>  to add to the vehicle
			</param>
			<library>omp_vehicle</library>  <summary>Adds a 'component' (often referred to as a 'mod' (modification)) to a vehicle.  Valid components  can be found <a href="https://www.open.mp/docs/scripting/resources/carcomponentid">here</a>.</summary>      <returns>  <ul>  <li><b><c>0</c></b> - The component was not added because the vehicle does not exist.</li>  <li><b><c>1</c></b> - The component was successfully added to the vehicle.</li>  </ul>  </returns>  <remarks>Using an invalid <a href="https://www.open.mp/docs/scripting/resources/carcomponentid">component  ID</a>  crashes the player's game.  There are no internal checks for this.</remarks>  <seealso name="RemoveVehicleComponent" />  <seealso name="GetVehicleComponentInSlot" />  <seealso name="GetVehicleComponentType" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" /> 
		</member>
		<member name="M:AdminRank" syntax="AdminRank(playerid)">
			<stacksize value="33"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_a"/>
			<dependency name="AdminRank"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AttachCameraToPlayerObject" syntax="AttachCameraToPlayerObject(playerid, objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="FlyMode"/>
			<param name="playerid">
				The ID of the player which will have their camera attached to a player-object
			</param>
			<param name="objectid">
				The ID of the player-object to which the player's camera will be attached
			</param>
			<library>omp_player</library>  <summary>Attaches a player's camera to a player-object.  The player is able to move their camera  while it is attached to an object.  Can be used with MovePlayerObject and AttachPlayerObjectToVehicle.</summary>      <seealso name="AttachCameraToObject" />  <seealso name="SetPlayerCameraPos" />  <seealso name="SetPlayerCameraLookAt" />  <remarks>The player-object must be created before attempting to attach the player's camera to it.</remarks> 
		</member>
		<member name="M:AttachTrailerToVehicle" syntax="AttachTrailerToVehicle(trailerid, vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="trailerid">
				The ID of the vehicle that will be pulled
			</param>
			<param name="vehicleid">
				The ID of the vehicle that will pull the trailer
			</param>
			<library>omp_vehicle</library>  <summary>Attach a vehicle to another vehicle as a trailer.</summary>      <seealso name="DetachTrailerFromVehicle" />  <seealso name="IsTrailerAttachedToVehicle" />  <seealso name="GetVehicleTrailer" />  <remarks>This will only work if both vehicles are streamed in for a player (check  <a href="#IsVehicleStreamedIn">IsVehicleStreamedIn</a>).</remarks>  <returns>This function always returns <b><c>1</c></b>, even if neither of the vehicle IDs passed  are valid.</returns> 
		</member>
		<member name="M:Ban" syntax="Ban(playerid)">
			<attribute name="native"/>
			<referrer name="pBan"/>
			<param name="playerid">
				The ID of the player to ban
			</param>
			<library>omp_network</library>  <summary>Ban a player who is currently in the server.  They will be unable to join the server ever  again.  The ban will be IP-based, and be saved in the samp.ban file in the server's root directory.  <a href="#BanEx">BanEx</a> can be used to give a reason for the ban.  IP bans can be added/removed  using the RCON banip and unbanip commands (<a href="#SendRconCommand">SendRconCommand</a>).</summary>    <seealso name="BanEx" />  <seealso name="Kick" />  <remarks>Any action taken directly before Ban() (such as sending a message  with SendClientMessage) will not reach the player.  A timer must be used to delay the ban.</remarks>  <remarks></remarks> 
		</member>
		<member name="M:CEF_OnPlayerConnect" syntax="CEF_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="162"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayAudioStreamForPlayer"/>
			<dependency name="PlayerTextDrawBackgroundColour"/>
			<dependency name="PlayerTextDrawColour"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetProportional"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCameraLookAt"/>
			<dependency name="SetPlayerCameraPos"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="dbhandle"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="payday"/>
			<dependency name="resetnoclip"/>
			<dependency name="stream"/>
			<dependency name="tankLabel"/>
			<dependency name="true"/>
			<dependency name="uhrzeitlabel"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CEF_OnPlayerDisconnect" syntax="CEF_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="339"/>
			<dependency name="CancelFlyMode"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="__print"/>
			<dependency name="besitzer"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="c_x"/>
			<dependency name="c_y"/>
			<dependency name="c_z"/>
			<dependency name="cameramode"/>
			<dependency name="db_id"/>
			<dependency name="db_id"/>
			<dependency name="dbhandle"/>
			<dependency name="farbe1"/>
			<dependency name="farbe2"/>
			<dependency name="format"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="id_x"/>
			<dependency name="logout"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="noclipdata"/>
			<dependency name="resetPlayer"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="savePlayer"/>
			<dependency name="savesession"/>
			<dependency name="tankLabel"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(functionName[], specifiers[], ...)">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<referrer name="Streamer_OnPlayerDisconnect"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				Public function's name
			</param>
			<param name="specifiers">
				<paraminfo> [] </paraminfo>
				Tag/format of each variable
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
				'Indefinite' number of arguments of any tag
			</param>
			<library>omp_core</library>  <summary>Calls a public function from the script in which it is used.</summary>        <seealso name="CallRemoteFunction" />  <returns>The value that the <b>only</b> public function returned.</returns>  <remarks>CallLocalFunction crashes the server if it's passing an empty string.</remarks>  <remarks>  Specifier string placeholders:<br />  <ul>  <li><b><c>c</c></b> - a single character</li>  <li><b><c>d</c></b> - an integer (whole) number</li>  <li><b><c>i</c></b> - an integer (whole) number</li>  <li><b><c>x</c></b> - a number in hexadecimal notation</li>  <li><b><c>f</c></b> - a floating point number</li>  <li><b><c>s</c></b> - a string</li>  </ul>  </remarks> 
		</member>
		<member name="M:CancelFlyMode" syntax="CancelFlyMode(playerid)">
			<stacksize value="4"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<dependency name="DeletePVar"/>
			<dependency name="EndObjectEditing"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="cameramode"/>
			<dependency name="false"/>
			<dependency name="noclipdata"/>
			<dependency name="noclipdata"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CarSavedToDB" syntax="CarSavedToDB(carid)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="cache_insert_id"/>
			<dependency name="db_id"/>
			<param name="carid">
			</param>
		</member>
		<member name="M:ChangeVehicleColours" syntax="ChangeVehicleColours(vehicleid, colour1, colour2)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_vcolor"/>
			<param name="vehicleid">
				The ID of the vehicle to change the colours of
			</param>
			<param name="colour1">
				The new vehicle's primary <a href="https://www.open.mp/docs/scripting/resources/vehiclecolorid">colour  ID</a>
			</param>
			<param name="colour2">
				The new vehicle's secondary <a href="https://www.open.mp/docs/scripting/resources/vehiclecolorid">colour  ID</a>
			</param>
			<library>omp_vehicle</library>  <summary>Change a vehicle's primary and secondary colours.</summary>        <seealso name="ChangeVehiclePaintjob" />  <seealso name="OnVehicleRespray" />  <remarks>Some vehicles have only a primary colour and some can not have the colour changed at all.  A few (cement, squallo) have 4 colours, of which 2 can not currently be changed.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  The vehicle's colour was successfully changed.<br  />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:Create3DTextLabel" syntax="Create3DTextLabel(text[], colour, x, y, z, drawDistance, virtualWorld, testLOS, ...)">
			<tagname value="Text3D"/>
			<attribute name="native"/>
			<referrer name="loadBizes"/>
			<referrer name="updateHaus"/>
			<referrer name="loadJobs"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The initial text string.  May be optionally formatted.
			</param>
			<param name="colour">
				The text colour, as an integer or hex in <b>RGBA</b> colour format
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x-Coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y-Coordinate
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				z-Coordinate
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance from where you are able to see the 3D Text Label
			</param>
			<param name="virtualWorld">
				The virtual world in which you are able to see the 3D Text
			</param>
			<param name="testLOS">
				<paraminfo>bool </paraminfo>
				Test the line-of-sight so this text can't be seen through objects (optional=<b><c>0</c></b>)
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textlabel</library>  <summary>Creates a 3D Text Label at a specific location in the world.</summary>                  <seealso name="Delete3DTextLabel" />  <seealso name="Attach3DTextLabelToPlayer" />  <seealso name="Attach3DTextLabelToVehicle" />  <seealso name="Update3DTextLabelText" />  <seealso name="CreatePlayer3DTextLabel" />  <seealso name="DeletePlayer3DTextLabel" />  <seealso name="UpdatePlayer3DTextLabelText" />  <remarks>  If <paramref name="text" /> is empty, the server/clients next to the text might crash!<br />  If the virtualWorld is set as <b><c>-1</c></b> the text will not appear.  </remarks>  <remarks>drawdistance seems to be a lot smaller when spectating.</remarks>  <remarks>Use <a href="https://www.open.mp/docs/scripting/resources/colorslist">colour embedding</a>  for multiple colours in the text.</remarks>  <returns>The ID of the newly created 3D Text Label, or <b><c>INVALID_3DTEXT_ID</c></b> if the 3D  Text Label limit (<b><c>MAX_3DTEXT_GLOBAL</c></b>) was reached.</returns> 
		</member>
		<member name="M:CreateDynamicCP" syntax="CreateDynamicCP(x, y, z, size, worldid, interiorid, playerid, streamdistance)">
			<attribute name="native"/>
			<referrer name="cmd_weatherall"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CreateDynamicObject" syntax="CreateDynamicObject(modelid, x, y, z, rx, ry, rz, worldid, interiorid, playerid, streamdistance)">
			<attribute name="native"/>
			<referrer name="loadxmas"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CreateObject" syntax="CreateObject(modelid, x, y, z, rotationX, rotationY, rotationZ, drawDistance)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="modelid">
				The model to create
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the object at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the object at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the object at
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The x rotation of the object
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The y rotation of the object
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The z rotation of the object
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance that San Andreas renders objects at. <b><c>0.0</c></b> will  cause objects to render at their default distances. <b>Usable since 0.3b, limited to <c>300</c> prior  to 0.3x</b> (optional=<b><c>0.0</c></b>)
			</param>
			<library>omp_object</library>  <summary>Creates an object at specified coordinates in the game world.</summary>                  <seealso name="DestroyObject" />  <seealso name="IsValidObject" />  <seealso name="CreatePlayerObject" />  <seealso name="MoveObject" />  <seealso name="SetObjectPos" />  <seealso name="SetObjectRot" />  <seealso name="GetObjectPos" />  <seealso name="GetObjectRot" />  <seealso name="AttachObjectToPlayer" />  <seealso name="SetObjectMaterialText" />  <seealso name="SetObjectMaterial" />  <remarks>  Objects that emit light (lampposts, police lights, bollard lights, neons etc.) that have a greater  rotation than <b><c>16.26</c></b> degrees (or <b><c>-16.26</c></b>) on either the x or y axis will  stop shining.  This effect also applies to light objects attached to other objects, players and vehicles.  If a light object is attached to a car and the car is rotated over <b><c>16.26</c></b> degrees  (like in a rollover), the object will also stop emitting light.  This is a GTA:SA issue and is not  caused by a bug in open.mp.  </remarks>  <remarks>In case the light is attached to another object, one fix for this is to set <b>SyncRotation</b>  to false in <a href="#AttachObjectToObject">AttachObjectToObject</a>.  This will ensure the light  stays at <b><c>0</c></b> rotation.  This would only really work for objects that consist ONLY of  light, so wouldn't work for the police light for example. </remarks>  <remarks>There is a limit of <a href="https://open.mp/docs/scripting/resources/limits"><b><c>1000</c></b>  objects  (<b><c>MAX_OBJECTS</c></b>)</a>.  To circumvent this limit, you can use a  <a href="https://github.com/samp-incognito/samp-streamer-plugin/tree/open.mp">streamer</a></remarks>  <returns>The ID of the object that was created, or <b><c>INVALID_OBJECT_ID</c></b> if the object  limit (<b><c>MAX_OBJECTS</c></b>) was reached.</returns> 
		</member>
		<member name="M:CreatePickup" syntax="CreatePickup(model, type, x, y, z, virtualWorld)">
			<attribute name="native"/>
			<referrer name="loadBizes"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="updateHaus"/>
			<referrer name="loadJobs"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="model">
				The <a href="https://open.mp/docs/scripting/resources/pickupids">model</a> of the  pickup
			</param>
			<param name="type">
				The pickup spawn type (see table under remarks)
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the pickup at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the pickup at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the pickup at
			</param>
			<param name="virtualWorld">
				The virtual world ID of the pickup.  Use <b><c>-1</c></b> to make the  pickup show in all worlds (optional=<b><c>0</c></b>)
			</param>
			<library>omp_pickup</library>  <summary>This function does exactly the same as AddStaticPickup, except it returns a pickup ID which  can be used to destroy it afterwards and be tracked using <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>.</summary>              <seealso name="AddStaticPickup" />  <seealso name="DestroyPickup" />  <seealso name="OnPlayerPickUpPickup" />  <remarks>  <b>Known Bugs:</b><br />  Pickups that have a x or y lower than <b><c>-4096.0</c></b> or bigger than <b><c>4096.0</c></b>  won't show up and won't trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a> either.  </remarks>  <remarks>  The only type of pickup that can be picked up from inside a vehicle is <b><c>14</c></b> (except  for special pickups such as bribes).<br />  Pickups are shown to, and can be picked up by all players.<br />  It is possible that if <a href="#DestroyPickup">DestroyPickup</a> is used when a pickup is picked  up, more than one player can pick up the pickup, due to lag.  This can be circumvented through the  use of variables.<br />  Certain pickup types come with 'automatic responses', for example using an M4 model in the pickup  will automatically give the player the weapon and some ammo.  For fully scripted pickups, type <b><c>1</c></b>  should be used. <br />  </remarks>  <remarks>  <b>Available Pickup Types</b><br />  Most other IDs are either undocumented or are similar to type <b><c>1</c></b> (but do not use them  just because they seem similar to ID <b><c>1</c></b>, they might have side-effects like ID <b><c>18</c></b>  and <b><c>20</c></b>).  <ul>  <li><b><c>0</c></b> - The pickup does not always display.  If displayed, it can't be picked up  and does not trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a> and it will stay after  server shutdown.  Now disabled.</li>  <li><b><c>1</c></b> - Exists always.  Disables pickup scripts such as horseshoes and oysters  to allow for scripted actions ONLY.  Will trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>  every few seconds.</li>  <li><b><c>2</c></b> - Disappears after pickup, respawns after 30 seconds if the player is at  a distance of at least 15 meters.</li>  <li><b><c>3</c></b> - Disappears after pickup, respawns after death.</li>  <li><b><c>4</c></b> - Disappears after 15 to 20 seconds.  Respawns after death.</li>  <li><b><c>8</c></b> - Disappears after pickup, but has no effect.</li>  <li><b><c>11</c></b> - Blows up a few seconds after being created (bombs?)</li>  <li><b><c>12</c></b> - Blows up a few seconds after being created.</li>  <li><b><c>13</c></b> - Invisible.  Triggers checkpoint sound when picked up with a vehicle, but  doesn't trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>.</li>  <li><b><c>14</c></b> - Disappears after pickup, can only be picked up with a vehicle.  Triggers  checkpoint sound.</li>  <li><b><c>15</c></b> - Same as type <b><c>2</c></b>.</li>  <li><b><c>18</c></b> - Similar to type <b><c>1</c></b>.  Pressing Tab (<b><c>KEY_ACTION</c></b>)  makes it disappear but the key press doesn't trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>.</li>  <li><b><c>19</c></b> - Disappears after pickup, but doesn't respawn.  Makes "cash pickup" sound  if picked up.</li>  <li><b><c>20</c></b> - Similar to type <b><c>1</c></b>.  Disappears when you take a picture of  it with the Camera weapon, which triggers "Snapshot # out of 0" message.  Taking a picture doesn't  trigger <a href="#OnPlayerPickUpPickup">OnPlayerPickUpPickup</a>.</li>  <li><b><c>22</c></b> - Same as type <b><c>3</c></b>.</li>  </ul>  </remarks>  <returns>The ID of the created pickup, <b><c>-1</c></b> on failure (<a href="https://open.mp/docs/scripting/resources/limits">pickup  max limit</a>).</returns> 
		</member>
		<member name="M:CreatePlayerObject" syntax="CreatePlayerObject(playerid, modelid, x, y, z, rotationX, rotationY, rotationZ, drawDistance)">
			<attribute name="native"/>
			<referrer name="FlyMode"/>
			<param name="playerid">
				The ID of the player to create the object for
			</param>
			<param name="modelid">
				The model to create
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to create the object at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to create the object at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to create the object at
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The x rotation of the object
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The y rotation of the object
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The z rotation of the object
			</param>
			<param name="drawDistance">
				<paraminfo>Float </paraminfo>
				The distance from which objects will appear to players. <b><c>0.0</c></b>  will cause an object to render at its default distance.  Leaving this parameter out will cause objects  to be rendered at their default distance.
			</param>
			<library>omp_object</library>  <summary>Creates an object which will be visible to only one player.</summary>                    <seealso name="CreateObject" />  <seealso name="IsValidPlayerObject" />  <seealso name="DestroyPlayerObject" />  <seealso name="MovePlayerObject" />  <seealso name="StopPlayerObject" />  <seealso name="SetPlayerObjectPos" />  <seealso name="SetPlayerObjectRot" />  <seealso name="GetPlayerObjectPos" />  <seealso name="GetPlayerObjectRot" />  <seealso name="AttachPlayerObjectToPlayer" />  <seealso name="AttachObjectToPlayer" />  <returns>The ID of the object that was created, or <b><c>INVALID_OBJECT_ID</c></b> if the object  limit (<b><c>MAX_OBJECTS</c></b>) was reached.</returns> 
		</member>
		<member name="M:CreatePlayerTextDraw" syntax="CreatePlayerTextDraw(playerid, x, y, format[], ...)">
			<tagname value="PlayerText"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player to create the textdraw for
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x-Coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y-Coordinate
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text in the textdraw.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textdraw</library>  <summary>Creates a textdraw for a single player.  This can be used as a way around the <a href="#TextDrawCreate">global</a>  text-draw limit.</summary>          <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>  If you choose values for y that are less than 1, the first text row will be invisible and only  the shadow is visible.<br />  If part of the text is off-screen, the colour of the text will not show, only the shadow (if enabled)  will. <br />  </remarks>  <remarks>  Maximum length of textdraw is <b><c>800</c></b> characters.<br />  If you use colour codes (such as <b><c>~R~ ~G~</c></b>) beyond 255th character the legacy (SA:MP) client  will  crash trying to display the textdraw. <br />  </remarks>  <remarks>Keyboard key mapping codes (such as <b><c>~k~~VEHICLE_ENTER_EXIT~</c></b> Doesn't work beyond  255th character. </remarks>  <remarks>  The x, y coordinate is the top left coordinate for the text draw area based on a <b><c>640x480</c></b>  "canvas" (irrespective of screen resolution).  If you plan on using <a href="#PlayerTextDrawAlignment">PlayerTextDrawAlignment</a>  with alignment <b><c>3</c></b> (right), the x, y coordinate is the top right coordinate for the text  draw.<br />  This function merely CREATES the textdraw, you must use <a href="#PlayerTextDrawShow">PlayerTextDrawShow</a>  to show it to a player.<br />  It is recommended to use WHOLE numbers instead of decimal positions when creating player textdraws  to ensure resolution friendly design. <br />  </remarks>  <remarks>Player-textdraws are automatically destroyed when a player disconnects.</remarks>  <returns>The ID of the created textdraw.</returns> 
		</member>
		<member name="M:CreateVehicle" syntax="CreateVehicle(modelid, spawnX, spawnY, spawnZ, angle, colour1, colour2, respawnDelay, addSiren)">
			<attribute name="native"/>
			<referrer name="createfCar"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="createCar"/>
			<referrer name="cmd_startbus"/>
			<referrer name="cmd_v"/>
			<referrer name="OnPlayerCarsLoad"/>
			<referrer name="OnDialogResponse"/>
			<param name="modelid">
				The <a href="https://www.open.mp/docs/scripting/resources/vehicleid">model</a>  for the vehicle
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate for the vehicle
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate for the vehicle
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate for the vehicle
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The facing angle for the vehicle
			</param>
			<param name="colour1">
				The primary <a href="https://www.open.mp/docs/scripting/resources/vehiclecolorid">colour  ID</a>
			</param>
			<param name="colour2">
				The secondary <a href="https://www.open.mp/docs/scripting/resources/vehiclecolorid">colour  ID</a>
			</param>
			<param name="respawnDelay">
				The delay until the car is respawned without a driver in <b>seconds</b>.  Using <b><c>-1</c></b> will prevent the vehicle from respawning
			</param>
			<param name="addSiren">
				<paraminfo>bool </paraminfo>
				<b>Added in 0.3.7; will not work in earlier versions</b>.  Enables the vehicle  to have a siren, providing the vehicle has a horn (optional=<b><c>false</c></b>)
			</param>
			<library>omp_vehicle</library>  <summary>Creates a vehicle in the world.  Can be used in place of <a href="#AddStaticVehicleEx">AddStaticVehicleEx</a>  at any time in the script.</summary>                    <seealso name="DestroyVehicle" />  <seealso name="AddStaticVehicle" />  <seealso name="AddStaticVehicleEx" />  <seealso name="GetVehicleParamsSirenState" />  <seealso name="OnVehicleSpawn" />  <seealso name="OnVehicleSirenStateChange" />  <remarks>Trains can only be added with AddStaticVehicle and AddStaticVehicleEx.</remarks>  <returns>  The vehicle ID of the vehicle created (<b><c>1</c></b> to <b><c>MAX_VEHICLES</c></b>).<br />  <b><c>INVALID_VEHICLE_ID (65535)</c></b> if vehicle was not created (vehicle limit reached or invalid  vehicle model ID passed).  </returns> 
		</member>
		<member name="M:Delete3DTextLabel" syntax="Delete3DTextLabel(textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="updateHaus"/>
			<referrer name="cmd_deletehouse"/>
			<param name="textid">
				<paraminfo>Text3D </paraminfo>
				The ID of the 3D text label to delete
			</param>
			<library>omp_textlabel</library>  <summary>Delete a 3D text label (created with <a href="#Create3DTextLabel">Create3DTextLabel</a>).</summary>    <seealso name="Create3DTextLabel" />  <seealso name="Attach3DTextLabelToPlayer" />  <seealso name="Attach3DTextLabelToVehicle" />  <seealso name="Update3DTextLabelText" />  <seealso name="CreatePlayer3DTextLabel" />  <seealso name="DeletePlayer3DTextLabel" />  <seealso name="UpdatePlayer3DTextLabelText" />  <returns><b><c>1</c></b> if the 3D text label was deleted, otherwise <b><c>0</c></b>.</returns> 
		</member>
		<member name="M:DeletePVar" syntax="DeletePVar(playerid, pvar[])">
			<attribute name="native"/>
			<referrer name="CancelFlyMode"/>
			<param name="playerid">
				The ID of the player whose player variable to delete
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable to delete
			</param>
			<library>omp_variable</library>  <summary>Deletes a previously set player variable.</summary>      <seealso name="SetPVarInt" />  <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <remarks>Once a variable is deleted, attempts to retrieve the value will return <b><c>0</c></b> (for  integers and floats and <b><c>NULL</c></b> for strings).</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Either the player specified isn't connected or  there is no variable set with the given name.  </returns> 
		</member>
		<member name="M:DestroyPickup" syntax="DestroyPickup(pickup)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="updateHaus"/>
			<referrer name="cmd_deletehouse"/>
			<param name="pickup">
				The ID of the pickup to destroy (returned by <a href="#CreatePickup">CreatePickup</a>)
			</param>
			<library>omp_pickup</library>  <summary>Destroys a pickup created with <a href="#CreatePickup">CreatePickup</a>.</summary>    <seealso name="CreatePickup" />  <seealso name="OnPlayerPickUpPickup" /> 
		</member>
		<member name="M:DestroyVehicle" syntax="DestroyVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_delveh"/>
			<referrer name="cmd_delallveh"/>
			<referrer name="cmd_reloadxmas"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerExitVehicle"/>
			<param name="vehicleid">
				The ID of the vehicle to destroy
			</param>
			<library>omp_vehicle</library>  <summary>Destroy a vehicle.  It will disappear instantly.</summary>    <seealso name="CreateVehicle" />  <seealso name="RemovePlayerFromVehicle" />  <seealso name="SetVehicleToRespawn" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:DisableInteriorEnterExits" syntax="DisableInteriorEnterExits()">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<library>omp_core</library>  <summary>Disable all the interior entrances and exits in the game (the yellow arrows at doors).</summary>  <seealso name="AllowInteriorWeapons" />  <remarks>If the gamemode is changed after this function has been used, and the new gamemode doesn't  disable markers, the markers will NOT reappear for already-connected players (but will for newly  connected players).</remarks>  <remarks>This function will only work if it has been used BEFORE a player connects (it is recommended  to use it in OnGameModeInit).  It will not remove a connected player's markers.</remarks>  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:DisablePlayerCheckpoint" syntax="DisablePlayerCheckpoint(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<param name="playerid">
				The ID of the player whose checkpoint to disable
			</param>
			<library>omp_checkpoint</library>  <summary>Disables (hides/destroys) a player's set checkpoint.  Players can only have a single checkpoint  set at a time.  Checkpoints don't need to be disabled before setting another one.</summary>    <seealso name="SetPlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is also returned if the player doesn't  have a checkpoint shown already.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:EnableStuntBonusForAll" syntax="EnableStuntBonusForAll(enable)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="enable">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable stunt bonuses or <b><c>0</c></b> to disable them
			</param>
			<library>omp_core</library>  <summary>Enables or disables stunt bonuses for all players.  If enabled, players will receive monetary  rewards when performing a stunt in a vehicle (e.g.  a wheelie).</summary>    <seealso name="EnableStuntBonusForPlayer" /> 
		</member>
		<member name="M:EndObjectEditing" syntax="EndObjectEditing(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CancelFlyMode"/>
			<param name="playerid">
				The ID of the player to cancel edition for
			</param>
			<library>omp_object</library>  <summary>Cancel object edition mode for a player.</summary>    <seealso name="SelectObject" />  <seealso name="EditObject" />  <seealso name="EditPlayerObject" />  <seealso name="EditAttachedObject" /> 
		</member>
		<member name="M:FlyMode" syntax="FlyMode(playerid)">
			<stacksize value="14"/>
			<dependency name="AttachCameraToPlayerObject"/>
			<dependency name="CreatePlayerObject"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SetPVarInt"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="cameramode"/>
			<dependency name="flyobject"/>
			<dependency name="noclipdata"/>
			<dependency name="noclipdata"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:FraktionName" syntax="FraktionName(playerid)">
			<stacksize value="1"/>
			<dependency name="fInfo"/>
			<dependency name="f_name"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GameTextForAll" syntax="GameTextForAll(format[], time, style, ...)">
			<attribute name="native"/>
			<referrer name="cmd_stopserver"/>
			<referrer name="OnGameModeExit"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text to be displayed or formatted
			</param>
			<param name="time">
				The duration of the text being shown in milliseconds
			</param>
			<param name="style">
				The style of text to be displayed
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_core</library>  <summary>Shows 'game text' (on-screen text) for a certain length of time for all players.</summary>        <seealso name="GameTextForPlayer" />  <seealso name="TextDrawShowForAll" />  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:GetActorPoolSize" syntax="GetActorPoolSize()">
			<stacksize value="1"/>
			<library>omp_core</library>  <summary>Gets the highest actorid created on the server.</summary>  <seealso name="CreateActor" />  <seealso name="IsValidActor" />  <seealso name="SetActorHealth" />  <returns>The highest actorid created on the server or <b><c>0</c></b> if there are no created actors.</returns> 
		</member>
		<member name="M:GetMaxPlayers" syntax="GetMaxPlayers()">
			<attribute name="native"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<library>omp_core</library>  <summary>Returns the maximum number of players that can join the server, as set by the server variable  'maxplayers' in server.cfg.</summary>  <seealso name="GetPlayerPoolSize" />  <seealso name="IsPlayerConnected" />  <remarks>This function can not be used in place of <b><c>MAX_PLAYERS</c></b>.  It can not be used  at compile time (e.g.  for array sizes). <b><c>MAX_PLAYERS</c></b> should always be re-defined to  what the 'maxplayers' var will be, or higher.</remarks>  <returns>The maximum number of players that can join the server.</returns> 
		</member>
		<member name="M:GetMoveDirectionFromKeys" syntax="GetMoveDirectionFromKeys(ud, lr)">
			<stacksize value="2"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="ud">
			</param>
			<param name="lr">
			</param>
		</member>
		<member name="M:GetNetworkStats" syntax="GetNetworkStats(output[], size)">
			<attribute name="native"/>
			<referrer name="NetStatsDisplay"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
				The string to store the network stats in, passed by reference
			</param>
			<param name="size">
				The length of the string to be stored
			</param>
			<library>omp_network</library>  <summary>Gets the server's network stats and stores them in a string.</summary>      <seealso name="GetPlayerNetworkStats" />  <seealso name="NetStats_GetConnectedTime" />  <seealso name="NetStats_MessagesReceived" />  <seealso name="NetStats_BytesReceived" />  <seealso name="NetStats_MessagesSent" />  <seealso name="NetStats_BytesSent" />  <seealso name="NetStats_MessagesRecvPerSecond" />  <seealso name="NetStats_PacketLossPercent" />  <seealso name="NetStats_ConnectionStatus" />  <seealso name="NetStats_GetIpPort" />  <remarks>  <b>Example output:</b><br />  <c>  Server Ticks: 200<br />  Messages in Send buffer: 0<br />  Messages sent: 142<br />  Bytes sent: 8203<br />  Acks sent: 11<br />  Acks in send buffer: 0<br />  Messages waiting for ack: 0<br />  Messages resent: 0<br />  Bytes resent: 0<br />  Packetloss: 0.0%<br />  Messages received: 54<br />  Bytes received: 2204<br />  Acks received: 0<br />  Duplicate acks received: 0<br />  Inst.  KBits per second: 28.8<br />  KBits per second sent: 10.0<br />  KBits per second received: 2.7<br />  </c>  </remarks>  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:GetNextCameraPosition" syntax="GetNextCameraPosition(move_mode, CP[], FV[], &amp;X, &amp;Y, &amp;Z)">
			<stacksize value="1"/>
			<referrer name="MoveCamera"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<param name="move_mode">
			</param>
			<param name="CP">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="FV">
				<paraminfo>Float [3] </paraminfo>
			</param>
			<param name="X">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetObjectPos" syntax="GetObjectPos(objectid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_mv"/>
			<param name="objectid">
				The ID of the object to get the position of.
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A variable in which to store the x coordinate, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A variable in which to store the y coordinate, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A variable in which to store the z coordinate, passed by reference
			</param>
			<library>omp_object</library>  <summary>Get the position of an object.</summary>          <seealso name="SetObjectPos" />  <seealso name="GetObjectRot" />  <seealso name="SetPlayerObjectPos" />  <seealso name="CreateObject" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The specified object does not exist.  </returns> 
		</member>
		<member name="M:GetObjectRot" syntax="GetObjectRot(objectid, &amp;rotationX, &amp;rotationY, &amp;rotationZ)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_mv"/>
			<param name="objectid">
				The objectid of the object you want to get the rotation from
			</param>
			<param name="rotationX">
				<paraminfo>Float &amp; </paraminfo>
				The variable to store the x rotation, passed by reference
			</param>
			<param name="rotationY">
				<paraminfo>Float &amp; </paraminfo>
				The variable to store the y rotation, passed by reference
			</param>
			<param name="rotationZ">
				<paraminfo>Float &amp; </paraminfo>
				The variable to store the z rotation, passed by reference
			</param>
			<library>omp_object</library>  <summary>Use this function to get the objects current rotation.  The rotation is saved by reference  in three rotationX/rotationY/rotationZ variables.</summary>          <seealso name="SetObjectRot" />  <seealso name="SetObjectPos" />  <seealso name="SetPlayerObjectRot" />  <seealso name="CreateObject" />  <returns>The object's rotation is stored in the referenced variables, not in the return value.</returns> 
		</member>
		<member name="M:GetPVarInt" syntax="GetPVarInt(playerid, pvar[])">
			<attribute name="native"/>
			<referrer name="isaduty"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_suspend"/>
			<referrer name="cmd_news"/>
			<referrer name="cmd_exitiraum"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_annehmen"/>
			<referrer name="cmd_stream"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player whose player variable to get
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable (case-insensitive).  Assigned in SetPVarInt
			</param>
			<library>omp_variable</library>  <summary>Gets an integer player variable's value.</summary>      <seealso name="SetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <returns>The integer value of the specified player variable.  It will still return <b><c>0</c></b>  if the variable is not set, or the player does not exist.</returns> 
		</member>
		<member name="M:GetPlayerArmour" syntax="GetPlayerArmour(playerid, &amp;armour)">
			<attribute name="native"/>
			<referrer name="cmd_id"/>
			<param name="playerid">
				The ID of the player that you want to get the armour of
			</param>
			<param name="armour">
				<paraminfo>Float &amp; </paraminfo>
				The float to to store the armour in, passed by reference
			</param>
			<library>omp_player</library>  <summary>This function stores the armour of a player into a variable.</summary>      <seealso name="SetPlayerArmour" />  <seealso name="GetPlayerHealth" />  <seealso name="GetVehicleHealth" />  <remarks>Even though the armour can be set to near infinite values on the server side, the individual  clients will only report values up to <b><c>255</c></b>.  Anything higher will wrap around; <b><c>256</c></b>  becomes <b><c>0</c></b>, <b><c>257</c></b> becomes <b><c>1</c></b>, etc. </remarks>  <remarks>Armour is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b>  </remarks>  <remarks>The function's name is armour, not armor (Americanized).</remarks>  <returns>  <b><c>1</c></b> - success.<br />  <b><c>0</c></b> - failure (i.e.  player not connected).<br />  </returns> 
		</member>
		<member name="M:GetPlayerCameraFrontVector" syntax="GetPlayerCameraFrontVector(playerid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="MoveCamera"/>
			<param name="playerid">
				The ID of the player you want to obtain the camera front vector of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float to store the x coordinate, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float to store the y coordinate, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float to store the z coordinate, passed by reference
			</param>
			<library>omp_player</library>  <summary>This function will return the current direction of player's aiming in 3-D space, the coords  are relative to the camera position, see <a href="#GetPlayerCameraPos">GetPlayerCameraPos</a>.</summary>          <seealso name="GetPlayerCameraPos" />  <remarks>In <b>0.3a</b> the camera front vector is only obtainable when player is inside a rhino,  S.W.A.T tank, fire truck, or on foot. </remarks>  <remarks>Since <b>0.3b</b> the camera data can be obtained when the player is in any vehicle or on  foot. </remarks>  <returns>The position is stored in the specified variables.</returns> 
		</member>
		<member name="M:GetPlayerCameraPos" syntax="GetPlayerCameraPos(playerid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="MoveCamera"/>
			<param name="playerid">
				The ID of the player to get the camera position of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable to store the x coordinate in, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable to store the y coordinate in, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable to store the z coordinate in, passed by reference
			</param>
			<library>omp_player</library>  <summary>Get the position of the player's camera.</summary>          <seealso name="SetPlayerCameraPos" />  <seealso name="GetPlayerCameraZoom" />  <seealso name="GetPlayerCameraAspectRatio" />  <seealso name="GetPlayerCameraMode" />  <seealso name="GetPlayerCameraFrontVector" />  <remarks>Player's camera positions are only updated once a second, <b>unless aiming</b>.</remarks>  <remarks>It is recommended to set a 1 second timer if you wish to take action that relies on a player's  camera position.</remarks> 
		</member>
		<member name="M:GetPlayerDistanceFromPoint" syntax="GetPlayerDistanceFromPoint(playerid, x, y, z)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="OnPlayerText"/>
			<param name="playerid">
				The ID of the player to calculate the distance from
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x map coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y map coordinate
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z map coordinate
			</param>
			<library>omp_player</library>  <summary>Calculate the distance between a player and a map coordinate.</summary>          <seealso name="IsPlayerInRangeOfPoint" />  <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="GetPlayerPos" />  <returns>The distance between the player and the point as a float.</returns> 
		</member>
		<member name="M:GetPlayerFacingAngle" syntax="GetPlayerFacingAngle(playerid, &amp;ang)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_startbus"/>
			<param name="playerid">
				The player you want to get the angle of
			</param>
			<param name="ang">
				<paraminfo>Float &amp; </paraminfo>
				The Float to store the angle in, passed by reference
			</param>
			<library>omp_player</library>  <summary>Gets the angle a player is facing.</summary>      <seealso name="GetVehicleZAngle" />  <seealso name="SetPlayerFacingAngle" />  <remarks>Angles are reversed in GTA:SA; 90 degrees would be East in the real world, but in GTA:SA  90 degrees is in fact West.  North and South are still 0/360 and 180.  To convert this, simply do  <b>360 - angle</b>.</remarks>  <remarks>Angles returned when inside a vehicle is rarely correct.  To get the correct facing angle  while inside a vehicle, use <a href="#GetVehicleZAngle">GetVehicleZAngle</a>.</remarks> 
		</member>
		<member name="M:GetPlayerHealth" syntax="GetPlayerHealth(playerid, &amp;health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_id"/>
			<referrer name="cmd_use"/>
			<param name="playerid">
				The ID of the player
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
				Float to store health, passed by reference
			</param>
			<library>omp_player</library>  <summary>The function GetPlayerHealth allows you to retrieve the health of a player.  Useful for  cheat detection, among other things.</summary>      <seealso name="SetPlayerHealth" />  <seealso name="GetVehicleHealth" />  <seealso name="GetPlayerArmour" />  <remarks>  Even though the health can be set to near infinite values on the server side, the individual clients  will only report values up to <b><c>255</c></b>.  Anything higher will wrap around; <b><c>256</c></b>  becomes <b><c>0</c></b>, <b><c>257</c></b> becomes <b><c>1</c></b>, etc.<br />  Health is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b>  </remarks>  <returns>  <b><c>1</c></b> - success.<br />  <b><c>0</c></b> - failure (i.e.  player not connected).<br />  </returns> 
		</member>
		<member name="M:GetPlayerID" syntax="GetPlayerID(name[])">
			<stacksize value="6"/>
			<dependency name="sscanf"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerInterior" syntax="GetPlayerInterior(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_intinfo"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="playerid">
				The player to get the interior ID of
			</param>
			<library>omp_player</library>  <summary>Retrieves the player's current interior.  A list of currently known interiors with their  positions can be found on <a href="https://www.open.mp/docs/scripting/resources/interiorids">this</a>  page.</summary>    <seealso name="SetPlayerInterior" />  <seealso name="GetPlayerVirtualWorld" />  <remarks>Always returns <b><c>0</c></b> for NPCs.</remarks>  <returns>The interior ID the player is currently in.</returns> 
		</member>
		<member name="M:GetPlayerIp" syntax="GetPlayerIp(playerid, ip[], len)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player to get the IP address of
			</param>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				An array into which to store the player's IP address, passed by reference
			</param>
			<param name="len">
				The maximum length of the IP address (recommended 16)
			</param>
			<library>omp_network</library>  <summary>Get the specified player's IP address and store it in a string.</summary>        <seealso name="NetStats_GetIpPort" />  <seealso name="GetPlayerName" />  <seealso name="GetPlayerPing" />  <seealso name="GetPlayerVersion" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <remarks>This function does not work when used in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  because the player is already disconnected.  It will return an invalid IP (<b><c>255.255.255.255</c></b>).  Save players' IPs under <a href="#OnPlayerConnect">OnPlayerConnect</a> if they need to be used under  <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>. </remarks>  <returns><b><c>1</c></b> on success and <b><c>0</c></b> on failure.</returns> 
		</member>
		<member name="M:GetPlayerKeys" syntax="GetPlayerKeys(playerid, &amp;keys, &amp;updown, &amp;leftright)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
				The ID of the player to get the keys of
			</param>
			<param name="keys">
				<paraminfo>t_KEY &amp; </paraminfo>
				Bitmask containing the player's key states. <a href="https://www.open.mp/docs/scripting/resources/keys">List  of keys</a>
			</param>
			<param name="updown">
				<paraminfo> &amp; </paraminfo>
				Up/down state
			</param>
			<param name="leftright">
				<paraminfo> &amp; </paraminfo>
				Left/right state
			</param>
			<library>omp_player</library>  <summary>Check which keys a player is pressing.</summary>          <seealso name="OnPlayerKeyStateChange" />  <remarks>Only the FUNCTION of keys can be detected; not actual keys.  For example, it is not possible  to detect if a player presses <b>SPACE</b>, but you can detect if they press <b>SPRINT</b> (which  can be mapped (assigned/binded) to ANY key (but is space by default)). </remarks>  <remarks>As of update <b>0.3.7</b>, the keys "A" and "D" are not recognized when in a vehicle.  However,  keys "W" and "S" can be detected with the "keys" parameter. </remarks>  <returns>The keys are stored in the specified variables.</returns> 
		</member>
		<member name="M:GetPlayerLastSyncedTrailerID" syntax="GetPlayerLastSyncedTrailerID(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:GetPlayerLastSyncedVehicleID" syntax="GetPlayerLastSyncedVehicleID(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:GetPlayerMoney" syntax="GetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="savePlayer"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to get the money of
			</param>
			<library>omp_player</library>  <summary>Retrieves the amount of money a player has.</summary>    <seealso name="GivePlayerMoney" />  <seealso name="ResetPlayerMoney" />  <returns>The amount of money the player has.</returns> 
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<referrer name="createfCar"/>
			<referrer name="hatPlayerHaus"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_gethere"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="createCar"/>
			<referrer name="getPlayerName"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to get the name of
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				An array into which to store the name, passed by reference
			</param>
			<param name="len">
				The length of the string that should be stored.  Recommended to be <b><c>MAX_PLAYER_NAME</c></b>
			</param>
			<library>omp_player</library>  <summary>Get a player's name.</summary>        <seealso name="SetPlayerName" />  <seealso name="GetPlayerIp" />  <seealso name="GetPlayerPing" />  <seealso name="GetPlayerScore" />  <seealso name="GetPlayerVersion" />  <remarks>A player's name can be up to 24 characters long (as of <b>0.3d R2</b>) by using <a href="#SetPlayerName">SetPlayerName</a>.  This is defined as <b><c>24</c></b> by default.  However, the client can  only join with a nickname between 3 and 20 characters, otherwise the connection will be rejected  and the player has to quit to choose a valid name.</remarks>  <returns>The length of the player's name. <b><c>0</c></b> if player specified doesn't exist.</returns> 
		</member>
		<member name="M:GetPlayerPing" syntax="GetPlayerPing(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_id"/>
			<param name="playerid">
				The ID of the player to get the ping of
			</param>
			<library>omp_network</library>  <summary>Get the ping of a player.  The ping measures the amount of time it takes for the server  to 'ping' the client and for the client to send the message back.</summary>    <seealso name="GetPlayerIp" />  <seealso name="GetPlayerName" />  <seealso name="GetPlayerVersion" />  <remarks>Player's ping may be <b><c>65535</c></b> for a while after a player connects</remarks>  <returns>The current ping of the player (expressed in milliseconds).</returns> 
		</member>
		<member name="M:GetPlayerPoolSize" syntax="GetPlayerPoolSize()">
			<stacksize value="1"/>
			<library>omp_core</library>  <summary>Gets the highest playerid currently in use on the server.</summary>  <seealso name="GetVehiclePoolSize" />  <seealso name="GetMaxPlayers" />  <returns>The highest playerid currently in use on the server or <b><c>0</c></b> if there are no connected  players.</returns> 
		</member>
		<member name="M:GetPlayerPos" syntax="GetPlayerPos(playerid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="FlyMode"/>
			<referrer name="createfCar"/>
			<referrer name="savePlayer"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_addschirmex"/>
			<referrer name="cmd_addequipex"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="cmd_createfrakcar"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_dropguns"/>
			<referrer name="cmd_showpos"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_startbus"/>
			<referrer name="cmd_v"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to get the position of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the x coordinate in, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the y coordinate in, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the z coordinate in, passed by reference
			</param>
			<library>omp_player</library>  <summary>Get the position of a player, represented by x, y and z coordinates.</summary>          <seealso name="SetPlayerPos" />  <seealso name="GetVehiclePos" />  <seealso name="IsPlayerInRangeOfPoint" />  <seealso name="GetPlayerDistanceFromPoint" />  <remarks>This function is known to return unreliable values when used in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  and <a href="#OnPlayerRequestClass">OnPlayerRequestClass</a>.  This is because the player is not  spawned.</remarks>  <returns><b><c>true</c></b> on success, <b><c>false</c></b> on failure (i.e.  player not connected).</returns> 
		</member>
		<member name="M:GetPlayerScore" syntax="GetPlayerScore(playerid)">
			<attribute name="native"/>
			<referrer name="savePlayer"/>
			<referrer name="cmd_givelevel"/>
			<referrer name="cmd_id"/>
			<referrer name="cmd_buyhouse"/>
			<param name="playerid">
				The player to get the score of
			</param>
			<library>omp_player</library>  <summary>This function returns a player's score as it was set using <a href="#SetPlayerScore">SetPlayerScore</a>.</summary>    <seealso name="SetPlayerScore" />  <seealso name="GetPlayerPing" />  <returns>The player's score.</returns> 
		</member>
		<member name="M:GetPlayerSkin" syntax="GetPlayerSkin(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_skininfo"/>
			<param name="playerid">
				The player you want to get the skin from
			</param>
			<library>omp_player</library>  <summary>Returns the class of the players skin.</summary>    <seealso name="SetPlayerSkin" />  <remarks>Returns the new skin after <a href="#SetSpawnInfo">SetSpawnInfo</a> is called but before  the player actually respawns to get the new skin. </remarks>  <remarks>Returns the old skin if the player was spawned through <a href="#SpawnPlayer">SpawnPlayer</a>  function. </remarks>  <returns>The skin ID (<b><c>0</c></b> if invalid).</returns> 
		</member>
		<member name="M:GetPlayerState" syntax="GetPlayerState(playerid)">
			<tagname value="t_PLAYER_STATE"/>
			<attribute name="native"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_cveh"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="playerid">
				The ID of the player to get the current state of
			</param>
			<library>omp_player</library>  <summary>Get a player's current state.</summary>    <seealso name="GetPlayerSpecialAction" />  <seealso name="SetPlayerSpecialAction" />  <seealso name="OnPlayerStateChange" />  <remarks>  <b>States:</b><br />  <ul>  <li><b><c>PLAYER_STATE_NONE</c></b> - empty (while initializing)</li>  <li><b><c>PLAYER_STATE_ONFOOT</c></b> - player is on foot</li>  <li><b><c>PLAYER_STATE_DRIVER</c></b> - player is the driver of a vehicle</li>  <li><b><c>PLAYER_STATE_PASSENGER</c></b> - player is passenger of a vehicle</li>  <li><b><c>PLAYER_STATE_WASTED</c></b> - player is dead or on class selection</li>  <li><b><c>PLAYER_STATE_SPAWNED</c></b> - player is spawned</li>  <li><b><c>PLAYER_STATE_SPECTATING</c></b> - player is spectating</li>  <li><b><c>PLAYER_STATE_EXIT_VEHICLE</c></b> - player exits a vehicle</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_DRIVER</c></b> - player enters a vehicle as driver</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_PASSENGER</c></b> - player enters a vehicle as passenger  </li>  </ul>  </remarks>  <returns>The player's current state as an integer.</returns> 
		</member>
		<member name="M:GetPlayerVehicleID" syntax="GetPlayerVehicleID(playerid)">
			<attribute name="native"/>
			<referrer name="isPlayerInFrakVehicle"/>
			<referrer name="cmd_fixveh"/>
			<referrer name="sekunde"/>
			<referrer name="getPlayerSpeed"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_cveh"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="playerid">
				The ID of the player in the vehicle that you want to get the ID of
			</param>
			<library>omp_player</library>  <summary>This function gets the ID of the vehicle the player is currently in.  Note: <b>NOT</b> the  model ID of the vehicle.  See <a href="#GetVehicleModel">GetVehicleModel</a> for that.</summary>    <seealso name="IsPlayerInVehicle" />  <seealso name="IsPlayerInAnyVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <seealso name="GetVehicleModel" />  <returns>ID of the vehicle or <b><c>0</c></b> if not in a vehicle.</returns> 
		</member>
		<member name="M:GetPlayerVelocity" syntax="GetPlayerVelocity(playerid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="getPlayerSpeed"/>
			<param name="playerid">
				The player to get the speed from
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the x axis, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the y axis, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the velocity on the z axis, passed by reference
			</param>
			<library>omp_player</library>  <summary>Get the velocity (speed) of a player on the x, y and z axes.</summary>          <seealso name="SetPlayerVelocity" />  <seealso name="SetVehicleVelocity" />  <seealso name="GetVehicleVelocity" /> 
		</member>
		<member name="M:GetPlayerVirtualWorld" syntax="GetPlayerVirtualWorld(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_intinfo"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="playerid">
				The ID of the player to get the virtual world of
			</param>
			<library>omp_player</library>  <summary>Retrieves the current virtual world the player is in.</summary>    <seealso name="SetPlayerVirtualWorld" />  <seealso name="GetVehicleVirtualWorld" />  <seealso name="GetPlayerInterior" />  <returns>The ID of the virtual world the player is currently in.</returns> 
		</member>
		<member name="M:GetPlayerWantedLevel" syntax="GetPlayerWantedLevel(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_clear"/>
			<param name="playerid">
				The ID of the player that you want to get the wanted level of
			</param>
			<library>omp_player</library>  <summary>Gets the wanted level of a player.</summary>    <seealso name="SetPlayerWantedLevel" />  <seealso name="PlayCrimeReportForPlayer" />  <returns>The player's wanted level.</returns> 
		</member>
		<member name="M:GetServerRuleFlags" syntax="GetServerRuleFlags(rule[])">
			<tagname value="E_SERVER_RULE_FLAGS"/>
			<stacksize value="1"/>
			<param name="rule">
				<paraminfo> [] </paraminfo>
			</param>
			<library>omp_core</library> 
		</member>
		<member name="M:GetTickCount" syntax="GetTickCount()">
			<attribute name="native"/>
			<referrer name="MoveCamera"/>
			<referrer name="OnPlayerUpdate"/>
			<library>omp_core</library>  <summary>Returns the uptime of the actual server (not the open.mp server) in milliseconds.</summary>  <seealso name="tickcount" />  <remarks>GetTickCount will cause problems on servers with uptime of over 24 days as GetTickCount  will eventually warp past the integer size constraints.  However using  <a href="https://gist.github.com/ziggi/5d7d8dc42f54531feba7ae924c608e73">this</a>  function fixes the problem.</remarks>  <remarks>One common use for GetTickCount is for benchmarking.  It can be used to calculate how much  time some code takes to execute.</remarks>  <returns>Uptime of the actual server (not the open.mp server).</returns> 
		</member>
		<member name="M:GetTimerRemaining" syntax="GetTimerRemaining(timerid)">
			<attribute name="native"/>
			<referrer name="sekunde"/>
			<param name="timerid">
			</param>
			<library>omp_core</library> 
		</member>
		<member name="M:GetVehicleDistanceFromPoint" syntax="GetVehicleDistanceFromPoint(vehicleid, x, y, z)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to calculate the distance for
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x map coordinate
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y map coordinate
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z map coordinate
			</param>
			<library>omp_vehicle</library>  <summary>This function can be used to calculate the distance (as a float) between a vehicle and another  map coordinate.  This can be useful to detect how far a vehicle away is from a location.</summary>          <seealso name="GetPlayerDistanceFromPoint" />  <seealso name="GetVehiclePos" />  <returns>A float containing the distance from the point specified in the coordinates.</returns> 
		</member>
		<member name="M:GetVehicleModel" syntax="GetVehicleModel(vehicleid)">
			<attribute name="native"/>
			<referrer name="hatAutoMotor"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="sekunde"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to get the model of
			</param>
			<library>omp_vehicle</library>  <summary>Gets the <a href="https://www.open.mp/docs/scripting/resources/vehicleid">model ID</a> of a  vehicle.</summary>    <seealso name="GetPlayerVehicleid" />  <seealso name="GetVehiclePos" />  <seealso name="GetVehicleZAngle" />  <seealso name="GetPlayerVehicleSeat" />  <returns>The vehicle's <a href="https://www.open.mp/docs/scripting/resources/vehicleid">model ID</a>,  or <b><c>0</c></b>  if the vehicle doesn't exist.</returns> 
		</member>
		<member name="M:GetVehicleParamsEx" syntax="GetVehicleParamsEx(vehicleid, &amp;engine, &amp;lights, &amp;alarm, &amp;doors, &amp;bonnet, &amp;boot, &amp;objective)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="isMotorOn"/>
			<referrer name="stopMotor"/>
			<referrer name="cmd_cveh"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to get the parameters from
			</param>
			<param name="engine">
				<paraminfo>bool &amp; </paraminfo>
				Get the engine status.  If <b><c>1</c></b>, the engine is running.
			</param>
			<param name="lights">
				<paraminfo>bool &amp; </paraminfo>
				Get the vehicle's lights' state.  If <b><c>1</c></b> the lights are on
			</param>
			<param name="alarm">
				<paraminfo>bool &amp; </paraminfo>
				Get the vehicle's alarm state.  If <b><c>1</c></b> the alarm is (or was) sounding
			</param>
			<param name="doors">
				<paraminfo>bool &amp; </paraminfo>
				Get the lock status of the doors.  If <b><c>1</c></b> the doors are locked
			</param>
			<param name="bonnet">
				<paraminfo>bool &amp; </paraminfo>
				Get the bonnet/hood status.  If <b><c>1</c></b>, it's open
			</param>
			<param name="boot">
				<paraminfo>bool &amp; </paraminfo>
				Get the boot/trunk status. <b><c>1</c></b> means it is open
			</param>
			<param name="objective">
				<paraminfo>bool &amp; </paraminfo>
				Get the objective status. <b><c>1</c></b> means the objective is on
			</param>
			<library>omp_vehicle</library>  <summary>Gets a vehicle's parameters.</summary>                  <seealso name="SetVehicleParamsEx" />  <remarks>If a parameter is unset (SetVehicleParamsEx not used beforehand) the value will be <b><c>-1</c></b>  ('unset').</remarks> 
		</member>
		<member name="M:GetVehiclePoolSize" syntax="GetVehiclePoolSize()">
			<stacksize value="1"/>
			<library>omp_core</library>  <summary>Gets the highest vehicleid currently in use on the server.</summary>  <seealso name="GetPlayerPoolSize" />  <returns>The highest vehicleid currently in use on the server or <b><c>0</c></b> if there are no  created vehicles.</returns> 
		</member>
		<member name="M:GetVehiclePos" syntax="GetVehiclePos(vehicleid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_getcarowner"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to get the position of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the x coordinate, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the y coordinate, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in which to store the z coordinate, passed by reference
			</param>
			<library>omp_vehicle</library>  <summary>Gets the position of a vehicle.</summary>          <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="SetVehiclePos" />  <seealso name="GetVehicleZAngle" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:GetVehicleVelocity" syntax="GetVehicleVelocity(vehicleid, &amp;x, &amp;y, &amp;z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="getPlayerSpeed"/>
			<param name="vehicleid">
				The ID of the vehicle to get the velocity of
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's x velocity, passed by reference
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's y velocity, passed by reference
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
				A float variable in to which to store the vehicle's z velocity, passed by reference
			</param>
			<library>omp_vehicle</library>  <summary>Get the velocity of a vehicle on the x, y and z axes.</summary>          <seealso name="GetPlayerVelocity" />  <seealso name="SetVehicleVelocity" />  <seealso name="SetPlayerVelocity" />  <remarks>Multiply vector with <b><c>250.66667</c></b> for kmph or <b><c>199.416667</c></b> for mph  or something...</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle specified does not exist.<br  />  </returns> 
		</member>
		<member name="M:GivePlayerMoney" syntax="GivePlayerMoney(playerid, money)">
			<attribute name="native"/>
			<referrer name="PayDay"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_givemoney"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<referrer name="SetPlayerMoney"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to give money to or take money from
			</param>
			<param name="money">
				The amount of money to give the player.  Use a minus value to take money
			</param>
			<library>omp_player</library>  <summary>Give money to or take money from a player.</summary>      <seealso name="ResetPlayerMoney" />  <seealso name="GetPlayerMoney" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:GivePlayerWeapon" syntax="GivePlayerWeapon(playerid, weaponid, ammo)">
			<attribute name="native"/>
			<referrer name="cmd_addschirmex"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_addequipex"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_givecam"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_equip"/>
			<referrer name="staatsequip"/>
			<referrer name="cmd_hduty"/>
			<param name="playerid">
				The ID of the player to give a weapon to
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the weapon to give to the player
			</param>
			<param name="ammo">
				The amount of ammo to give to the player
			</param>
			<library>omp_player</library>  <summary>Give a player a weapon with a specified amount of ammo.</summary>        <seealso name="SetPlayerArmedWeapon" />  <seealso name="GetPlayerWeapon" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.<br />  </returns> 
		</member>
		<member name="M:HasObjectCameraCollision" syntax="HasObjectCameraCollision(objectid)">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="__IsObjectNoCameraCol"/>
			<param name="objectid">
			</param>
			<library>omp_object</library>  <summary></summary> 
		</member>
		<member name="M:HasPlayerObjectCameraCollision" syntax="HasPlayerObjectCameraCollision(playerid, objectid)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="__IsObjectNoCameraCol"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<library>omp_object</library>  <summary></summary> 
		</member>
		<member name="M:HideVehicle" syntax="HideVehicle(vehicleid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SendAdminMessage"/>
			<referrer name="SendTeamMessage"/>
			<referrer name="SendFrakMessage"/>
			<referrer name="SFM"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_orangelist"/>
			<referrer name="sekunde"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_hduty"/>
			<referrer name="cmd_id"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_su"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_player</library>  <summary>Checks if a player is connected (if an ID is taken by a connected player).</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <remarks>This function can be omitted in a lot of cases.  Many other functions already have some  sort of connection check built in.</remarks>  <returns><b><c>1</c></b> if the player is connected, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInAnyVehicle" syntax="IsPlayerInAnyVehicle(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_fixveh"/>
			<referrer name="sekunde"/>
			<referrer name="getPlayerSpeed"/>
			<referrer name="cmd_flip"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_player</library>  <summary>Check if a player is inside any vehicle (as a driver or passenger).</summary>    <seealso name="IsPlayerInVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <returns><b><c>1</c></b> if the player is in a vehicle, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerInRangeOfPoint" syntax="IsPlayerInRangeOfPoint(playerid, range, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_deletehouse"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_addschirmex"/>
			<referrer name="cmd_addequipex"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_mv"/>
			<referrer name="cmd_equip"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_enter"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="isPlayerInRangeOfFrakEnterPoint"/>
			<referrer name="isPlayerInRangeOfFrakExitPoint"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_dropguns"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_fcar"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_startbus"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="cmd_getcarowner"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="playerid">
				The ID of the player
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
				The furthest distance the player can be from the point to be in range
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate of the point to check the range to
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate of the point to check the range to
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate of the point to check the range to
			</param>
			<library>omp_player</library>  <summary>Checks if a player is in range of a point.  This native function is faster than the PAWN  implementation using distance formula.</summary>            <seealso name="GetPlayerDistanceFromPoint" />  <seealso name="GetVehicleDistanceFromPoint" />  <seealso name="GetPlayerPos" />  <returns><b><c>1</c></b> if the player is in range, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsPlayerNPC" syntax="IsPlayerNPC(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_player</library>  <summary>Check if a player is an actual player or an NPC.</summary>    <seealso name="ConnectNPC" />  <seealso name="IsPlayerAdmin" />  <returns><b><c>1</c></b> if the player is an NPC, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsTrailerAttachedToVehicle" syntax="IsTrailerAttachedToVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to check for trailers
			</param>
			<library>omp_vehicle</library>  <summary>Checks if a vehicle has a trailer attached to it.  Use <a href="#GetVehicleTrailer">GetVehicleTrailer</a>  to get the vehicle ID of the trailer (if any).</summary>    <seealso name="GetVehicleTrailer" />  <seealso name="AttachTrailerToVehicle" />  <seealso name="DetachTrailerFromVehicle" />  <returns><b><c>1</c></b> if the vehicle has a trailer attached, <b><c>0</c></b> if not.</returns> 
		</member>
		<member name="M:IsValidVehicle" syntax="IsValidVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_delveh"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="cmd_showservervehs"/>
			<referrer name="cmd_delallveh"/>
			<referrer name="cmd_reloadxmas"/>
			<param name="vehicleid">
				The ID of the vehicle to check
			</param>
			<library>omp_vehicle</library>  <summary>Check if a vehicle ID is valid.</summary>    <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" />  <returns>true or false.</returns> 
		</member>
		<member name="M:IsVehicleHidden" syntax="IsVehicleHidden(vehicleid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:IsVehicleStreamedIn" syntax="IsVehicleStreamedIn(vehicleid, playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to check
			</param>
			<param name="playerid">
				The ID of the player to check
			</param>
			<library>omp_vehicle</library>  <summary>Checks if a vehicle is streamed in for a player.  Only nearby vehicles are streamed in (visible)  for a player.</summary>      <seealso name="IsPlayerStreamedIn" />  <seealso name="OnVehicleStreamIn" />  <seealso name="OnVehicleStreamOut" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <returns>  <b><c>0</c></b>: Vehicle is not streamed in for the player, or the function failed to execute (player  and/or vehicle do not exist).<br />  <b><c>1</c></b>: Vehicle is streamed in for the player.  </returns> 
		</member>
		<member name="M:Kick" syntax="Kick(playerid)">
			<attribute name="native"/>
			<referrer name="KickEx"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to kick
			</param>
			<library>omp_network</library>  <summary>Kicks a player from the server.  They will have to quit the game and re-connect if they  wish to continue playing.</summary>    <seealso name="Ban" />  <seealso name="BanEx" />  <remarks>Any action taken directly before Kick() (such as sending a message  with <a href="#SendClientMessage">SendClientMessage</a>) will not reach the player.  A timer must  be used to delay the kick.</remarks>  <returns>This function always returns <b><c>1</c></b>, even if the function failed to execute (player  specified doesn't exist).</returns> 
		</member>
		<member name="M:KickEx" syntax="KickEx(adminID, kickid, reason[])">
			<stacksize value="138"/>
			<referrer name="cmd_kick"/>
			<dependency name="Kick"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__printf"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<param name="adminID">
			</param>
			<param name="kickid">
			</param>
			<param name="reason">
				<paraminfo> [256] </paraminfo>
			</param>
		</member>
		<member name="M:KillTimer" syntax="KillTimer(timerid)">
			<attribute name="native"/>
			<referrer name="resetPlayer"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="OnDialogResponse"/>
			<param name="timerid">
				The ID of the timer to kill (returned by <a href="#SetTimer">SetTimer</a> or  <a href="#SetTimerEx">SetTimerEx</a>)
			</param>
			<library>omp_core</library>  <summary>Kills (stops) a running timer.</summary>    <seealso name="SetTimer" />  <seealso name="SetTimerEx" />  <returns>This function always returns <b><c>0</c></b>.</returns> 
		</member>
		<member name="M:LoadHouses" syntax="LoadHouses()">
			<stacksize value="134"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="dbhandle"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
		</member>
		<member name="M:ManualVehicleEngineAndLights" syntax="ManualVehicleEngineAndLights()">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<library>omp_vehicle</library>  <summary>Use this function before any player connects (<a href="#OnGameModeInit">OnGameModeInit</a>)  to tell all clients that the script will control vehicle engines and lights.  This prevents the game  automatically turning the engine on/off when players enter/exit vehicles and headlights automatically  coming on when it is dark.</summary>  <seealso name="SetVehicleParamsEx" />  <seealso name="GetVehicleParamsEx" />  <seealso name="SetVehicleParamsForPlayer" />  <remarks>Is it not possible to reverse this function after it has been used.  You must either use  it or not use it.</remarks>  <returns>This function always returns <b><c>1</c></b>.  It cannot fail to execute.</returns> 
		</member>
		<member name="M:MoveCamera" syntax="MoveCamera(playerid)">
			<stacksize value="21"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="GetNextCameraPosition"/>
			<dependency name="GetPlayerCameraFrontVector"/>
			<dependency name="GetPlayerCameraPos"/>
			<dependency name="GetTickCount"/>
			<dependency name="MovePlayerObject"/>
			<dependency name="accelmul"/>
			<dependency name="flyobject"/>
			<dependency name="lastmove"/>
			<dependency name="mode"/>
			<dependency name="noclipdata"/>
			<dependency name="noclipdata"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:MoveObject" syntax="MoveObject(objectid, targetX, targetY, targetZ, speed, rotationX, rotationY, rotationZ)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_mv"/>
			<param name="objectid">
				The ID of the object to move
			</param>
			<param name="targetX">
				<paraminfo>Float </paraminfo>
				The x coordinate to move the object to
			</param>
			<param name="targetY">
				<paraminfo>Float </paraminfo>
				The y coordinate to move the object to
			</param>
			<param name="targetZ">
				<paraminfo>Float </paraminfo>
				The z coordinate to move the object to
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
				The speed at which to move the object (units per second)
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The FINAL x rotation (optional=<b><c>-1000.0</c></b>)
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The FINAL y rotation (optional=<b><c>-1000.0</c></b>)
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The FINAL z rotation (optional=<b><c>-1000.0</c></b>)
			</param>
			<library>omp_object</library>  <summary>Move an object to a new position with a set speed.  Players/vehicles will 'surf' the object  as it moves.</summary>                  <seealso name="OnObjectMoved" />  <seealso name="IsObjectMoving" />  <seealso name="StopObject" />  <seealso name="MovePlayerObject" />  <seealso name="SetObjectPos" />  <seealso name="SetObjectRot" />  <seealso name="CreateObject" />  <remarks>This function can be used to make objects rotate smoothly.  In order to achieve this however,  the object must also be <b>moved</b>.  The specified rotation is the rotation the object will have  after the movement.  Hence the object will not rotate when no movement is applied.</remarks>  <remarks>To fully understand the above note, you can (but not limited to) increase the z position  by <b><c>(+0.001</c></b>) and then (<b><c>-0.001</c></b>) after moving it again, as not changing  the x, y or z will not rotate the object. </remarks>  <returns>The time it will take for the object to move in milliseconds.</returns> 
		</member>
		<member name="M:MovePlayerObject" syntax="MovePlayerObject(playerid, objectid, targetX, targetY, targetZ, speed, rotationX, rotationY, rotationZ)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="MoveCamera"/>
			<param name="playerid">
				The ID of the player whose player-object to move
			</param>
			<param name="objectid">
				The ID of the object to move
			</param>
			<param name="targetX">
				<paraminfo>Float </paraminfo>
				The x coordinate to move the object to
			</param>
			<param name="targetY">
				<paraminfo>Float </paraminfo>
				The y coordinate to move the object to
			</param>
			<param name="targetZ">
				<paraminfo>Float </paraminfo>
				The z coordinate to move the object to
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
				The speed at which to move the object
			</param>
			<param name="rotationX">
				<paraminfo>Float </paraminfo>
				The final x rotation (optional=<b><c>-1000.0</c></b>)
			</param>
			<param name="rotationY">
				<paraminfo>Float </paraminfo>
				The final y rotation (optional=<b><c>-1000.0</c></b>)
			</param>
			<param name="rotationZ">
				<paraminfo>Float </paraminfo>
				The final z rotation (optional=<b><c>-1000.0</c></b>)
			</param>
			<library>omp_object</library>  <summary>Move a player object with a set speed.  Also supports rotation.  Players/vehicles will surf  moving objects.</summary>                    <seealso name="OnPlayerObjectMoved" />  <seealso name="IsPlayerObjectMoving" />  <seealso name="StopPlayerObject" />  <seealso name="MoveObject" />  <seealso name="SetPlayerObjectPos" />  <seealso name="SetPlayerObjectRot" />  <seealso name="CreatePlayerObject" />  <returns>The time it will take for the object to move in milliseconds.</returns> 
		</member>
		<member name="M:NetStatsDisplay" syntax="NetStatsDisplay()">
			<attribute name="public"/>
			<stacksize value="2058"/>
			<referrer name="cmd_netstat"/>
			<dependency name="GetNetworkStats"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="gNetStatsPlayerId"/>
		</member>
		<member name="M:OnActorStreamIn" syntax="OnActorStreamIn(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
				The ID of the actor that has been streamed in for the player
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the actor in
			</param>
			<summary>This callback is called when an actor is streamed in by a player's client.</summary>      <seealso name="OnActorStreamOut" />  <seealso name="OnPlayerStreamIn" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>It is always called first in filterscripts.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnActorStreamOut" syntax="OnActorStreamOut(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
				The ID of the actor that has been streamed out for the player
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the actor out
			</param>
			<summary>This callback is called when an actor is streamed out by a player's client.</summary>      <seealso name="OnActorStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>It is always called first in filterscripts.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnCefBrowserCreated" syntax="OnCefBrowserCreated(player_id, browser_id, status_code)">
			<stacksize value="1"/>
			<param name="player_id">
			</param>
			<param name="browser_id">
			</param>
			<param name="status_code">
			</param>
		</member>
		<member name="M:OnCefInitialize" syntax="OnCefInitialize(player_id, success)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cef_create_browser"/>
			<dependency name="false"/>
			<param name="player_id">
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnClientCheckResponse" syntax="OnClientCheckResponse(playerid, actionid, memaddr, retndata)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player checked
			</param>
			<param name="actionid">
				The type of check performed
			</param>
			<param name="memaddr">
				The address requested
			</param>
			<param name="retndata">
				The result of the check
			</param>
			<summary>This callback is called when a SendClientCheck request comletes</summary>          <seealso name="SendClientCheck" /> 
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="286"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateVehicle"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="Kick"/>
			<dependency name="KillTimer"/>
			<dependency name="PlayAudioStreamForPlayer"/>
			<dependency name="RemovePlayerFromVehicle"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="aHinfo"/>
			<dependency name="aHinfo"/>
			<dependency name="aduty_text"/>
			<dependency name="ahCars"/>
			<dependency name="ahCars"/>
			<dependency name="autohaus_id"/>
			<dependency name="c_preis"/>
			<dependency name="createCar"/>
			<dependency name="dbhandle"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="gNetStatsPlayerId"/>
			<dependency name="gNetStatsTimerId"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="hatPlayerHaus"/>
			<dependency name="isaduty"/>
			<dependency name="model"/>
			<dependency name="mysql_escape_string"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pfraktion"/>
			<dependency name="pspawnchange"/>
			<dependency name="random"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="s_r"/>
			<dependency name="s_x"/>
			<dependency name="s_y"/>
			<dependency name="s_z"/>
			<dependency name="stream"/>
			<dependency name="strlen"/>
			<dependency name="sx"/>
			<dependency name="sy"/>
			<dependency name="sz"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that responded to the dialog
			</param>
			<param name="dialogid">
				The ID of the dialog the player responded to, assigned in ShowPlayerDialog
			</param>
			<param name="response">
				<b><c>1</c></b> for left button and <b><c>0</c></b> for right button (if only  one button shown, always <b><c>1</c></b>)
			</param>
			<param name="listitem">
				The ID of the list item selected by the player (starts at <b><c>0</c></b>)  (only if using a list style dialog)
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
				The text entered into the input box by the player or the selected list item  text
			</param>
			<library>omp_dialog</library>  <summary>This callback is called when a player responds to a dialog shown using <a href="#ShowPlayerDialog">ShowPlayerDialog</a>  by either clicking a button, pressing ENTER/ESC or double-clicking a list item (if using a list style  dialog).</summary>            <seealso name="ShowPlayerDialog" />  <remarks>A player's dialog doesn't hide when the gamemode restarts, causing the server to print <c>"Warning:  PlayerDialogResponse PlayerId: 0 dialog ID doesn't match last sent dialog ID"</c> if a player responded  to this dialog after restart.</remarks>  <remarks>Parameters can contain different values, based on dialog's  <a href="https://open.mp/docs/scripting/resources/dialogstyles">style</a>.  </remarks>  <returns>  Returning <b><c>0</c></b> in this callback will pass the dialog to another script in case no matching  code were found in your gamemode's callback.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnDynamicObjectMoved" syntax="OnDynamicObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that entered or exited the modshop
			</param>
			<param name="enterexit">
				<b><c>1</c></b> if the player entered or <b><c>0</c></b> if they exited
			</param>
			<param name="interiorid">
				The interior ID of the modshop that the player is entering (or 0 if exiting)
			</param>
			<summary>This callback is called when a player enters or exits a mod shop.</summary>        <seealso name="OnVehicleMod" />  <seealso name="OnVehicleRespray" />  <seealso name="OnVehiclePaintjob" />  <seealso name="AddVehicleComponent" />  <remarks>Players collide when they get into the same mod shop.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<stacksize value="1"/>
			<summary>This callback is called when a filterscript is unloaded.  It is only called inside the filterscript  which is unloaded.</summary>  <seealso name="OnFilterScriptInit" />  <seealso name="OnGameModeInit" />  <seealso name="OnGameModeExit" />  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Streamer_g_OPC"/>
			<dependency name="Streamer_g_OPDC"/>
			<dependency name="Streamer_g_OPEC"/>
			<dependency name="Streamer_g_OPEO"/>
			<dependency name="Streamer_g_OPERC"/>
			<dependency name="Streamer_g_OPLC"/>
			<dependency name="Streamer_g_OPLRC"/>
			<dependency name="Streamer_g_OPPP"/>
			<dependency name="Streamer_g_OPSO"/>
			<dependency name="funcidx"/>
			<summary>This callback is called when a filterscript is initialized (loaded).  It is only called  inside the filterscript which is starting.</summary>  <seealso name="OnFilterScriptExit" />  <seealso name="OnGameModeInit" />  <seealso name="OnGameModeExit" />  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnFrakCarsLoad" syntax="OnFrakCarsLoad()">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="CreateVehicle"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="cache_get_field_count"/>
			<dependency name="cache_get_row_count"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="farbe1"/>
			<dependency name="farbe2"/>
			<dependency name="fc_r"/>
			<dependency name="fc_x"/>
			<dependency name="fc_y"/>
			<dependency name="fc_z"/>
			<dependency name="fcar"/>
			<dependency name="fcar"/>
			<dependency name="fcarid"/>
			<dependency name="fraktion"/>
			<dependency name="getFreeCarID"/>
			<dependency name="id_x"/>
			<dependency name="kennzeichen"/>
			<dependency name="model"/>
			<dependency name="tank"/>
		</member>
		<member name="M:OnFraksLoad" syntax="OnFraksLoad()">
			<attribute name="public"/>
			<stacksize value="139"/>
			<dependency name="CreatePickup"/>
			<dependency name="SendRconCommand"/>
			<dependency name="__print"/>
			<dependency name="__printf"/>
			<dependency name="cache_get_field_count"/>
			<dependency name="cache_get_row_count"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="ep"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_ID"/>
			<dependency name="f_color"/>
			<dependency name="f_dutyx"/>
			<dependency name="f_dutyy"/>
			<dependency name="f_dutyz"/>
			<dependency name="f_enterx"/>
			<dependency name="f_entery"/>
			<dependency name="f_enterz"/>
			<dependency name="f_exitx"/>
			<dependency name="f_exity"/>
			<dependency name="f_exitz"/>
			<dependency name="f_gold"/>
			<dependency name="f_green"/>
			<dependency name="f_inter"/>
			<dependency name="f_kasse"/>
			<dependency name="f_lsd"/>
			<dependency name="f_name"/>
			<dependency name="f_world"/>
			<dependency name="f_x"/>
			<dependency name="f_y"/>
			<dependency name="f_z"/>
			<dependency name="fbase"/>
			<dependency name="fbase"/>
			<dependency name="fmotd"/>
			<dependency name="format"/>
			<dependency name="rangdrei"/>
			<dependency name="rangeins"/>
			<dependency name="rangfunf"/>
			<dependency name="rangnull"/>
			<dependency name="rangsechs"/>
			<dependency name="rangvier"/>
			<dependency name="rangzwei"/>
		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="GameTextForAll"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="__printf"/>
			<dependency name="dbhandle"/>
			<dependency name="mysql_close"/>
			<dependency name="savefraks"/>
			<summary>This callback is called when a gamemode ends, either through 'gmx', the server being shut  down, or <a href="#GameModeExit">GameModeExit</a>.</summary>  <seealso name="OnGameModeInit" />  <seealso name="OnFilterScriptExit" />  <seealso name="OnFilterScriptInit" />  <seealso name="GameModeExit" />  <remarks>This function can also be used in a filterscript to detect if the gamemode changes with  RCON commands like changemode or gmx, as changing the gamemode does not reload a filterscript.</remarks>  <remarks>When using OnGameModeExit in conjunction with the 'rcon gmx' console command keep in mind  there is a potential for client bugs to occur an example of this is excessive  <a href="#RemoveBuildingForPlayer">RemoveBuildingForPlayer</a>  calls during OnGameModeInit which could result in a client crash. </remarks>  <remarks>This callback will NOT be called if the server crashes or the process is killed by other  means, such as using the Linux kill command or pressing the close-button on the Windows console.  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Streamer_g_OPC"/>
			<dependency name="Streamer_g_OPDC"/>
			<dependency name="Streamer_g_OPEC"/>
			<dependency name="Streamer_g_OPEO"/>
			<dependency name="Streamer_g_OPERC"/>
			<dependency name="Streamer_g_OPLC"/>
			<dependency name="Streamer_g_OPLRC"/>
			<dependency name="Streamer_g_OPPP"/>
			<dependency name="Streamer_g_OPSO"/>
			<dependency name="funcidx"/>
			<summary>This callback is triggered when the gamemode starts.</summary>  <seealso name="OnGameModeExit" />  <seealso name="OnFilterScriptInit" />  <seealso name="OnFilterScriptExit" />  <remarks>This function can also be used in a filterscript to detect if the gamemode changes with  RCON commands like changemode or gmx, as changing the gamemode does not reload a filterscript.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnHausCreated" syntax="OnHausCreated(id)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<dependency name="cache_insert_id"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_id"/>
			<param name="id">
			</param>
		</member>
		<member name="M:OnHausesLoad" syntax="OnHausesLoad()">
			<attribute name="public"/>
			<stacksize value="139"/>
			<dependency name="cache_get_field_count"/>
			<dependency name="cache_get_row_count"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="getFreeHausID"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="h_id"/>
			<dependency name="h_interior"/>
			<dependency name="h_level"/>
			<dependency name="h_preis"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="ih_x"/>
			<dependency name="strmid"/>
			<dependency name="updateHaus"/>
		</member>
		<member name="M:OnIncomingConnection" syntax="OnIncomingConnection(playerid, ip_address[], port)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player attempting to connect
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
				The IP address of the player attempting to connect
			</param>
			<param name="port">
				The port of the attempted connection
			</param>
			<summary>This callback is called when an IP address attempts a connection to the server.  To block  incoming connections, use <a href="#BlockIpAddress">BlockIpAddress</a>.</summary>        <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <seealso name="OnPlayerFinishedDownloading" />  <seealso name="BlockIpAddress" />  <seealso name="UnBlockIpAddress" />  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnIraumLoad" syntax="OnIraumLoad()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="cache_get_field_count"/>
			<dependency name="cache_get_row_count"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="i_int"/>
			<dependency name="i_r"/>
			<dependency name="i_x"/>
			<dependency name="i_y"/>
			<dependency name="i_z"/>
			<dependency name="innenraum"/>
			<dependency name="innenraum"/>
			<dependency name="world"/>
		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
				The ID of the object that was moved
			</param>
			<summary>This callback is called when an object is moved after <a href="#MoveObject">MoveObject</a>  (when it stops moving).</summary>    <seealso name="MoveObject" />  <seealso name="IsObjectMoving" />  <seealso name="StopObject" />  <seealso name="OnPlayerObjectMoved" />  <remarks><a href="#SetObjectPos">SetObjectPos</a> does not work when used in this callback.  To fix  it, recreate the object.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPasswordResponse" syntax="OnPasswordResponse(playerid)">
			<attribute name="public"/>
			<stacksize value="273"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerMoney"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="SetSpawnInfo"/>
			<dependency name="SetTimerEx"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="__printf"/>
			<dependency name="cache_get_field_count"/>
			<dependency name="cache_get_row_count"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="db_id"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="loadPlayerCars"/>
			<dependency name="pMoney"/>
			<dependency name="pOL"/>
			<dependency name="pPayDay"/>
			<dependency name="pXP"/>
			<dependency name="pXPMax"/>
			<dependency name="padminlevel"/>
			<dependency name="payday"/>
			<dependency name="pdeaths"/>
			<dependency name="pdonut"/>
			<dependency name="pfSkin"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="pgold"/>
			<dependency name="pgreen"/>
			<dependency name="plevel"/>
			<dependency name="plsd"/>
			<dependency name="pskin"/>
			<dependency name="pspawnchange"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sx"/>
			<dependency name="sy"/>
			<dependency name="sz"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPickupStreamIn" syntax="OnPickupStreamIn(pickupid, playerid)">
			<stacksize value="1"/>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<summary>Called when a pickup enters the visual range of a player.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPickupStreamOut" syntax="OnPickupStreamOut(pickupid, playerid)">
			<stacksize value="1"/>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<summary>Called when a pickup leaves the visual range of a player.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerCarsLoad" syntax="OnPlayerCarsLoad(playerid)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="CreateVehicle"/>
			<dependency name="abgeschlossen"/>
			<dependency name="besitzer"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="c_r"/>
			<dependency name="c_x"/>
			<dependency name="c_y"/>
			<dependency name="c_z"/>
			<dependency name="cache_get_field_count"/>
			<dependency name="cache_get_row_count"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="db_id"/>
			<dependency name="dl"/>
			<dependency name="farbe1"/>
			<dependency name="farbe2"/>
			<dependency name="getFreeCarID"/>
			<dependency name="id_x"/>
			<dependency name="kennzeichen"/>
			<dependency name="model"/>
			<dependency name="pfahrzeuge"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="tank"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerClickGangZone" syntax="OnPlayerClickGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that clicked a gangzone
			</param>
			<param name="zoneid">
				ID of the gangzone the player clicked
			</param>
			<summary>This callback is called when a player clicked a gangzone.</summary>      <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="UseGangZoneCheck" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that placed a target/waypoint
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X float coordinate where the player clicked
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y float coordinate where the player clicked
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z float coordinate where the player clicked (inaccurate - see note below)
			</param>
			<summary>OnPlayerClickMap is called when a player places a target/waypoint on the pause menu map  (by right-clicking).</summary>          <seealso name="SetPlayerPos" />  <seealso name="SetPlayerPosFindZ" />  <seealso name="GetPlayerPos" />  <remarks>The Z value returned will be <b><c>0</c></b> (invalid) if it is far away from the player;  use the <a href="https://github.com/philip1337/samp-plugin-mapandreas">MapAndreas plugin</a> to get a  more  accurate Z coordinate.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that clicked on a player on the scoreboard
			</param>
			<param name="clickedplayerid">
				The ID of the player that was clicked on
			</param>
			<param name="source">
				<paraminfo>t_CLICK_SOURCE </paraminfo>
				The source of the player's click
			</param>
			<summary>Called when a player double-clicks on a player on the scoreboard.</summary>        <seealso name="OnPlayerClickTextDraw" />  <remarks>There is currently only one <paramref name="source" /> (<b><c>0 - CLICK_SOURCE_SCOREBOARD</c></b>).  The existence of this argument suggests that more sources may be supported in the future.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerClickPlayerGangZone" syntax="OnPlayerClickPlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that clicked a player gangzone
			</param>
			<param name="zoneid">
				ID of the player gangzone the player clicked
			</param>
			<summary>This callback is called when a player clicked a player gangzone.</summary>      <seealso name="CreatePlayerGangZone" />  <seealso name="PlayerGangZoneDestroy" />  <seealso name="UsePlayerGangZoneCheck" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that selected a textdraw
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw that the player selected
			</param>
			<summary>This callback is called when a player clicks on a player-textdraw.  It is not called when  player cancels the select mode (ESC) - however, <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a>  is.</summary>      <seealso name="PlayerTextDrawSetSelectable" />  <seealso name="OnPlayerClickTextDraw" />  <seealso name="OnPlayerClickPlayer" />  <remarks>When a player presses ESC to cancel selecting a textdraw, <a href="#OnPlayerClickTextDraw">OnPlayerClickTextDraw</a>  is called with a textdraw ID of <b><c>INVALID_TEXT_DRAW</c></b>. <a href="#OnPlayerClickPlayerTextDraw">OnPlayerClickPlayerTextDraw</a>  won't be called also.</remarks>  <returns>  Returning <b><c>1</c></b> in this callback will prevent it being called in other scripts.  This  should be used to signal that the textdraw on which they clicked was 'found' and no further processing  is needed.  You should return <b><c>0</c></b> if the textdraw on which they clicked wasn't found,  just like in <a href="#OnPlayerCommandText">OnPlayerCommandText</a>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that clicked on the textdraw
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
				The ID of the clicked textdraw. <b><c>INVALID_TEXT_DRAW</c></b> if selection  was cancelled
			</param>
			<summary>This callback is called when a player clicks on a textdraw or cancels the select mode with  the Escape key.</summary>      <seealso name="OnPlayerClickPlayerTextDraw" />  <seealso name="OnPlayerClickPlayer" />  <remarks>The clickable area is defined by <a href="#TextDrawTextSize">TextDrawTextSize</a>.  The  x and y parameters passed to that function must not be zero or negative. </remarks>  <remarks>Do not use <a href="#CancelSelectTextDraw">CancelSelectTextDraw</a> unconditionally within  this callback.  This results in an infinite loop. </remarks>  <returns>  Returning <b><c>1</c></b> in this callback will prevent it being called in other scripts.  This  should be used to signal that the textdraw on which they clicked was 'found' and no further processing  is needed.  You should return <b><c>0</c></b> if the textdraw on which they clicked wasn't found,  just like in <a href="#OnPlayerCommandText">OnPlayerCommandText</a>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerCommandPerformed" syntax="OnPlayerCommandPerformed(playerid, cmdtext[], success)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnPlayerCommandReceived" syntax="OnPlayerCommandReceived(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="format"/>
			<dependency name="tolower"/>
			<dependency name="zcmd_g_HasOPCE"/>
			<dependency name="zcmd_g_HasOPCS"/>
			<param name="playerid">
				The ID of the player that entered a command
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
				The command that was entered (including the forward slash)
			</param>
			<summary>This callback is called when a player enters a command into the client chat window.  Commands  are anything that start with a forward slash, e.g. <c>/help</c>.</summary>      <seealso name="OnPlayerText" />  <seealso name="OnRconCommand" />  <seealso name="SendRconCommand" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  Return <b><c>1</c></b> if the command was processed, otherwise <b><c>0</c></b>; If the command  was not found both in filterscripts and in gamemode, the player will be received a message: <em>SERVER:  Unknown command</em>.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other scripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPC"/>
			<param name="playerid">
				The ID of the player that connected
			</param>
			<summary>This callback is called when a player connects to the server.</summary>    <seealso name="OnPlayerDisconnect" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerFinishedDownloading" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="70"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="dx"/>
			<dependency name="dy"/>
			<dependency name="dz"/>
			<dependency name="format"/>
			<dependency name="pdeaths"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
				The ID of the player that died
			</param>
			<param name="killerid">
				The ID of the player that killed the player who died, or <b><c>INVALID_PLAYER_ID</c></b>  if there was none
			</param>
			<param name="reason">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the <a href="https://www.open.mp/docs/scripting/resources/weaponids">reason</a>  for the  player's death
			</param>
			<summary>This callback is called when a player dies, either by suicide or by being killed by another  player.</summary>        <seealso name="OnPlayerSpawn" />  <seealso name="SendDeathMessage" />  <seealso name="SetPlayerHealth" />  <remarks>  The reason will return 37 (flame thrower) from any fire sources (e.g.  molotov, 18)<br />  The reason will return 51 from any weapon that creates an explosion (e.g.  RPG, grenade)<br />  You do not need to check whether killerid is valid before using it in <a href="#SendDeathMessage">SendDeathMessage</a>.  <b><c>INVALID_PLAYER_ID</c></b> is a valid killerid ID parameter in that function.<br />  <b>playerid</b> is the only one who can call the callback. (good to know for anti fake death)  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPDC"/>
			<param name="playerid">
				The ID of the player that disconnected
			</param>
			<param name="reason">
				The reason for the disconnection.  See table below
			</param>
			<summary>This callback is called when a player disconnects from the server.</summary>      <seealso name="OnPlayerConnect" />  <seealso name="OnIncomingConnection" />  <seealso name="OnPlayerFinishedDownloading" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>Some functions might not work correctly when used in this callback because the player is  already disconnected when the callback is called.  This means that you can't get unambiguous information  from functions like <a href="#GetPlayerIp">GetPlayerIp</a> and <a href="#GetPlayerPos">GetPlayerPos</a>.</remarks>  <remarks>  <b>Reasons:</b><br />  <ul>  <li><b><c>0</c></b> - timeout/Crash - the player's connection was lost.  Either their game crashed  or their network had a fault.</li>  <li><b><c>1</c></b> - quit - the player purposefully quit, either using the <b><c>/quit (/q)</c></b>  command or via the pause menu.</li>  <li><b><c>2</c></b> - kick/ban - the player was kicked or banned by the server.</li>  </ul>  </remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that ended edition mode
			</param>
			<param name="response">
				<paraminfo>t_EDIT_RESPONSE </paraminfo>
				<b><c>0</c></b> if they cancelled (ESC) or <b><c>1</c></b> if they clicked  the save icon
			</param>
			<param name="index">
				The index of the attached object
			</param>
			<param name="modelid">
				The model of the attached object that was edited
			</param>
			<param name="boneid">
				The bone of the attached object that was edited
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
				The X offset for the attached object that was edited
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
				The Y offset for the attached object that was edited
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
				The Z offset for the attached object that was edited
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
			<summary>This callback is called when a player ends attached object edition mode.</summary>                  <param name="rotationX">The X rotation for the attached object that was edited</param>  <param name="rotationY">The Y rotation for the attached object that was edited</param>  <param name="rotationZ">The Z rotation for the attached object that was edited</param>  <param name="scaleX">The X scale for the attached object that was edited</param>  <param name="scaleY">The Y scale for the attached object that was edited</param>  <param name="scaleZ">The Z scale for the attached object that was edited</param>  <seealso name="EditAttachedObject" />  <seealso name="SetPlayerAttachedObject" />  <remarks>Editions should be discarded if response was <b><c>0</c></b> (cancelled).  This must be  done by storing the offsets etc.  in an array BEFORE using <a href="#EditAttachedObject">EditAttachedObject</a>.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEditDynamicObject" syntax="OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPEO"/>
			<param name="playerid">
				The ID of the player that edited an object
			</param>
			<param name="playerobject">
				<b><c>0</c></b> if it is a global object or <b><c>1</c></b> if it is a  playerobject
			</param>
			<param name="objectid">
				The ID of the edited object
			</param>
			<param name="response">
				<paraminfo>t_EDIT_RESPONSE </paraminfo>
				The type of response
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X offset for the object that was edited
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y offset for the object that was edited
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z offset for the object that was edited
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<summary>This callback is called when a player finishes editing an object (<a href="#EditObject">EditObject</a>/<a  href="#EditPlayerObject">EditPlayerObject</a>).</summary>                <param name="rotationX">The X rotation for the object that was edited</param>  <param name="rotationY">The Y rotation for the object that was edited</param>  <param name="rotationZ">The Z rotation for the object that was edited</param>  <seealso name="EditObject" />  <seealso name="CreateObject" />  <seealso name="DestroyObject" />  <seealso name="MoveObject" />  <remarks>When using <b><c>EDIT_RESPONSE_UPDATE</c></b> be aware that this callback will not be called  when releasing an edit in progress resulting in the last update of <b><c>EDIT_RESPONSE_UPDATE</c></b>  being out of sync of the objects current position.</remarks>  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPEC"/>
			<param name="playerid">
				The player who entered the checkpoint
			</param>
			<summary>This callback is called when a player enters the checkpoint set for that player.</summary>    <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterDynamicArea" syntax="OnPlayerEnterDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicCP" syntax="OnPlayerEnterDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicRaceCP" syntax="OnPlayerEnterDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterGangZone" syntax="OnPlayerEnterGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that entered the gangzone
			</param>
			<param name="zoneid">
				ID of the gangzone the player entered
			</param>
			<summary>This callback is called when a player enters a gangzone.</summary>      <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="UseGangZoneCheck" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerEnterPlayerGangZone" syntax="OnPlayerEnterPlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that entered the player gangzone
			</param>
			<param name="zoneid">
				ID of the player gangzone the player entered
			</param>
			<summary>This callback is called when a player enters a player gangzone.</summary>      <seealso name="CreatePlayerGangZone" />  <seealso name="PlayerGangZoneDestroy" />  <seealso name="UsePlayerGangZoneCheck" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPERC"/>
			<param name="playerid">
				The ID of the player who entered the race checkpoint
			</param>
			<summary>This callback is called when a player enters a race checkpoint.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
				ID of the player who attempts to enter a vehicle
			</param>
			<param name="vehicleid">
				ID of the vehicle the player is attempting to enter
			</param>
			<param name="ispassenger">
				<b><c>0</c></b> if entering as driver. <b><c>1</c></b> if entering as passenger
			</param>
			<summary>This callback is called when a player <b><c>starts</c></b> to enter a vehicle, meaning the  player is not in vehicle yet at the time this callback is called.</summary>        <seealso name="OnPlayerExitVehicle" />  <seealso name="OnPlayerStateChange" />  <seealso name="PutPlayerInVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <remarks>This callback is called when a player <b>BEGINS</b> to enter a vehicle, not when they HAVE  entered it.  See <a href="#OnPlayerStateChange">OnPlayerStateChange</a>. </remarks>  <remarks>This callback is still called if the player is denied entry to the vehicle (e.g.  it is  locked or full). </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<param name="playerid">
				The ID of the player that is exiting a vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle the player is exiting
			</param>
			<summary>This callback is called when a player <b>starts</b> to exit a vehicle.</summary>      <seealso name="OnPlayerEnterVehicle" />  <seealso name="OnPlayerStateChange" />  <seealso name="RemovePlayerFromVehicle" />  <seealso name="GetPlayerVehicleSeat" />  <remarks>Not called if the player falls off a bike or is removed from a vehicle by other means such  as using <a href="#SetPlayerPos">SetPlayerPos</a>.</remarks>  <remarks>You must use <a href="#OnPlayerStateChange">OnPlayerStateChange</a> and check if their old  state is <b><c>PLAYER_STATE_DRIVER</c></b> or <b><c>PLAYER_STATE_PASSENGER</c></b> and their new  state is <b><c>PLAYER_STATE_ONFOOT</c></b>.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that exited the menu
			</param>
			<summary>Called when a player exits a menu.</summary>    <seealso name="OnPlayerSelectedMenuRow" />  <seealso name="CreateMenu" />  <seealso name="DestroyMenu" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerFinishedDownloading" syntax="OnPlayerFinishedDownloading(playerid, virtualworld)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that finished downloading custom models
			</param>
			<param name="virtualworld">
				The ID of the virtual world the player finished downloading custom models  for
			</param>
			<summary>This callback is called when a player finishes downloading custom models.  For more information  on how to add custom models to your server, see <a href="https://sampforum.blast.hk/showthread.php?tid=644105">the  release thread</a> and <a href="https://sampforum.blast.hk/showthread.php?tid=644123">this tutorial</a>.</summary>      <seealso name="OnPlayerConnect" />  <seealso name="OnPlayerDisconnect" />  <seealso name="OnIncomingConnection" />  <remarks>This callback is called every time a player changes virtual worlds, even if there are no  custom models present in that world.</remarks>  <returns>This callback does not handle returns.</returns> 
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that gave damage
			</param>
			<param name="damagedid">
				The ID of the player that received damage
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of health/armour damagedid has lost (combined)
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The <a href="https://www.open.mp/docs/scripting/resources/weaponids">reason</a>  that caused the  damage
			</param>
			<param name="bodypart">
				The body part that was hit.
			</param>
			<summary>This callback is called when a player gives damage to another player.</summary>            <seealso name="OnPlayerTakeDamage" />  <remarks>  Keep in mind this function can be inaccurate in some cases.<br />  If you want to prevent certain players from damaging eachother, use <a href="#SetPlayerTeam">SetPlayerTeam</a>.<br  />  The weaponid will return <b><c>37</c></b> (flame thrower) from any fire sources (e.g.  molotov,  18)<br />  The weaponid will return <b><c>51</c></b> from any weapon that creates an explosion (e.g.  RPG,  grenade)<br />  <b>playerid</b> is the only one who can call the callback.<br />  The amount is always the maximum damage the weaponid can do, even when the health left is less  than that maximum damage.  So when a player has <b><c>100.0</c></b> health and gets shot with a Desert  Eagle which has a damage value of <b><c>46.2</c></b>, it takes 3 shots to kill that player.  All  3 shots will show an amount of <b><c>46.2</c></b>, even though when the last shot hits, the player  only has <b><c>7.6</c></b> health left.  </remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerGiveDamageActor" syntax="OnPlayerGiveDamageActor(playerid, damaged_actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that gave damage
			</param>
			<param name="damaged_actorid">
				The ID of the actor that received damage
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of health/armour damaged_actorid has lost
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The reason that caused the damage
			</param>
			<param name="bodypart">
				The body part that was hit
			</param>
			<summary>This callback is called when a player gives damage to an actor.</summary>            <seealso name="CreateActor" />  <seealso name="SetActorInvulnerable" />  <seealso name="SetActorHealth" />  <seealso name="GetActorHealth" />  <seealso name="IsActorInvulnerable" />  <seealso name="IsValidActor" />  <seealso name="OnActorStreamOut" />  <seealso name="OnPlayerStreamIn" />  <remarks>This function does not get called if the actor is set invulnerable (WHICH IS BY DEFAULT).  See <a href="#SetActorInvulnerable">SetActorInvulnerable</a>.</remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
				The playerid who changed interior
			</param>
			<param name="newinteriorid">
				The interior the player is now in
			</param>
			<param name="oldinteriorid">
				The interior the player was in before
			</param>
			<summary>Called when a player changes interior.  Can be triggered by SetPlayerInterior or when a  player enter/exits a building.</summary>        <seealso name="SetPlayerInterior" />  <seealso name="GetPlayerInterior" />  <seealso name="LinkVehicleToInterior" />  <seealso name="OnPlayerStateChange" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="AttachTrailerToVehicle"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleDistanceFromPoint"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsTrailerAttachedToVehicle"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="bInfo"/>
			<dependency name="bInfo"/>
			<dependency name="b_interior"/>
			<dependency name="b_ix"/>
			<dependency name="b_iy"/>
			<dependency name="b_iz"/>
			<dependency name="b_x"/>
			<dependency name="b_y"/>
			<dependency name="b_z"/>
			<dependency name="false"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_id"/>
			<dependency name="h_interior"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="ih_x"/>
			<dependency name="ih_y"/>
			<dependency name="ih_z"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="isPlayerInRangeOfFrakEnterPoint"/>
			<dependency name="isPlayerInRangeOfFrakExitPoint"/>
			<dependency name="tank"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that pressed or released a key
			</param>
			<param name="newkeys">
				<paraminfo>t_KEY </paraminfo>
				A map (bitmask) of the keys currently held - see <a href="https://www.open.mp/docs/scripting/resources/keys">here</a> 
			</param>
			<param name="oldkeys">
				<paraminfo>t_KEY </paraminfo>
				A map (bitmask) of the keys held prior to the current change - see  <a href="https://www.open.mp/docs/scripting/resources/keys">here</a>
			</param>
			<summary>This callback is called when the state of any supported key is changed (pressed/released).  Directional keys do not trigger OnPlayerKeyStateChange (up/down/left/right).</summary>        <seealso name="GetPlayerKeys" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>  Useful macros:<br />  <code>  // HOLDING(keys)<br />  #define HOLDING(%0) ((newkeys &amp; (%0)) == (%0))<br />  <br />  // PRESSED(keys)<br />  #define PRESSED(%0) (((newkeys &amp; (%0)) == (%0)) &amp;&amp; ((oldkeys &amp; (%0)) != (%0)))<br  />  <br />  // PRESSING(keyVariable, keys)<br />  #define PRESSING(%0,%1) (%0 &amp; (%1))<br />  <br />  // RELEASED(keys)<br />  #define RELEASED(%0) (((newkeys &amp; (%0)) != (%0)) &amp;&amp; ((oldkeys &amp; (%0)) == (%0)))<br  />  </code>  </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPLC"/>
			<param name="playerid">
				The ID of the player that left their checkpoint
			</param>
			<summary>This callback is called when a player leaves the checkpoint set for them by  <a href="#SetPlayerCheckpoint">SetPlayerCheckpoint</a>.  Only one checkpoint can be set at a time.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="OnPlayerLeaveRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerLeaveDynamicArea" syntax="OnPlayerLeaveDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicCP" syntax="OnPlayerLeaveDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicRaceCP" syntax="OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveGangZone" syntax="OnPlayerLeaveGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that exited the gangzone
			</param>
			<param name="zoneid">
				ID of the gangzone the player exited
			</param>
			<summary>This callback is called when a player exited a gangzone.</summary>      <seealso name="GangZoneCreate" />  <seealso name="GangZoneDestroy" />  <seealso name="UseGangZoneCheck" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerLeavePlayerGangZone" syntax="OnPlayerLeavePlayerGangZone(playerid, zoneid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that exited the player gangzone
			</param>
			<param name="zoneid">
				ID of the player gangzone the player exited
			</param>
			<summary>This callback is called when a player exited a player gangzone.</summary>      <seealso name="CreatePlayerGangZone" />  <seealso name="PlayerGangZoneDestroy" />  <seealso name="UsePlayerGangZoneCheck" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPLRC"/>
			<param name="playerid">
				The ID of the player that left the race checkpoint
			</param>
			<summary>This callback is called when a player leaves the race checkpoint.</summary>    <seealso name="OnPlayerEnterCheckpoint" />  <seealso name="OnPlayerLeaveCheckpoint" />  <seealso name="OnPlayerEnterRaceCheckpoint" />  <seealso name="SetPlayerCheckpoint" />  <seealso name="DisablePlayerCheckpoint" />  <seealso name="IsPlayerInCheckpoint" />  <seealso name="SetPlayerRaceCheckpoint" />  <seealso name="DisablePlayerRaceCheckpoint" />  <seealso name="IsPlayerInRaceCheckpoint" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<stacksize value="1"/>
			<param name="playerid">
				The playerid the object is assigned to
			</param>
			<param name="objectid">
				The ID of the player object that was moved
			</param>
			<summary>This callback is called when a player object is moved after <a href="#MovePlayerObject">MovePlayerObject</a>  (when it stops moving).</summary>      <seealso name="OnObjectMoved" />  <seealso name="MovePlayerObject" />  <seealso name="IsPlayerObjectMoving" />  <seealso name="StopPlayerObject" />  <remarks>This callback can also be called for NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerPickUpDynamicPickup" syntax="OnPlayerPickUpDynamicPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPPP"/>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<summary>Called when a player picks up a pickup created with <a href="#CreatePickup">CreatePickup</a>.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerPickUpPlayerPickup" syntax="OnPlayerPickUpPlayerPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePlayerPickup
			</param>
			<summary>Called when a player picks up a pickup created with <a href="#CreatePickup">CreatePlayerPickup</a>.</summary>      <seealso name="CreatePlayerPickup" />  <seealso name="DestroyPlayerPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerPickupStreamIn" syntax="OnPlayerPickupStreamIn(pickupid, playerid)">
			<stacksize value="1"/>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<summary>Called when a pickup enters the visual range of a player.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerPickupStreamOut" syntax="OnPlayerPickupStreamOut(pickupid, playerid)">
			<stacksize value="1"/>
			<param name="pickupid">
				The ID of the pickup, returned by CreatePickup
			</param>
			<param name="playerid">
				The ID of the player that picked up the pickup
			</param>
			<summary>Called when a pickup leaves the visual range of a player.</summary>      <seealso name="CreatePickup" />  <seealso name="DestroyPickup" />  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerRegister" syntax="OnPlayerRegister(playerid)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<dependency name="cache_insert_id"/>
			<dependency name="db_id"/>
			<dependency name="eingeloggt"/>
			<dependency name="pXPMax"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
				The ID of the player that changed class
			</param>
			<param name="classid">
				The ID of the current class being viewed (returned by <a href="#AddPlayerClass">AddPlayerClass</a>)
			</param>
			<summary>Called when a player changes class at class selection (and when class selection first appears).</summary>      <seealso name="OnPlayerRequestSpawn" />  <seealso name="AddPlayerClass" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is also called when a player presses <b>F4</b>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will prevent the player from spawning.  The player can  be forced to spawn when <a href="#SpawnPlayer">SpawnPlayer</a> is used.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerRequestDownload" syntax="OnPlayerRequestDownload(playerid, type, crc)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
				<paraminfo>t_DOWNLOAD_REQUEST </paraminfo>
			</param>
			<param name="crc">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that requested to spawn
			</param>
			<summary>Called when a player attempts to spawn via class selection either by pressing SHIFT or clicking  the 'Spawn' button.</summary>    <seealso name="OnPlayerSpawn" />  <seealso name="OnPlayerRequestClass" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>To prevent players from spawning with certain classes, the last viewed class must be saved  in a variable in <a href="#OnPlayerRequestClass">OnPlayerRequestClass</a>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will prevent the player from spawning.<br />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerSelectDynamicObject" syntax="OnPlayerSelectDynamicObject(playerid, objectid, modelid, x, y, z)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Streamer_CallbackHook"/>
			<dependency name="Streamer_g_OPSO"/>
			<param name="playerid">
				The ID of the player that selected an object
			</param>
			<param name="type">
				<paraminfo>t_SELECT_OBJECT </paraminfo>
				The type of selection
			</param>
			<param name="objectid">
				The ID of the selected object
			</param>
			<param name="modelid">
				The model ID of the selected object
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X position of the selected object
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y position of the selected object
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z position of the selected object
			</param>
			<summary>This callback is called when a player selects an object after <a href="#SelectObject">SelectObject</a>  has been used.</summary>                <seealso name="SelectObject" />  <returns>  <b><c>1</c></b> - Will prevent other scripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next script.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that selected a menu item
			</param>
			<param name="row">
				The ID of the row that was selected.  The first row is ID <b><c>0</c></b>
			</param>
			<summary>This callback is called when a player selects an item from a menu (<a href="#ShowMenuForPlayer">ShowMenuForPlayer</a>).</summary>      <seealso name="OnPlayerExitedMenu" />  <seealso name="OnDialogResponse" />  <seealso name="CreateMenu" />  <seealso name="DestroyMenu" />  <seealso name="AddMenuItem" />  <seealso name="ShowMenuForPlayer" />  <seealso name="HideMenuForPlayer" />  <remarks>The menu ID is not passed to this callback. <a href="#GetPlayerMenu">GetPlayerMenu</a> must  be used to determine which menu the player selected an item on.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in gamemode.  </returns> 
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="653"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="eingeloggt"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_inter"/>
			<dependency name="f_r"/>
			<dependency name="f_world"/>
			<dependency name="f_x"/>
			<dependency name="f_y"/>
			<dependency name="f_z"/>
			<dependency name="fbase"/>
			<dependency name="fbase"/>
			<dependency name="fmotd"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="h_id"/>
			<dependency name="h_interior"/>
			<dependency name="ih_x"/>
			<dependency name="ih_y"/>
			<dependency name="ih_z"/>
			<dependency name="isPlayerinBadFrak"/>
			<dependency name="login"/>
			<dependency name="padminlevel"/>
			<dependency name="pfSkin"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="plevel"/>
			<dependency name="pskin"/>
			<dependency name="pspawnchange"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="sx"/>
			<dependency name="sy"/>
			<dependency name="sz"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that spawned
			</param>
			<summary>This callback is called when a player spawns.(i.e.  after caling <a href="#SpawnPlayer">SpawnPlayer</a>  function).</summary>    <seealso name="OnPlayerDeath" />  <seealso name="OnVehicleSpawn" />  <seealso name="SpawnPlayer" />  <seealso name="AddPlayerClass" />  <seealso name="SetSpawnInfo" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>The game sometimes deducts $100 from players after spawn.</remarks>  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SetPlayerArmedWeapon"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="Tacho"/>
			<dependency name="Tachobox"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="autosOhneMotor"/>
			<dependency name="dx"/>
			<dependency name="dy"/>
			<dependency name="dz"/>
			<dependency name="kmhtd"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="tankLabel"/>
			<dependency name="true"/>
			<param name="playerid">
				The ID of the player that changed state
			</param>
			<param name="newstate">
				<paraminfo>t_PLAYER_STATE </paraminfo>
				The player's new state
			</param>
			<param name="oldstate">
				<paraminfo>t_PLAYER_STATE </paraminfo>
				The player's previous state
			</param>
			<summary>This callback is called when a player changes state.  For example, when a player changes  from being the driver of a vehicle to being on-foot.</summary>        <seealso name="OnPlayerInteriorChange" />  <seealso name="GetPlayerState" />  <seealso name="GetPlayerSpecialAction" />  <seealso name="SetPlayerSpecialAction" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>  <b>States:</b><br />  <ul>  <li><b><c>PLAYER_STATE_NONE</c></b> - empty (while initializing)</li>  <li><b><c>PLAYER_STATE_ONFOOT</c></b> - player is on foot</li>  <li><b><c>PLAYER_STATE_DRIVER</c></b> - player is the driver of a vehicle</li>  <li><b><c>PLAYER_STATE_PASSENGER</c></b> - player is passenger of a vehicle</li>  <li><b><c>PLAYER_STATE_WASTED</c></b> - player is dead or on class selection</li>  <li><b><c>PLAYER_STATE_SPAWNED</c></b> - player is spawned</li>  <li><b><c>PLAYER_STATE_SPECTATING</c></b> - player is spectating</li>  <li><b><c>PLAYER_STATE_EXIT_VEHICLE</c></b> - player exits a vehicle</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_DRIVER</c></b> - player enters a vehicle as driver</li>  <li><b><c>PLAYER_STATE_ENTER_VEHICLE_PASSENGER</c></b> - player enters a vehicle as passenger  </li>  </ul>  </remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player who has been streamed
			</param>
			<param name="forplayerid">
				The ID of the player that streamed the other player in
			</param>
			<summary>This callback is called when a player is streamed by some other player's client.</summary>      <seealso name="OnPlayerStreamOut" />  <seealso name="OnActorStreamIn" />  <seealso name="OnVehicleStreamIn" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="playerid">
				The player who has been destreamed
			</param>
			<param name="forplayerid">
				The player who has destreamed the other player
			</param>
			<summary>This callback is called when a player is streamed out from some other player's client.</summary>      <seealso name="OnPlayerStreamIn" />  <seealso name="OnActorStreamOut" />  <seealso name="OnVehicleStreamOut" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that took damage
			</param>
			<param name="issuerid">
				The ID of the player that caused the damage. <b><c>INVALID_PLAYER_ID</c></b>  if self-inflicted
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
				The amount of damage the player took (health and armour combined)
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the <a href="https://www.open.mp/docs/scripting/resources/weaponids">weapon/reason</a>  for the damage
			</param>
			<param name="bodypart">
				The body part that was hit.
			</param>
			<summary>This callback is called when a player takes damage.</summary>            <seealso name="OnPlayerGiveDamage" />  <seealso name="OnPlayerWeaponShot" />  <remarks><a href="#GetPlayerHealth">GetPlayerHealth</a> and <a href="#GetPlayerArmour">GetPlayerArmour</a>  will return the old amounts of the player before this callback. </remarks>  <remarks>  The weaponid will return <b><c>37</c></b> (flame thrower) from any fire sources (e.g.  molotov,  <b><c>18</c></b>).<br />  The weaponid will return <b><c>51</c></b> from any weapon that creates an explosion (e.g.  RPG,  grenade)<br />  <b>playerid</b> is the only one who can call the callback.<br />  The amount is always the maximum damage the weaponid can do, even when the health left is less  than that maximum damage.  So when a player has <b><c>100.0</c></b> health and gets shot with a Desert  Eagle which has a damage value of <b><c>46.2</c></b>, it takes 3 shots to kill that player.  All  3 shots will show an amount of <b><c>46.2</c></b>, even though when the last shot hits, the player  only has <b><c>7.6</c></b> health left.  </remarks>  <returns>  <b><c>1</c></b> - Callback will not be called in other filterscripts.<br />  <b><c>0</c></b> - Allows this callback to be called in other filterscripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="141"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<param name="playerid">
				The ID of the player who typed the text
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
				The text the player typed
			</param>
			<summary>Called when a player sends a chat message.</summary>      <seealso name="OnPlayerCommandText" />  <seealso name="SendPlayerMessageToPlayer" />  <seealso name="SendPlayerMessageToAll" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will stop the text from being sent to all players.<br  />  It is always called first in filterscripts so returning <b><c>0</c></b> there blocks other scripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GetMoveDirectionFromKeys"/>
			<dependency name="GetPlayerKeys"/>
			<dependency name="GetTickCount"/>
			<dependency name="MoveCamera"/>
			<dependency name="StopPlayerObject"/>
			<dependency name="accelmul"/>
			<dependency name="cameramode"/>
			<dependency name="flyobject"/>
			<dependency name="lastmove"/>
			<dependency name="lrold"/>
			<dependency name="mode"/>
			<dependency name="noclipdata"/>
			<dependency name="noclipdata"/>
			<dependency name="udold"/>
			<param name="playerid">
				ID of the player sending an update packet
			</param>
			<summary>This callback is called every time a client/player updates the server with their status.  It is often used to create custom callbacks for client updates that aren't actively tracked by the  server, such as health or armor updates or players switching weapons.</summary>    <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is called, on average, 30 times per second, per player; only use it when you  know what it's meant for (or more importantly what it's NOT meant for). </remarks>  <remarks>The frequency with which this callback is called for each player varies, depending on what  the player is doing.  Driving or shooting will trigger a lot more updates than idling. </remarks>  <returns>  <b><c>0</c></b> - Update from this player will not be replicated to other clients.<br />  <b><c>1</c></b> - Indicates that this update can be processed normally and sent to other players.<br  />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnPlayerWeaponShot" syntax="OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that shot a weapon
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the <a href="https://www.open.mp/docs/scripting/resources/weaponids">weapon</a>  shot  by the player
			</param>
			<param name="hittype">
				<paraminfo>t_BULLET_HIT_TYPE </paraminfo>
				The type of thing the shot hit (none, player, vehicle, or (player)object)
			</param>
			<param name="hitid">
				The ID of the player, vehicle or object that was hit
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
				The X coordinate that the shot hit
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
				The Y coordinate that the shot hit
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
				The Z coordinate that the shot hit
			</param>
			<summary>This callback is called when a player fires a shot from a weapon.  Only bullet weapons are  supported.  Only <b>passenger</b> drive-by is supported (not driver drive-by, and not sea sparrow  / hunter shots).</summary>                <seealso name="OnPlayerGiveDamage" />  <seealso name="GetPlayerLastShotVectors" />  <remarks>  <li><b><c>BULLET_HIT_TYPE_NONE(0)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_PLAYER(1)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_VEHICLE(2)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_OBJECT(3)</c></b></li>  <li><b><c>BULLET_HIT_TYPE_PLAYER_OBJECT(4)</c></b></li>  </remarks>  <remarks><b><c>BULLET_HIT_TYPE_PLAYER</c></b> is also called for NPCs.  Actors are ignored by this  callback and detects as <b><c>BULLET_HIT_TYPE_NONE</c></b>.</remarks>  <remarks>This callback is only called when lag compensation is <b>enabled</b>. </remarks>  <remarks>  If hittype is:<br />  <ul>  <li>- <b><c>BULLET_HIT_TYPE_NONE</c></b>: the fX, fY and fZ parameters are normal coordinates,  will give 0.0 for coordinates if nothing was hit (e.g.  far object that the bullet can't reach);</li>  <li>- Others: the fX, fY and fZ are offsets relative to the hitid.</li>  </ul>  </remarks>  <remarks>  Isn't called if you fired in vehicle as driver or if you are looking behind with the aim enabled  (shooting in air).<br />  It is called as <b><c>BULLET_HIT_TYPE_VEHICLE</c></b> with the correct hitid (the hit player's  vehicleid) if you are shooting a player which is in a vehicle.  It won't be called as <b><c>BULLET_HIT_TYPE_PLAYER</c></b>  at all.<br />  </remarks>  <remarks>  </remarks>  <remarks><a href="#GetPlayerLastShotVectors">GetPlayerLastShotVectors</a> can be used in this callback  for more detailed bullet vector information.</remarks>  <returns>  <b><c>0</c></b> - Prevent the bullet from causing damage.<br />  <b><c>1</c></b> - Allow the bullet to cause damage.<br />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnQueryError" syntax="OnQueryError(errorid, error[], callback[], query[], handle)">
			<stacksize value="1"/>
			<param name="errorid">
			</param>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
				A string containing the command that was typed, as well as any passed parameters
			</param>
			<summary>This callback is called when a command is sent through the server console, remote RCON,  or via the in-game "/rcon command".</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnRconLoginAttempt" />  <remarks>You will need to include this callback in a loaded filterscript for it to work in the gamemode!</remarks>  <remarks>"/rcon" is not included in "cmd" when a player types a command. </remarks>  <remarks>If you use the <a href="#print">print</a> function here, it will send a message to the player  who typed the command in-game as well as the log.</remarks>  <remarks>This callback is not called when the player is not logged in as RCON admin. </remarks>  <remarks>When the player is not logged in as RCON admin and uses <b>/rcon login</b>, this callback  will not be called and <a href="#OnRconLoginAttempt">OnRconLoginAttempt</a> is called instead.  However,  when the player is logged in as RCON admin, the use of this command will call this callback. </remarks>  <returns>  <b><c>0</c></b> if the command was not processed, it will be passed to another script or <b><c>1</c></b>  if the command was processed, will not be passed to other scripts.<br />  It is always called first in filterscripts so returning <b><c>1</c></b> there blocks gamemode from  seeing it.  </returns> 
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				The IP of the player that tried to log in to RCON
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
				The password used to login with
			</param>
			<param name="success">
				<b><c>0</c></b> if the password was incorrect or <b><c>1</c></b> if it was  correct
			</param>
			<summary>This callback is called when someone attempts to log in to RCON in-game; successful or not.</summary>        <seealso name="OnRconCommand" />  <seealso name="IsPlayerAdmin" />  <seealso name="SendRconCommand" />  <remarks>This callback is only called when /rcon login is used in-game. </remarks>  <remarks>This callback is only called when the player is not yet logged in.  When the player is logged  in, <a href="#OnRconCommand">OnRconCommand</a> is called instead.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnScriptCash" syntax="OnScriptCash(playerid, amount, source)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player who got cash from the game
			</param>
			<param name="amount">
				The amount of cash given
			</param>
			<param name="source">
				Where the money came from
			</param>
			<summary>This callback is called when something in-game like casinos give the player money</summary>        <remarks>Doesn't work</remarks> 
		</member>
		<member name="M:OnTrailerUpdate" syntax="OnTrailerUpdate(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player who sent a trailer update
			</param>
			<param name="vehicleid">
				The Trailer being updated
			</param>
			<summary>This callback is called when a player sent a trailer update.</summary>      <seealso name="OnUnoccupiedVehicleUpdate" />  <seealso name="GetVehicleTrailer" />  <seealso name="IsTrailerAttachedToVehicle" />  <seealso name="AttachTrailerToVehicle" />  <seealso name="DetachTrailerFromVehicle" />  <remarks>This callback is called very frequently per second per trailer.  You should refrain from  implementing intensive calculations or intensive file writing/reading operations in this callback.  </remarks>  <returns>  <b><c>0</c></b> - Cancels any trailer updates from being sent to other players.  Update is still  sent to the updating player.<br />  <b><c>1</c></b> - Processes the trailer update as normal and synchronizes it between all players.<br  />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, new_x, new_y, new_z, vel_x, vel_y, vel_z)">
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that's position was updated
			</param>
			<param name="playerid">
				The ID of the player that sent a vehicle position sync update
			</param>
			<param name="passenger_seat">
				The ID of the seat if the player is a passenger.  0=not in vehicle,  1=front passenger, 2=backleft 3=backright 4+ is for coach/bus etc.  with many passenger seats
			</param>
			<param name="new_x">
				<paraminfo>Float </paraminfo>
				The new X coordinate of the vehicle.
			</param>
			<param name="new_y">
				<paraminfo>Float </paraminfo>
				The new Y coordinate of the vehicle.
			</param>
			<param name="new_z">
				<paraminfo>Float </paraminfo>
				The new Z coordinate of the vehicle.
			</param>
			<param name="vel_x">
				<paraminfo>Float </paraminfo>
				The new X velocity of the vehicle.
			</param>
			<param name="vel_y">
				<paraminfo>Float </paraminfo>
				The new Y velocity of the vehicle.
			</param>
			<param name="vel_z">
				<paraminfo>Float </paraminfo>
				The new Z velocity of the vehicle.
			</param>
			<summary>This callback is called when a player's client updates/syncs the position of a vehicle they're  not driving.  This can happen outside of the vehicle or when the player is a passenger of a vehicle  that has no driver.</summary>                    <seealso name="OnTrailerUpdate" />  <remarks>This callback is called very frequently per second per unoccupied vehicle.  You should refrain  from implementing intensive calculations or intensive file writing/reading operations in this callback.</remarks>  <remarks><a href="#GetVehiclePos">GetVehiclePos</a> will return the old coordinates of the vehicle  before this update.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will stop the vehicle's position being synced to other  players.  Update is still sent to the updating player.  Useful for combating vehicle teleport hacks.<br  />  It is always called first in filterscripts so returning <b><c>0</c></b> there also blocks other  scripts from seeing it.  </returns> 
		</member>
		<member name="M:OnUserCheck" syntax="OnUserCheck(playerid)">
			<attribute name="public"/>
			<stacksize value="267"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="cache_get_field_count"/>
			<dependency name="cache_get_row_count"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that was changed its damage status
			</param>
			<param name="playerid">
				The ID of the player who synced the change in the damage status (who had the  car damaged or repaired)
			</param>
			<summary>This callback is called when a vehicle element such as doors, tires, panels, or lights change  their damage status.</summary>      <seealso name="GetVehicleDamageStatus" />  <seealso name="UpdateVehicleDamageStatus" />  <remarks>This does not include vehicle health changes</remarks>  <returns>  <b><c>1</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.<br />  </returns> 
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="besitzer"/>
			<dependency name="cInfo"/>
			<dependency name="fraktion"/>
			<param name="vehicleid">
				The ID of the vehicle that was destroyed
			</param>
			<param name="killerid">
				The ID of the player that reported (synced) the vehicle's destruction (name  is misleading).  Generally the driver or a passenger (if any) or the closest player
			</param>
			<summary>This callback is called when a vehicle is destroyed - either by exploding or becoming submerged  in water.</summary>      <seealso name="OnVehicleSpawn" />  <seealso name="SetVehicleHealth" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback will also be called when a vehicle enters water, but the vehicle can be saved  from destruction by teleportation or driving out (if only partially submerged).  The callback won't  be called a second time, and the vehicle may disappear when the driver exits, or after a short time.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, componentid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the driver of the vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle which is modded
			</param>
			<param name="componentid">
				The ID of the component which was added to the vehicle
			</param>
			<summary>This callback is called when a vehicle is modded.</summary>        <seealso name="AddVehicleComponent" />  <seealso name="OnEnterExitModShop" />  <seealso name="OnVehiclePaintjob" />  <seealso name="OnVehicleRespray" />  <remarks>This callback is NOT called by <a href="#AddVehicleComponent">AddVehicleComponent</a>.</remarks>  <returns>  Return <b><c>0</c></b> to desync the mod (or an invalid mod) from propagating and / or crashing  players.<br />  It is always called first in gamemode so returning <b><c>0</c></b> there also blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that changed the paintjob of their vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle that had its paintjob changed
			</param>
			<param name="paintjobid">
				The ID of the new paintjob
			</param>
			<summary>Called when a player previews a vehicle paintjob inside a mod shop.  Watch out, this callback  is not called when the player buys the paintjob.</summary>        <seealso name="ChangeVehiclePaintjob" />  <seealso name="ChangeVehicleColours" />  <seealso name="OnVehicleRespray" />  <seealso name="OnVehicleMod" />  <remarks>This callback is not called by <a href="#ChangeVehiclePaintjob">ChangeVehiclePaintjob</a>.</remarks>  <returns>  This callback does not handle returns.  Returning <b><c>0</c></b> won't deny the paintjob change.<br  />  It is always called first in gamemode so returning <b><c>0</c></b> there blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that is driving the vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle that was resprayed
			</param>
			<param name="color1">
				The colour that the vehicle's primary colour was changed to
			</param>
			<param name="color2">
				The colour that the vehicle's secondary colour was changed to
			</param>
			<summary>This callback is called when a player exits a mod shop, even if the colours weren't changed.  Watch out, the name is ambiguous, Pay 'n' Spray shops don't call this callback.</summary>          <seealso name="ChangeVehicleColours" />  <seealso name="ChangeVehiclePaintjob" />  <seealso name="OnVehiclePaintjob" />  <seealso name="OnVehicleMod" />  <seealso name="OnEnterExitModShop" />  <remarks>Previewing a component inside a mod shop might call this callback.</remarks>  <remarks>This callback is not called by <a href="#ChangeVehicleColor">ChangeVehicleColor</a>.</remarks>  <returns>  Returning <b><c>0</c></b> in this callback will deny the colour change.  Returning <b><c>1</c></b>  will allow it.  This can be used to prevent hackers from changing vehicle colours using cheats.<br  />  It is always called first in gamemode so returning <b><c>0</c></b> there also blocks other filterscripts  from seeing it.  </returns> 
		</member>
		<member name="M:OnVehicleSirenStateChange" syntax="OnVehicleSirenStateChange(playerid, vehicleid, newstate)">
			<stacksize value="1"/>
			<param name="playerid">
				The ID of the player that toggled the siren (driver)
			</param>
			<param name="vehicleid">
				The ID of the vehicle of which the siren was toggled for
			</param>
			<param name="newstate">
				<b><c>0</c></b> if siren was turned off, <b><c>1</c></b> if siren was turned  on
			</param>
			<summary>This callback is called when a vehicle's siren is toggled.</summary>        <seealso name="GetVehicleParamsSirenState" />  <remarks>This callback can also be called by NPC.</remarks>  <remarks>This callback is only called when a vehicle's siren is toggled on or off, NOT when the alternate  siren is in use (holding horn).</remarks>  <returns>  <b><c>1</c></b> - Will prevent gamemode from receiving this callback.<br />  <b><c>0</c></b> - Indicates that this callback will be passed to the gamemode.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that spawned
			</param>
			<summary>This callback is called when a vehicle <b>re</b>spawns.</summary>    <seealso name="OnVehicleDeath" />  <seealso name="OnPlayerSpawn" />  <seealso name="SetVehicleToRespawn" />  <seealso name="CreateVehicle" />  <returns>  <b><c>0</c></b> - Will prevent other filterscripts from receiving this callback.<br />  <b><c>1</c></b> - Indicates that this callback will be passed to the next filterscript.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that streamed in for the player
			</param>
			<param name="forplayerid">
				The ID of the player who the vehicle streamed in for
			</param>
			<summary>Called when a vehicle is streamed to a player's client.</summary>      <seealso name="OnVehicleStreamOut" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="vehicleid">
				The ID of the vehicle that streamed out
			</param>
			<param name="forplayerid">
				The ID of the player who is no longer streaming the vehicle
			</param>
			<summary>This callback is called when a vehicle is streamed out for a player's client (it's so far  away that they can't see it).</summary>      <seealso name="OnVehicleStreamIn" />  <seealso name="OnPlayerStreamIn" />  <seealso name="OnPlayerStreamOut" />  <remarks>This callback can also be called by NPC.</remarks>  <returns>  This callback does not handle returns.<br />  It is always called first in filterscripts.  </returns> 
		</member>
		<member name="M:PayDay" syntax="PayDay(playerid)">
			<attribute name="public"/>
			<stacksize value="134"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="SCM"/>
			<dependency name="SetPlayerMoney"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="floatround"/>
			<dependency name="floatround_round"/>
			<dependency name="format"/>
			<dependency name="pPayDay"/>
			<dependency name="pXP"/>
			<dependency name="pXPMax"/>
			<dependency name="plevel"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="savePlayer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:PlayAudioStreamForPlayer" syntax="PlayAudioStreamForPlayer(playerid, url[], posX, posY, posZ, distance, usepos)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to play the audio for
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
				The url to play.  Valid formats are mp3 and ogg/vorbis.  A link to a .pls (playlist)  file will play that playlist
			</param>
			<param name="posX">
				<paraminfo>Float </paraminfo>
				The x position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="posY">
				<paraminfo>Float </paraminfo>
				The y position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="posZ">
				<paraminfo>Float </paraminfo>
				The z position at which to play the audio.  Has no effect unless usepos is set  to 1 (optional=<b><c>0.0</c></b>)
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
				The distance over which the audio will be heard.  Has no effect unless usepos  is set to 1 (optional=<b><c>50.0</c></b>)
			</param>
			<param name="usepos">
				<paraminfo>bool </paraminfo>
				Use the positions and distance specified. (optional=<b><c>0</c></b>)
			</param>
			<library>omp_player</library>  <summary>Play an 'audio stream' for a player.  Normal audio files also work (e.g.  MP3).</summary>                <seealso name="StopAudioStreamForPlayer" />  <seealso name="PlayerPlaySound" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:PlayerPlaySound" syntax="PlayerPlaySound(playerid, soundid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_r"/>
			<param name="playerid">
				The ID of the player for whom to play the sound
			</param>
			<param name="soundid">
				The sound to play
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				x coordinate for the sound to play at. (<b><c>optional=0.0</c></b>)
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				y coordinate for the sound to play at. (<b><c>optional=0.0</c></b>)
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				z coordinate for the sound to play at. (<b><c>optional=0.0</c></b>)
			</param>
			<library>omp_player</library>  <summary>Plays the specified sound for a player.</summary>            <seealso name="PlayCrimeReportForPlayer" />  <seealso name="PlayAudioStreamForPlayer" />  <seealso name="StopAudioStreamForPlayer" />  <remarks>Only use the coordinates if you want the sound to be played at a certain position. By  default, the sound will be played with no position at a certain position.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:PlayerSpectatePlayer" syntax="PlayerSpectatePlayer(playerid, targetid, mode)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_spec"/>
			<param name="playerid">
				The ID of the player that will spectate
			</param>
			<param name="targetid">
				The ID of the player that should be spectated
			</param>
			<param name="mode">
				<paraminfo>t_SPECTATE_MODE </paraminfo>
				The mode to spectate with (optional=<b><c>SPECTATE_MODE_NORMAL</c></b>)
			</param>
			<library>omp_player</library>  <summary>Makes a player spectate (watch) another player.</summary>        <seealso name="PlayerSpectateVehicle" />  <seealso name="TogglePlayerSpectating" />  <remarks>Order is CRITICAL! Ensure that you use <a href="#TogglePlayerSpectating">TogglePlayerSpectating</a>  before <a href="#PlayerSpectatePlayer">PlayerSpectatePlayer</a>. </remarks>  <remarks>playerid and targetid's virtual world and interior must be the same for this function to  work properly. </remarks>  <remarks>  <b>Spectate modes:</b><br />  <ul>  <li><b><c>SPECTATE_MODE_NORMAL</c></b> - normal spectate mode (third person point of view).  Camera can not be changed.</li>  <li><b><c>SPECTATE_MODE_FIXED </c></b> - use SetPlayerCameraPos after this to position the player's  camera, and it will track the player/vehicle set with PlayerSpectatePlayer/PlayerSpectateVehicle.</li>  <li><b><c>SPECTATE_MODE_SIDE</c></b> - the camera will be attached to the side of the player/vehicle  (like when you're in first-person camera on a bike and you do a wheelie).</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  One of the players specified does not exist.  </returns> 
		</member>
		<member name="M:PlayerTextDrawBackgroundColour" syntax="PlayerTextDrawBackgroundColour(playerid, textid, backgroundColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the background colour of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the background colour of
			</param>
			<param name="backgroundColour">
				The colour that the textdraw should be set to
			</param>
			<library>omp_textdraw</library>  <summary>Adjust the background colour of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>If <a href="#PlayerTextDrawSetOutline">PlayerTextDrawSetOutline</a> is used with size &gt;  0, the outline colour will match the colour used in <a href="#PlayerTextDrawBackgroundColour">PlayerTextDrawBackgroundColour</a>.  Changing the value of colour seems to alter the colour used in <a href="#PlayerTextDrawColour">PlayerTextDrawColour</a></remarks> 
		</member>
		<member name="M:PlayerTextDrawColour" syntax="PlayerTextDrawColour(playerid, textid, textColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player who's textdraw to set the colour of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The TextDraw to change
			</param>
			<param name="textColour">
				The colour in hexadecimal format
			</param>
			<library>omp_textdraw</library>  <summary>Sets the text colour of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>You can also use Gametext colours in textdraws.</remarks>  <remarks>The textdraw must be re-shown to the player in order to update the colour.</remarks> 
		</member>
		<member name="M:PlayerTextDrawDestroy" syntax="PlayerTextDrawDestroy(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<param name="playerid">
				The ID of the player who's player-textdraw to destroy
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to destroy
			</param>
			<library>omp_textdraw</library>  <summary>Destroy a player-textdraw.</summary>      <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawFont" syntax="PlayerTextDrawFont(playerid, textid, font)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to change the font of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to change the font of
			</param>
			<param name="font">
				<paraminfo>t_TEXT_DRAW_FONT </paraminfo>
				There are four font styles.  A font value greater than <b><c>3</c></b> does not  display, and anything greater than <b><c>16</c></b> crashes the client.  See  <a href="https://open.mp/docs/scripting/functions/TextDrawFont">https://open.mp/docs/scripting/functions/TextDrawFont</a>
			</param>
			<library>omp_textdraw</library>  <summary>Change the font of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawHide" syntax="PlayerTextDrawHide(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="OnPlayerStateChange"/>
			<param name="playerid">
				The ID of the player to hide the textdraw for
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to hide
			</param>
			<library>omp_textdraw</library>  <summary>Hide a player-textdraw from the player it was created for.</summary>      <seealso name="PlayerTextDrawShow" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" /> 
		</member>
		<member name="M:PlayerTextDrawLetterSize" syntax="PlayerTextDrawLetterSize(playerid, textid, width, height)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the letter size of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to change the letter size of
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				Width of a char
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				Height of a char
			</param>
			<library>omp_textdraw</library>  <summary>Sets the width and height of the letters in a player-textdraw.</summary>          <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>When using this function purely for the benefit of affecting the textdraw box, multiply  'y' by <b><c>0.135</c></b> to convert to <a href="#TextDrawTextSize">TextDrawTextSize</a>-like measurements</remarks>  <remarks>Fonts appear to look the best with an x to y ratio of <b><c>1</c></b> to <b><c>4</c></b>  (e.g.  if x is <b><c>0.5</c></b> then y should be <b><c>2</c></b>).</remarks> 
		</member>
		<member name="M:PlayerTextDrawSetOutline" syntax="PlayerTextDrawSetOutline(playerid, textid, outlineSize)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the outline of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the outline of
			</param>
			<param name="outlineSize">
				The thickness of the outline
			</param>
			<library>omp_textdraw</library>  <summary>Set the outline of a player-textdraw.  The outline colour cannot be changed unless  <a href="#PlayerTextDrawBackgroundColor">PlayerTextDrawBackgroundColor</a>  is used.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawSetProportional" syntax="PlayerTextDrawSetProportional(playerid, textid, proportional)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player whose player-textdraw to set the proportionality of
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the player-textdraw to set the proportionality of
			</param>
			<param name="proportional">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable proportionality, <b><c>0</c></b> to disable
			</param>
			<library>omp_textdraw</library>  <summary>Appears to scale text spacing to a proportional ratio.  Useful when using  <a href="#PlayerTextDrawLetterSize">PlayerTextDrawLetterSize</a>  to ensure the text has even character spacing.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" /> 
		</member>
		<member name="M:PlayerTextDrawSetShadow" syntax="PlayerTextDrawSetShadow(playerid, textid, shadowSize)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to show
			</param>
			<param name="shadowSize">
				The size of the shadow. <b><c>0</c></b> will hide the shadow
			</param>
			<library>omp_textdraw</library>  <summary>Show a player-textdraw to the player it was created for.</summary>        <seealso name="PlayerTextDrawHide" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" /> 
		</member>
		<member name="M:PlayerTextDrawSetString" syntax="PlayerTextDrawSetString(playerid, textid, format[], ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="sekunde"/>
			<param name="playerid">
				The ID of the player who's textdraw string to set
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to change
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The new string for the TextDraw.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textdraw</library>  <summary>Change the text of a player-textdraw.</summary>        <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawShow" />  <seealso name="PlayerTextDrawHide" />  <remarks>There are limits to the length of textdraw strings! See <a href="https://open.mp/docs/scripting/resources/limits">Limits</a>  for more info.</remarks>  <remarks>You don't have to show the TextDraw again in order to apply the changes.</remarks> 
		</member>
		<member name="M:PlayerTextDrawShow" syntax="PlayerTextDrawShow(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerStateChange"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="textid">
				<paraminfo>PlayerText </paraminfo>
				The ID of the textdraw to show
			</param>
			<library>omp_textdraw</library>  <summary>Show a player-textdraw to the player it was created for.</summary>      <seealso name="PlayerTextDrawHide" />  <seealso name="CreatePlayerTextDraw" />  <seealso name="PlayerTextDrawDestroy" />  <seealso name="PlayerTextDrawColour" />  <seealso name="PlayerTextDrawBoxColour" />  <seealso name="PlayerTextDrawBackgroundColour" />  <seealso name="PlayerTextDrawAlignment" />  <seealso name="PlayerTextDrawFont" />  <seealso name="PlayerTextDrawLetterSize" />  <seealso name="PlayerTextDrawTextSize" />  <seealso name="PlayerTextDrawSetOutline" />  <seealso name="PlayerTextDrawSetShadow" />  <seealso name="PlayerTextDrawSetProportional" />  <seealso name="PlayerTextDrawUseBox" />  <seealso name="PlayerTextDrawSetString" /> 
		</member>
		<member name="M:PutPlayerInVehicle" syntax="PutPlayerInVehicle(playerid, vehicleid, seatid)">
			<attribute name="native"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="cmd_startbus"/>
			<param name="playerid">
				The ID of the player to put in a vehicle
			</param>
			<param name="vehicleid">
				The ID of the vehicle to put the player in
			</param>
			<param name="seatid">
				The ID of the seat to put the player in
			</param>
			<library>omp_player</library>  <summary>Puts a player in a vehicle.</summary>        <seealso name="RemovePlayerFromVehicle" />  <seealso name="GetPlayerVehicleid" />  <seealso name="GetPlayerVehicleSeat" />  <seealso name="OnPlayerEnterVehicle" />  <remarks>If this function is used on a player that is already in a vehicle, other players will still  see them in their previous vehicle.  To fix this, first remove the player from the vehicle.</remarks>  <remarks>If the seat is invalid or is taken, will cause a crash when they EXIT the vehicle.</remarks>  <remarks>You can use <a href="#GetPlayerVehicleSeat">GetPlayerVehicleSeat</a> in a loop to check  if a seat is occupied by any players.</remarks>  <remarks>  <b>Seats:</b><br />  <ul>  <li><b><c>0</c></b> - driver.</li>  <li><b><c>1</c></b> - front passenger.</li>  <li><b><c>2</c></b> - back-left passenger.</li>  <li><b><c>3</c></b> - back-right passenger.</li>  <li><b><c>4+</c></b> - passenger seats (coach etc.).</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player or vehicle don't exist.  </returns> 
		</member>
		<member name="M:RemovePlayerFromVehicle" syntax="RemovePlayerFromVehicle(playerid, force)">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to remove from their vehicle
			</param>
			<param name="force">
				<paraminfo>bool </paraminfo>
			</param>
			<library>omp_player</library>  <summary>Removes/ejects a player from their vehicle.</summary>    <seealso name="PutPlayerInVehicle" />  <remarks>  The exiting animation is not synced for other players.<br />  This function will not work when used in <a href="#OnPlayerEnterVehicle">OnPlayerEnterVehicle</a>,  because the player isn't in the vehicle when the callback is called.  Use <a href="#OnPlayerStateChange">OnPlayerStateChange</a>  instead.<br />  The player isn't removed if he is in a RC Vehicle.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:RepairVehicle" syntax="RepairVehicle(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_fixveh"/>
			<param name="vehicleid">
				The ID of the vehicle to repair
			</param>
			<library>omp_vehicle</library>  <summary>Fully repairs a vehicle, including visual damage (bumps, dents, scratches, popped tires  etc.).</summary>    <seealso name="SetVehicleHealth" />  <seealso name="GetVehicleHealth" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:ResetPlayerMoney" syntax="ResetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="SetPlayerMoney"/>
			<param name="playerid">
				The ID of the player to reset the money of
			</param>
			<library>omp_player</library>  <summary>Reset a player's money to $0.</summary>    <seealso name="GetPlayerMoney" />  <seealso name="GivePlayerMoney" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:ResetPlayerWeapons" syntax="ResetPlayerWeapons(playerid)">
			<attribute name="native"/>
			<referrer name="cmd_dropguns"/>
			<param name="playerid">
				The ID of the player whose weapons to remove
			</param>
			<library>omp_player</library>  <summary>Removes all weapons from a player.</summary>    <seealso name="GivePlayerWeapon" />  <seealso name="GetPlayerWeapon" />  <remarks>To remove individual weapons from a player, set their ammo to <b><c>0</c></b> using  <a href="#SetPlayerAmmo">SetPlayerAmmo</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SCM" syntax="SCM(pID, color, msg[])">
			<stacksize value="5"/>
			<referrer name="PayDay"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_exitiraum"/>
			<referrer name="cmd_showiraum"/>
			<referrer name="cmd_suicide"/>
			<referrer name="cmd_car"/>
			<dependency name="SendClientMessage"/>
			<param name="pID">
			</param>
			<param name="color">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SEM" syntax="SEM(pID, msg[])">
			<stacksize value="134"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseinterior"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_gotoxyz"/>
			<referrer name="cmd_weather"/>
			<referrer name="cmd_showservervehs"/>
			<referrer name="cmd_delallveh"/>
			<referrer name="cmd_reloadxmas"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_uninvite"/>
			<referrer name="cmd_giverank"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_annehmen"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_cveh"/>
			<referrer name="cmd_getcarowner"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<param name="pID">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SFM" syntax="SFM(playerid, msg[])">
			<stacksize value="136"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="isPlayerinStaat"/>
			<dependency name="pfraktion"/>
			<dependency name="rangdrei"/>
			<dependency name="rangeins"/>
			<dependency name="rangfunf"/>
			<dependency name="rangnull"/>
			<dependency name="rangsechs"/>
			<dependency name="rangvier"/>
			<dependency name="rangzwei"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SSCANF_Init" syntax="SSCANF_Init(players, invalid, len)">
			<attribute name="native"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="players">
			</param>
			<param name="invalid">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:SSCANF_Join" syntax="SSCANF_Join(playerid, name[], npc)">
			<attribute name="native"/>
			<referrer name="Streamer_OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="npc">
			</param>
		</member>
		<member name="M:SSCANF_Leave" syntax="SSCANF_Leave(playerid)">
			<attribute name="native"/>
			<referrer name="Streamer_OnPlayerDisconnect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnFilterScriptInit" syntax="SSCANF_OnFilterScriptInit()">
			<stacksize value="1"/>
		</member>
		<member name="M:SSCANF_OnGameModeInit" syntax="SSCANF_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ALL"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="CreateObject"/>
			<dependency name="CreatePickup"/>
			<dependency name="DisableInteriorEnterExits"/>
			<dependency name="EnableStuntBonusForAll"/>
			<dependency name="LoadHouses"/>
			<dependency name="ManualVehicleEngineAndLights"/>
			<dependency name="SendRconCommand"/>
			<dependency name="SetGameModeText"/>
			<dependency name="SetTimer"/>
			<dependency name="SetWorldTime"/>
			<dependency name="ShowPlayerMarkers"/>
			<dependency name="Tacho"/>
			<dependency name="Tachobox"/>
			<dependency name="TextDrawAlignment"/>
			<dependency name="TextDrawBackgroundColour"/>
			<dependency name="TextDrawBoxColour"/>
			<dependency name="TextDrawColour"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="TextDrawFont"/>
			<dependency name="TextDrawLetterSize"/>
			<dependency name="TextDrawSetOutline"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="TextDrawTextSize"/>
			<dependency name="TextDrawUseBox"/>
			<dependency name="UsePlayerPedAnims"/>
			<dependency name="__printf"/>
			<dependency name="aduty_text"/>
			<dependency name="dbhandle"/>
			<dependency name="false"/>
			<dependency name="gettime"/>
			<dependency name="kmhtd"/>
			<dependency name="loadBizes"/>
			<dependency name="loadJobs"/>
			<dependency name="loadfraks"/>
			<dependency name="loadiraum"/>
			<dependency name="mysql_connect"/>
			<dependency name="mysql_log"/>
			<dependency name="p1"/>
			<dependency name="p2"/>
			<dependency name="p3"/>
			<dependency name="pdschranke"/>
			<dependency name="pdtor"/>
			<dependency name="stundentimer"/>
			<dependency name="tank"/>
			<dependency name="true"/>
			<dependency name="uhrzeitlabel"/>
		</member>
		<member name="M:SSCANF_OnPlayerConnect" syntax="SSCANF_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="cef_on_player_connect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnPlayerDisconnect" syntax="SSCANF_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="cef_on_player_disconnect"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:SendAdminMessage" syntax="SendAdminMessage(adminlvl, color, string[])">
			<stacksize value="6"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_a"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="eingeloggt"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<param name="adminlvl">
			</param>
			<param name="color">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendClientMessage" syntax="SendClientMessage(playerid, colour, format[], ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SEM"/>
			<referrer name="WPM"/>
			<referrer name="SCM"/>
			<referrer name="KickEx"/>
			<referrer name="pBan"/>
			<referrer name="SendAdminMessage"/>
			<referrer name="SendTeamMessage"/>
			<referrer name="SendFrakMessage"/>
			<referrer name="SFM"/>
			<referrer name="createfCar"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="OnCefInitialize"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_ahelp"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_ainvite"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_respawnveh"/>
			<referrer name="cmd_delveh"/>
			<referrer name="cmd_fly"/>
			<referrer name="cmd_setfill"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_sethp"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_deletehouse"/>
			<referrer name="cmd_gotoxyz"/>
			<referrer name="cmd_w"/>
			<referrer name="cmd_a"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_addschirmex"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_addequipex"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_fixveh"/>
			<referrer name="cmd_arefill"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_clearchat"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="cmd_eveh"/>
			<referrer name="cmd_o"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_weather"/>
			<referrer name="cmd_weatherall"/>
			<referrer name="cmd_randweather"/>
			<referrer name="cmd_finfo"/>
			<referrer name="cmd_allfinfo"/>
			<referrer name="cmd_setint"/>
			<referrer name="cmd_setpint"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_setvw"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givecam"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_showservervehs"/>
			<referrer name="cmd_checkspawn"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_set"/>
			<referrer name="cmd_createfrakcar"/>
			<referrer name="cmd_setnitro"/>
			<referrer name="cmd_saduty"/>
			<referrer name="cmd_makeadmin"/>
			<referrer name="cmd_givelevel"/>
			<referrer name="cmd_stopserver"/>
			<referrer name="cmd_setfstat"/>
			<referrer name="cmd_gmx"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_suspend"/>
			<referrer name="cmd_equip"/>
			<referrer name="cmd_showfmotd"/>
			<referrer name="cmd_fmotd"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_epbonus"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_uninvite"/>
			<referrer name="cmd_giverank"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_orangelist"/>
			<referrer name="cmd_delol"/>
			<referrer name="cmd_news"/>
			<referrer name="cmd_enter"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="createCar"/>
			<referrer name="cmd_intinfo"/>
			<referrer name="cmd_showfill"/>
			<referrer name="cmd_vcolor"/>
			<referrer name="cmd_time"/>
			<referrer name="cmd_skininfo"/>
			<referrer name="cmd_dropguns"/>
			<referrer name="cmd_showpos"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_houses"/>
			<referrer name="cmd_vehicles"/>
			<referrer name="cmd_hduty"/>
			<referrer name="cmd_id"/>
			<referrer name="cmd_credits"/>
			<referrer name="cmd_discord"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_su"/>
			<referrer name="cmd_inv"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_getfrang"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_annehmen"/>
			<referrer name="cmd_spawnchange"/>
			<referrer name="cmd_startbus"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="cmd_flip"/>
			<referrer name="cmd_cveh"/>
			<referrer name="cmd_getcarowner"/>
			<referrer name="cmd_stream"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_nichts"/>
			<param name="playerid">
				The ID of the player to display the message to
			</param>
			<param name="colour">
				The colour of the message (<b>RGBA</b>)
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text that will be displayed <b>(max 144 characters).  Optionally formatted.</b>
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_player</library>  <summary>This function sends a message to a specific player with a chosen colour in the chat.  The  whole line in the chatbox will be in the set colour unless colour embedding is used (since <b><c>0.3c</c></b>).</summary>        <seealso name="SendClientMessageToAll" />  <seealso name="SendPlayerMessageToPlayer" />  <seealso name="SendPlayerMessageToAll" />  <remarks>If a message is longer than 144 characters, it will not be sent.  Truncation can be used  to prevent this.  Displaying a message on multiple lines will also solve this issue. </remarks>  <remarks>Avoid using the percent sign (or format specifiers) in the actual message text without properly  escaping it (like <b><c>%%</c></b>).  It will result in crashes otherwise. </remarks>  <remarks>You can use colour embedding for multiple colours in the message. </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is reported when the string is over  144 characters, but the message won't be sent.<br />  <b><c>0</c></b>: The function failed to execute.  The player is not connected.  </returns> 
		</member>
		<member name="M:SendClientMessageToAll" syntax="SendClientMessageToAll(colour, format[], ...)">
			<attribute name="native"/>
			<referrer name="restart"/>
			<referrer name="KickEx"/>
			<referrer name="pBan"/>
			<referrer name="changeweather"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_clearchat"/>
			<referrer name="cmd_o"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_stopserver"/>
			<referrer name="cmd_xmas"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_news"/>
			<referrer name="OnGameModeExit"/>
			<referrer name="sekunde"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnDialogResponse"/>
			<param name="colour">
				The colour of the message (<b>RGBA</b>)
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The message to show (<b>max 144 characters</b>).  Optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_core</library>  <summary>Displays a message in chat to all players.  This is a multi-player equivalent of  <a href="#SendClientMessage">SendClientMessage</a>.</summary>      <seealso name="SendClientMessage" />  <seealso name="SendPlayerMessageToAll" />  <remarks>Avoid using format specifiers in your messages without formatting the string that is sent.  It will result in crashes otherwise.</remarks>  <returns>This function always returns <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:SendFrakMessage" syntax="SendFrakMessage(fraktid, color, string[])">
			<stacksize value="6"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_delol"/>
			<referrer name="cmd_news"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="eingeloggt"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<param name="fraktid">
			</param>
			<param name="color">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendRconCommand" syntax="SendRconCommand(format[], ...)">
			<attribute name="native"/>
			<referrer name="restart"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="cmd_reloadxmas"/>
			<referrer name="cmd_stopserver"/>
			<referrer name="cmd_gmx"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The RCON command to be executed.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_network</library>  <summary>Sends an RCON (Remote Console) command.</summary>    <seealso name="IsPlayerAdmin" />  <seealso name="OnRconCommand" />  <seealso name="OnRconLoginAttempt" />  <remarks>Does not support login, due to the lack of a 'playerid' parameter.</remarks>  <remarks>'password 0' will remove the server's password if one is set.</remarks>  <returns>This function always returns <b><c>1</c></b>.</returns>  <remarks>This function will result in <a href="#OnRconCommand">OnRconCommand</a> being called.</remarks> 
		</member>
		<member name="M:SendTeamMessage" syntax="SendTeamMessage(color, string[])">
			<stacksize value="6"/>
			<referrer name="cmd_minigun"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="eingeloggt"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<param name="color">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetCameraBehindPlayer" syntax="SetCameraBehindPlayer(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerRequestClass"/>
			<param name="playerid">
				The player you want to restore the camera for
			</param>
			<library>omp_player</library>  <summary>Restore the camera to a place behind the player, after using a function like  <a href="#SetPlayerCameraPos">SetPlayerCameraPos</a>.</summary>    <seealso name="SetPlayerCameraPos" />  <seealso name="SetPlayerCameraLookAt" /> 
		</member>
		<member name="M:SetDynamicObjectMaterial" syntax="SetDynamicObjectMaterial(objectid, materialindex, modelid, txdname[], texturename[], materialcolor)">
			<attribute name="native"/>
			<referrer name="loadxmas"/>
			<param name="objectid">
			</param>
			<param name="materialindex">
			</param>
			<param name="modelid">
			</param>
			<param name="txdname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="texturename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialcolor">
			</param>
		</member>
		<member name="M:SetGameModeText" syntax="SetGameModeText(format[], ...)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The gamemode name to display.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_core</library>  <summary>Set the name of the game mode, which appears in the server browser.</summary>   
		</member>
		<member name="M:SetPVarInt" syntax="SetPVarInt(playerid, pvar[], value)">
			<attribute name="native"/>
			<referrer name="FlyMode"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_saduty"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_suspend"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_annehmen"/>
			<referrer name="cmd_startbus"/>
			<referrer name="cmd_stream"/>
			<referrer name="OnPlayerExitVehicle"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player whose player variable will be set
			</param>
			<param name="pvar">
				<paraminfo> [] </paraminfo>
				The name of the player variable
			</param>
			<param name="value">
				The integer to be set
			</param>
			<library>omp_variable</library>  <summary>Set an integer player variable.</summary>        <seealso name="GetPVarInt" />  <seealso name="SetPVarString" />  <seealso name="GetPVarString" />  <seealso name="SetPVarFloat" />  <seealso name="GetPVarFloat" />  <seealso name="DeletePVar" />  <remarks>Variables aren't reset until after <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>  is called, so the values are still accessible in <a href="#OnPlayerDisconnect">OnPlayerDisconnect</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  Either the player specified is not connected,  or the variable name is null or over 40 characters.  </returns> 
		</member>
		<member name="M:SetPickupForPlayer" syntax="SetPickupForPlayer(playerid, id, model, type, x, y, z)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="id">
			</param>
			<param name="model">
			</param>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<library>omp_pickup</library> 
		</member>
		<member name="M:SetPlayer3DTextLabelVirtualWorld" syntax="SetPlayer3DTextLabelVirtualWorld(playerid, textid, virtualWorld)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="textid">
				<paraminfo>PlayerText3D </paraminfo>
			</param>
			<param name="virtualWorld">
			</param>
			<library>omp_textlabel</library> 
		</member>
		<member name="M:SetPlayerArmedWeapon" syntax="SetPlayerArmedWeapon(playerid, weaponid)">
			<attribute name="native"/>
			<referrer name="OnPlayerStateChange"/>
			<param name="playerid">
				The ID of the player to arm with a weapon
			</param>
			<param name="weaponid">
				<paraminfo>t_WEAPON </paraminfo>
				The ID of the weapon that the player should be armed with
			</param>
			<library>omp_player</library>  <summary>Sets which weapon (that a player already has) the player is holding.</summary>      <seealso name="GivePlayerWeapon" />  <seealso name="GetPlayerWeapon" />  <remarks>This function arms a player with a weapon they <b>already have</b>; it does not give them  a new weapon.  See <a href="#GivePlayerWeapon">GivePlayerWeapon</a>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.  Success is returned even when the function  fails to execute (the player doesn't have the weapon specified, or it is an invalid weapon).<br />  <b><c>0</c></b>: The function failed to execute.  The player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerArmour" syntax="SetPlayerArmour(playerid, armour)">
			<attribute name="native"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_addschirmex"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_addequipex"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_equip"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="cmd_suicide"/>
			<referrer name="cmd_hduty"/>
			<param name="playerid">
				The ID of the player to set the armour of
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
				The amount of armour to set, as a percentage (float).  Values larger than <b><c>100</c></b>  are valid, but won't be displayed in the HUD's armour bar
			</param>
			<library>omp_player</library>  <summary>Set a player's armor level.</summary>      <seealso name="GetPlayerArmour" />  <seealso name="SetPlayerHealth" />  <seealso name="GetPlayerHealth" />  <remarks>Armour is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b></remarks>  <remarks>The function's name is armour, not armor (Americanized).</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerCameraLookAt" syntax="SetPlayerCameraLookAt(playerid, x, y, z, cut)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				The ID of the player whose camera to set
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate for the player's camera to look at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate for the player's camera to look at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate for the player's camera to look at
			</param>
			<param name="cut">
				<paraminfo>t_CAM_MOVE </paraminfo>
				The style of the change.  Can be used to interpolate (change slowly) from old pos  to new pos using <b><c>CAMERA_MOVE</c></b>.  Added in <b>0.3e</b>.  Leave out for older versions  (optional=<b><c>CAMERA_CUT</c></b>)
			</param>
			<library>omp_player</library>  <summary>Set the direction a player's camera looks at.  Generally meant to be used in combination  with <a href="#SetPlayerCameraPos">SetPlayerCameraPos</a>.</summary>            <seealso name="SetPlayerCameraPos" />  <seealso name="SetCameraBehindPlayer" />  <seealso name="GetPlayerCameraPos" />  <seealso name="GetPlayerCameraFrontVector" />  <remarks>Using the camera functions directly after enabling spectator mode doesn't work.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerCameraPos" syntax="SetPlayerCameraPos(playerid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<param name="playerid">
				ID of the player
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to place the camera at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to place the camera at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to place the camera at
			</param>
			<library>omp_player</library>  <summary>Sets the camera to a specific position for a player.</summary>          <seealso name="SetPlayerCameraLookAt" />  <seealso name="SetCameraBehindPlayer" />  <remarks>You may also have to use <a href="#SetPlayerCameraLookAt">SetPlayerCameraLookAt</a> with  this function in order to work properly.</remarks>  <remarks>Use <a href="#SetCameraBehindPlayer">SetCameraBehindPlayer</a> to reset the camera to behind  the player.</remarks>  <remarks>Using the camera functions directly after enabling spectator mode doesn't work.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified doesn't exist.  </returns> 
		</member>
		<member name="M:SetPlayerCheckpoint" syntax="SetPlayerCheckpoint(playerid, centreX, centreY, centreZ, radius)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_startmuell"/>
			<referrer name="cmd_startbus"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<param name="playerid">
				The ID of the player for whom to set a checkpoint
			</param>
			<param name="centreX">
				<paraminfo>Float </paraminfo>
				The x coordinate to set the checkpoint at
			</param>
			<param name="centreY">
				<paraminfo>Float </paraminfo>
				The y coordinate to set the checkpoint at
			</param>
			<param name="centreZ">
				<paraminfo>Float </paraminfo>
				The z coordinate to set the checkpoint at
			</param>
			<param name="radius">
				<paraminfo>Float </paraminfo>
				The radius of the checkpoint
			</param>
			<library>omp_checkpoint</library>  <summary>Sets a checkpoint (red cylinder) for a player.  Also shows a red blip on the radar.  When  players enter a checkpoint, <a href="#OnPlayerEnterCheckpoint">OnPlayerEnterCheckpoint</a> is called  and actions can be performed.</summary>            <remarks>  If a checkpoint is already set it will use the radius of that checkpoint instead of the new one.<br  />  Checkpoints created on server-created objects (<a href="#CreateObject">CreateObject</a>/  <a href="#CreatePlayerObject">CreatePlayerObject</a>)  will appear down on the 'real' ground, but will still function correctly.  A pickup can be used instead.  </remarks>  <remarks>Checkpoints are asynchronous, meaning only one can be shown at a time.  To 'stream' checkpoints  (only show them when players are close enough), use a checkpoint streamer.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerColor" syntax="SetPlayerColor(playerid, colour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_equip"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player whose colour to set
			</param>
			<param name="colour">
				The colour to set.  Supports alpha values (<b>RGBA</b>)
			</param>
			<library>omp_player</library>  <summary>Set the colour of a player's nametag and marker (radar blip).</summary>      <seealso name="SetPlayerMarkerForPlayer" />  <seealso name="GetPlayerColor" />  <seealso name="ChangeVehicleColor" />  <remarks>This function will change player's colour for everyone, even if player's colour was changed  with <a href="#SetPlayerMarkerForPlayer">SetPlayerMarkerForPlayer</a> for any other player. </remarks>  <remarks>If used under <a href="#OnPlayerConnect">OnPlayerConnect</a>, the affecting player will  not see the colour in the TAB menu. </remarks> 
		</member>
		<member name="M:SetPlayerFacingAngle" syntax="SetPlayerFacingAngle(playerid, ang)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
				The ID of the player to set the facing angle of
			</param>
			<param name="ang">
				<paraminfo>Float </paraminfo>
				The angle the player should face
			</param>
			<library>omp_player</library>  <summary>Set a player's facing angle (z rotation).</summary>      <seealso name="GetPlayerFacingAngle" />  <seealso name="SetPlayerPos" />  <remarks>Angles are reversed in GTA:SA; 90 degrees would be East in the real world, but in GTA:SA  90 degrees is in fact West.  North and South are still 0/360 and 180.  To convert this, simply do  <b>360 - angle</b>.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerHealth" syntax="SetPlayerHealth(playerid, health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_sethp"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_addschirmex"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_addequipex"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_suicide"/>
			<referrer name="cmd_hduty"/>
			<referrer name="cmd_use"/>
			<referrer name="OnPlayerStateChange"/>
			<param name="playerid">
				The ID of the player to set the health of
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
				The value to set the player's health to.  Max health that can be displayed in  the HUD is <b><c>100</c></b>, though higher values are valid
			</param>
			<library>omp_player</library>  <summary>Set the health of a player.</summary>      <seealso name="GetPlayerHealth" />  <seealso name="GetPlayerArmour" />  <seealso name="SetPlayerArmour" />  <remarks>Health is obtained rounded to integers: set <b><c>50.15</c></b>, but get <b><c>50.0</c></b></remarks>  <remarks>If a player's health is set to <b><c>0</c></b> or a minus value, they will die instantly.</remarks>  <remarks>If a player's health is below <b><c>10</c></b> or above <b><c>98303</c></b>, their health  bar will flash. </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerInterior" syntax="SetPlayerInterior(playerid, interiorid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_setint"/>
			<referrer name="cmd_setpint"/>
			<referrer name="cmd_setvw"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_exitiraum"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_enter"/>
			<referrer name="isPlayerInRangeOfFrakEnterPoint"/>
			<referrer name="isPlayerInRangeOfFrakExitPoint"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to set the interior of
			</param>
			<param name="interiorid">
				The <a href="https://www.open.mp/docs/scripting/resources/interiorids">interior  ID</a> to  set the player in
			</param>
			<library>omp_player</library>  <summary>Set a player's interior.  A list of currently known interiors and their positions can be  found <a href="https://www.open.mp/docs/scripting/resources/interiorids">here</a>.</summary>      <seealso name="GetPlayerInterior" />  <seealso name="LinkVehicleToInterior" />  <seealso name="OnPlayerInteriorChange" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerMoney" syntax="SetPlayerMoney(playerid, money)">
			<stacksize value="4"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="PayDay"/>
			<referrer name="cmd_get"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="ResetPlayerMoney"/>
			<param name="playerid">
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:SetPlayerName" syntax="SetPlayerName(playerid, name[])">
			<attribute name="native"/>
			<referrer name="cmd_fakeme"/>
			<param name="playerid">
				The ID of the player to set the name of
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name to set.  Must be 1-24 characters long and only contain valid characters  (<b>0-9</b>, <b>a-z</b>, <b>A-z</b>, <b>[]</b>, <b>()</b>, <b>$</b>, <b>@</b>, <b>.</b>, <b>_</b>,  <b>=</b>)
			</param>
			<library>omp_player</library>  <summary>Sets the name of a player.</summary>      <seealso name="GetPlayerName" />  <remarks>Changing the players' name to the same name but with different character cases (e.g. "John"  to "JOHN") will not work. </remarks>  <remarks>If used in <a href="#OnPlayerConnect">OnPlayerConnect</a>, the new name will <b>not</b>  be shown for the connecting player. </remarks>  <remarks>Passing a null string as the new name will crash the server. </remarks>  <remarks>Player names can be up to 24 characters when using this function, but when joining the server  from the server browser, players' names must be no more than 20 and less than 3 characters  (the server will deny entry).  This allows for 4 characters extra when using <a href="#SetPlayerName">SetPlayerName</a>.  </remarks>  <returns>  <b><c>1</c></b> The name was changed successfully.<br />  <b><c>0</c></b> The player is not connected or the name is already in use.<br />  <b><c>-1</c></b> The name can not be changed (it's less than 3 symbols, too long or has invalid characters).  </returns> 
		</member>
		<member name="M:SetPlayerPos" syntax="SetPlayerPos(playerid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_gotoxyz"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_exitiraum"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_enter"/>
			<referrer name="isPlayerInRangeOfFrakEnterPoint"/>
			<referrer name="isPlayerInRangeOfFrakExitPoint"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to set the position of
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the player at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to position the player at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to position the player at
			</param>
			<library>omp_player</library>  <summary>Set a player's position.</summary>          <seealso name="SetPlayerPosFindZ" />  <seealso name="SetPlayerFacingAngle" />  <seealso name="GetPlayerPos" />  <seealso name="SetVehiclePos" />  <seealso name="GetVehiclePos" />  <remarks>Using this function on a player in a vehicle will instantly remove them from the vehicle.  Useful for quickly ejecting players.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerScore" syntax="SetPlayerScore(playerid, score)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="PayDay"/>
			<referrer name="cmd_givelevel"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
				The ID of the player to set the score of
			</param>
			<param name="score">
				The value to set the player's score to
			</param>
			<library>omp_player</library>  <summary>Set a player's score.  Players' scores are shown in the scoreboard (shown by holding the  TAB key).</summary>      <seealso name="GetPlayerScore" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerSkin" syntax="SetPlayerSkin(playerid, skinid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_setskin"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_suspend"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_setfskin"/>
			<param name="playerid">
				The ID of the player to set the skin of
			</param>
			<param name="skinid">
				The <a href="https://www.open.mp/docs/scripting/resources/skins">skin</a> the player  should use
			</param>
			<library>omp_player</library>  <summary>Set the skin of a player.  A player's skin is their character model.</summary>      <seealso name="GetPlayerSkin" />  <seealso name="SetSpawnInfo" />  <remarks>If a player's skin is set when they are crouching, in a vehicle, or performing certain animations,  they will become frozen or otherwise glitched.  This can be fixed by using  <a href="#TogglePlayerControllable">TogglePlayerControllable</a>.  Players can be detected as being crouched through <a href="#GetPlayerSpecialAction">GetPlayerSpecialAction</a>  (<b><c>SPECIAL_ACTION_DUCK</c></b>).</remarks>  <remarks>Setting a player's skin when he is dead may crash players around him.</remarks>  <remarks>Note that 'success' is reported even when skin ID is invalid (not <b><c>0</c></b>-<b><c>311</c></b>,  or <b><c>74</c></b>), but the skin will be set to ID <b><c>0</c></b> (CJ).</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player specified does not exist.<br  />  </returns> 
		</member>
		<member name="M:SetPlayerVirtualWorld" syntax="SetPlayerVirtualWorld(playerid, virtualWorld)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_setvw"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_exitiraum"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_enter"/>
			<referrer name="isPlayerInRangeOfFrakEnterPoint"/>
			<referrer name="isPlayerInRangeOfFrakExitPoint"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player you want to set the virtual world of
			</param>
			<param name="virtualWorld">
				The virtual world ID to put the player in
			</param>
			<library>omp_player</library>  <summary>Set the virtual world of a player.  They can only see other players or vehicles that are  in that same world.</summary>      <seealso name="GetPlayerVirtualWorld" />  <seealso name="SetVehicleVirtualWorld" />  <remarks>The default virtual world is <b><c>0</c></b></remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:SetPlayerWantedLevel" syntax="SetPlayerWantedLevel(playerid, level)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_su"/>
			<param name="playerid">
				The ID of the player to set the wanted level of
			</param>
			<param name="level">
				The wanted level to set for the player (0-6)
			</param>
			<library>omp_player</library>  <summary>Set a player's wanted level (6 brown stars under HUD).</summary>      <seealso name="GetPlayerWantedLevel" />  <seealso name="PlayCrimeReportForPlayer" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:SetPlayerWeather" syntax="SetPlayerWeather(playerid, weather)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_weather"/>
			<param name="playerid">
				The ID of the player whose weather to set
			</param>
			<param name="weather">
				The <a href="https://www.open.mp/docs/scripting/resources/weatherid">weather</a>  to set
			</param>
			<library>omp_player</library>  <summary>Set a player's weather.</summary>      <seealso name="SetWeather" />  <seealso name="SetGravity" />  <remarks>If <a href="#TogglePlayerClock">TogglePlayerClock</a> is enabled, weather will slowly change  over time, instead of changing instantly.</remarks> 
		</member>
		<member name="M:SetServerRuleFlags" syntax="SetServerRuleFlags(rule[], flags)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="rule">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="flags">
				<paraminfo>E_SERVER_RULE_FLAGS </paraminfo>
			</param>
			<library>omp_core</library> 
		</member>
		<member name="M:SetSpawnInfo" syntax="SetSpawnInfo(playerid, team, skin, spawnX, spawnY, spawnZ, angle, weapon1, ammo1, weapon2, ammo2, weapon3, ammo3)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPasswordResponse"/>
			<param name="playerid">
				The Playerid of who you want to set the spawn information
			</param>
			<param name="team">
				The Team-ID of the chosen player
			</param>
			<param name="skin">
				The <a href="https://open.mp/docs/scripting/resources/skins">skin</a> which the player  will  spawn with
			</param>
			<param name="spawnX">
				<paraminfo>Float </paraminfo>
				The x coordinate of the player's spawn position
			</param>
			<param name="spawnY">
				<paraminfo>Float </paraminfo>
				The y coordinate of the player's spawn position
			</param>
			<param name="spawnZ">
				<paraminfo>Float </paraminfo>
				The z coordinate of the player's spawn position
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The direction in which the player should face after spawning
			</param>
			<param name="weapon1">
				<paraminfo>t_WEAPON </paraminfo>
				The first spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo1">
				The amount of ammunition for the primary spawnweapon
			</param>
			<param name="weapon2">
				<paraminfo>t_WEAPON </paraminfo>
				The second spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo2">
				The amount of ammunition for the second spawnweapon
			</param>
			<param name="weapon3">
				<paraminfo>t_WEAPON </paraminfo>
				The third spawn-<a href="https://open.mp/docs/scripting/resources/weaponids">weapon</a>  for  the player
			</param>
			<param name="ammo3">
				The amount of ammunition for the third spawnweapon
			</param>
			<library>omp_class</library>  <summary>This function can be used to change the spawn information of a specific player.  It allows  you to automatically set someone's spawn weapons, their team, skin and spawn position, normally used  in case of minigames or automatic-spawn systems.</summary>                            <seealso name="SetPlayerSkin" />  <seealso name="SetPlayerTeam" />  <seealso name="SpawnPlayer" /> 
		</member>
		<member name="M:SetTeamCount" syntax="SetTeamCount(count)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="count">
				Number of teams the gamemode knows
			</param>
			<library>omp_class</library>  <summary>This function is used to change the amount of teams used in the gamemode.  It has no obvious  way of being used, but can help to indicate the number of teams used for better (more effective)  internal handling.  This function should only be used in the <a href="#OnGameModeInit">OnGameModeInit</a>  callback.  Important: You can pass 2 billion here if you like, this function has no effect at all.</summary>    <seealso name="GetPlayerTeam" />  <seealso name="SetPlayerTeam" /> 
		</member>
		<member name="M:SetTimer" syntax="SetTimer(functionName[], interval, repeating)">
			<attribute name="native"/>
			<referrer name="cmd_netstat"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				Name of the function to call as a string.  This must be a public function  (forwarded).  A null string here will crash the server
			</param>
			<param name="interval">
				Interval in milliseconds
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
				Whether the timer should repeat or not
			</param>
			<library>omp_core</library>  <summary>Sets a 'timer' to call a function after some time.  Can be set to repeat.</summary>        <seealso name="SetTimerEx" />  <seealso name="KillTimer" />  <remarks>Timer IDs are never used twice.  You can use <a href="#KillTimer">KillTimer</a> on a timer  ID and it won't matter if it's running or not. </remarks>  <remarks>The function that should be called must be public. </remarks>  <remarks>The use of many timers will result in increased memory/cpu usage. </remarks>  <returns>The ID of the timer that was started.  Timer IDs start at <b><c>1</c></b>.</returns> 
		</member>
		<member name="M:SetTimerEx" syntax="SetTimerEx(functionName[], interval, repeating, specifiers[], ...)">
			<attribute name="native"/>
			<referrer name="OnPasswordResponse"/>
			<param name="functionName">
				<paraminfo> [] </paraminfo>
				The name of a public function to call when the timer expires
			</param>
			<param name="interval">
				Interval in milliseconds
			</param>
			<param name="repeating">
				<paraminfo>bool </paraminfo>
				Whether the timer should be called repeatedly (can only be stopped with <a  href="#KillTimer">KillTimer</a>) or only once
			</param>
			<param name="specifiers">
				<paraminfo> [] </paraminfo>
				Special format indicating the types of values the timer will pass
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
				Indefinite number of arguments to pass (must follow format specified in previous parameter)
			</param>
			<library>omp_core</library>  <summary>Sets a timer to call a function after the specified interval.  This variant ('Ex') can pass  parameters (such as a player ID) to the function.</summary>            <seealso name="SetTimer" />  <seealso name="KillTimer" />  <seealso name="CallLocalFunction" />  <seealso name="CallRemoteFunction" />  <remarks>Timer IDs are never used twice.  You can use KillTimer() on a timer ID and it won't matter  if it's running or not. </remarks>  <remarks>The function that should be called must be public. </remarks>  <remarks>The use of many timers will result in increased memory/cpu usage. </remarks>  <remarks>  <b>Specifier syntax:</b><br />  <ul>  <li><b><c>i</c></b> - integer</li>  <li><b><c>d</c></b> - integer</li>  <li><b><c>a</c></b> - array The next parameter must be an integer (<b><c>"i"</c></b>) with the  array's size</li>  <li><b><c>s</c></b> - string</li>  <li><b><c>f</c></b> - float</li>  <li><b><c>b</c></b> - boolean</li>  </ul>  </remarks>  <returns>The ID of the timer that was started.  Timer IDs start at <b><c>1</c></b> and are never  reused.  There are no internal checks to verify that the parameters passed are valid (e.g.  duration  not a minus value).</returns> 
		</member>
		<member name="M:SetVehicleBeenOccupied" syntax="SetVehicleBeenOccupied(vehicleid, occupied)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="occupied">
				<paraminfo>bool </paraminfo>
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SetVehicleDead" syntax="SetVehicleDead(vehicleid, dead)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="dead">
				<paraminfo>bool </paraminfo>
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SetVehicleHealth" syntax="SetVehicleHealth(vehicleid, health)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="createCar"/>
			<param name="vehicleid">
				The ID of the vehicle to set the health of
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
				The health, given as a float value
			</param>
			<library>omp_vehicle</library>  <summary>Set a vehicle's health.  When a vehicle's health decreases the engine will produce smoke,  and finally fire when it decreases to less than 250 (25%).</summary>      <seealso name="GetVehicleHealth" />  <seealso name="RepairVehicle" />  <seealso name="SetPlayerHealth" />  <seealso name="OnVehicleDeath" />  <remarks>Full vehicle health is <b><c>1000</c></b>, however higher values are possible and increase  the health of the vehicle.</remarks>  <remarks>  <b>Health:</b><br />  <ul>  <li>&gt; 650 - undamaged</li>  <li>650-550 - white Smoke</li>  <li>550-390 - grey Smoke</li>  <li>390-250 - black Smoke</li>  <li>&lt; 250 - on fire (will explode seconds later)</li>  </ul>  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleNumberPlate" syntax="SetVehicleNumberPlate(vehicleid, numberPlate[])">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="createCar"/>
			<param name="vehicleid">
				The ID of the vehicle to set the number plate of
			</param>
			<param name="numberPlate">
				<paraminfo> [] </paraminfo>
				The text that should be displayed on the number plate
			</param>
			<library>omp_vehicle</library>  <summary>Set a vehicle numberPlate.</summary>      <seealso name="SetVehicleToRespawn" />  <seealso name="ChangeVehicleColours" />  <seealso name="ChangeVehiclePaintjob" />  <remarks>You can use colour embedding on the number plate text.</remarks>  <remarks>  This function has no internal error checking.  Do not assign custom number plates to vehicles without  plates (boats, planes, etc) as this will result in some unneeded processing time on the client.<br  />  The vehicle must be re-spawned or re-streamed for the changes to take effect.<br />  There's a limit of 32 characters on each number plate (including embedded colours).<br />  The text length that can be seen on the number plate is around 9 to 10 characters, more characters  will cause the text to split.<br />  Some vehicle models has a backward number plate, e.g.  Boxville (498) (as an alternative to this  vehicle you can use vehicle model ID 609, which is a duplicated Boxville (aka Boxburg), but with  a regular number plate).<br />  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.<br />  </returns> 
		</member>
		<member name="M:SetVehicleOccupiedTick" syntax="SetVehicleOccupiedTick(vehicleid, ticks)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="ticks">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SetVehicleParamsEx" syntax="SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="stopMotor"/>
			<referrer name="cmd_cveh"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="vehicleid">
				The ID of the vehicle to set the parameters of
			</param>
			<param name="engine">
				<paraminfo>bool </paraminfo>
				Engine status. <b><c>0</c></b> - Off, <b><c>1</c></b> - On
			</param>
			<param name="lights">
				<paraminfo>bool </paraminfo>
				Light status. <b><c>0</c></b> - Off, <b><c>1</c></b> - On
			</param>
			<param name="alarm">
				<paraminfo>bool </paraminfo>
				Vehicle alarm status.  If on, the alarm starts. <b><c>0</c></b> - Off, <b><c>1</c></b>  - On
			</param>
			<param name="doors">
				<paraminfo>bool </paraminfo>
				Door lock status. <b><c>0</c></b> - Unlocked, <b><c>1</c></b> - Locked
			</param>
			<param name="bonnet">
				<paraminfo>bool </paraminfo>
				Bonnet (hood) status. <b><c>0</c></b> - Closed, <b><c>1</c></b> - Open
			</param>
			<param name="boot">
				<paraminfo>bool </paraminfo>
				Boot/trunk status. <b><c>0</c></b> - Closed, <b><c>1</c></b> - Open
			</param>
			<param name="objective">
				<paraminfo>bool </paraminfo>
				Toggle the objective arrow above the vehicle. <b><c>0</c></b> - Off, <b><c>1</c></b>  - On
			</param>
			<library>omp_vehicle</library>  <summary>Sets a vehicle's parameters for all players.</summary>                  <seealso name="GetVehicleParamsEx" />  <seealso name="SetVehicleParamsForPlayer" />  <seealso name="UpdateVehicleDamageStatus" />  <remarks>The alarm will not reset when finished, you'll need to reset it by yourself with this function.  </remarks>  <remarks>Lights also operate during the day (Only when <a href="#ManualVehicleEngineAndLights">ManualVehicleEngineAndLights</a>  is enabled). </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehiclePos" syntax="SetVehiclePos(vehicleid, x, y, z)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_getherecar"/>
			<param name="vehicleid">
				Vehicle ID that you want set new position
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x coordinate to position the vehicle at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y coordinate to position the vehicle at
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
				The z coordinate to position the vehicle at
			</param>
			<library>omp_vehicle</library>  <summary>Set a vehicle's position.</summary>          <seealso name="SetPlayerPos" />  <seealso name="GetVehiclePos" />  <seealso name="SetVehicleZAngle" />  <remarks>An empty vehicle will not fall after being teleported into the air.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleRespawnTick" syntax="SetVehicleRespawnTick(vehicleid, ticks)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="ticks">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SetVehicleToRespawn" syntax="SetVehicleToRespawn(vehicleid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_respawnveh"/>
			<param name="vehicleid">
				The ID of the vehicle to respawn
			</param>
			<library>omp_vehicle</library>  <summary>Sets a vehicle back to the position at where it was created.</summary>    <seealso name="CreateVehicle" />  <seealso name="DestroyVehicle" />  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle does not exist.  </returns> 
		</member>
		<member name="M:SetVehicleZAngle" syntax="SetVehicleZAngle(vehicleid, angle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_flip"/>
			<param name="vehicleid">
				The ID of the vehicle to set the rotation of
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
				The z angle to set
			</param>
			<library>omp_vehicle</library>  <summary>Set the z rotation (yaw) of a vehicle.</summary>      <seealso name="GetVehicleZAngle" />  <seealso name="SetVehiclePos" />  <remarks>A vehicle's x and y (pitch and roll) rotation will be reset when this function is used.  The x and y rotations can not be set.</remarks>  <remarks>This function does not work on unoccupied vehicles.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The vehicle specified does not exist.  </returns> 
		</member>
		<member name="M:SetWeather" syntax="SetWeather(weatherid)">
			<attribute name="native"/>
			<referrer name="changeweather"/>
			<param name="weatherid">
				The <a href="https://www.open.mp/docs/scripting/resources/weatherid">weather</a>  to set
			</param>
			<library>omp_core</library>  <summary>Set the world weather for all players.</summary>    <seealso name="SetPlayerWeather" />  <seealso name="SetGravity" />  <remarks>If <a href="#TogglePlayerClock">TogglePlayerClock</a> is enabled, weather will slowly change  over time, instead of changing instantly.</remarks> 
		</member>
		<member name="M:SetWorldTime" syntax="SetWorldTime(hour)">
			<attribute name="native"/>
			<referrer name="cmd_settime"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="stunde"/>
			<param name="hour">
				The hour to set (<b><c>0</c></b>-<b><c>23</c></b>)
			</param>
			<library>omp_core</library>  <summary>Sets the world time (for all players) to a specific hour.</summary>    <seealso name="SetPlayerTime" />  <seealso name="SetWeather" />  <seealso name="SetGravity" />  <remarks>To set the minutes and/or to set the time for individual players, see <a href="#SetPlayerTime">SetPlayerTime</a>.</remarks>  <remarks>This function is only relevant for players that do not use a passing clock - see <a href="#TogglePlayerClock">  TogglePlayerClock</a>.</remarks> 
		</member>
		<member name="M:ShowPlayerDialog" syntax="ShowPlayerDialog(playerid, dialogid, style, title[], body[], button1[], button2[], ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="pBan"/>
			<referrer name="OnUserCheck"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="cmd_fraks"/>
			<referrer name="cmd_eveh"/>
			<referrer name="cmd_selectaduty"/>
			<referrer name="cmd_stats"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_play"/>
			<referrer name="cmd_fcar"/>
			<referrer name="cmd_spawnchange"/>
			<referrer name="cmd_stream"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="cmd_trade"/>
			<referrer name="NetStatsDisplay"/>
			<param name="playerid">
				The ID of the player to show the dialog to
			</param>
			<param name="dialogid">
				An ID to assign this dialog to, so responses can be processed.  Max dialogid  is <b><c>32767</c></b>.  Using negative values will close any open dialog
			</param>
			<param name="style">
				<paraminfo>t_DIALOG_STYLE </paraminfo>
				The style of the dialog
			</param>
			<param name="title">
				<paraminfo> [] </paraminfo>
				The title at the top of the dialog.  The length of the title can not exceed  more than 64 characters before it starts to cut off
			</param>
			<param name="body">
				<paraminfo> [] </paraminfo>
				The text to display in the main dialog.  Use <b><c>\n</c></b> to start a new line  and <b><c>\t</c></b> to tabulate.  May be optionally formatted.
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
				The text on the left button
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
				The text on the right button.  Leave it blank ( "" ) to hide it
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_dialog</library>  <summary>Shows the player a synchronous (only one at a time) dialog box.</summary>                <seealso name="TextDrawShowForPlayer" />  <seealso name="OnDialogResponse" />  <remarks>Use colour embedding for multiple colours in the text. </remarks>  <remarks>Using <b><c>-1</c></b> as dialogid closes all dialogs currently shown on the client's screen.  </remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.<br />  </returns> 
		</member>
		<member name="M:ShowPlayerMarkers" syntax="ShowPlayerMarkers(mode)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="mode">
				<paraminfo>t_PLAYER_MARKERS_MODE </paraminfo>
				The mode to use for markers.  They can be streamed, meaning they are only visible  to nearby players.  See table below
			</param>
			<library>omp_core</library>  <summary>Toggles player markers (blips on the radar).  Must be used when the server starts (<a href="#OnGameModeInit">OnGameModeInit</a>).  For other times, see <a href="#SetPlayerMarkerForPlayer">SetPlayerMarkerForPlayer</a>.</summary>    <seealso name="SetPlayerMarkerForPlayer" />  <seealso name="LimitPlayerMarkerRadius" />  <seealso name="ShowNameTags" />  <seealso name="SetPlayerColor" />  <remarks>  <b>Marker modes:</b><br />  <ul>  <li><b><c>PLAYER_MARKERS_MODE_OFF</c></b> 0</li>  <li><b><c>PLAYER_MARKERS_MODE_GLOBAL</c></b> 1</li>  <li><b><c>PLAYER_MARKERS_MODE_STREAMED</c></b> 2</li>  </ul>  </remarks>  <remarks>It is also possible to set a player's colour to a colour that has full transparency (no  alpha value).  This makes it possible to show markers on a per-player basis.</remarks> 
		</member>
		<member name="M:ShowVehicle" syntax="ShowVehicle(vehicleid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<library>omp_vehicle</library> 
		</member>
		<member name="M:SpawnPlayer" syntax="SpawnPlayer(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="cmd_ainvite"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_respawnplayer"/>
			<param name="playerid">
				The ID of the player to spawn
			</param>
			<library>omp_class</library>  <summary>(Re)Spawns a player.</summary>    <seealso name="SetSpawnInfo" />  <seealso name="AddPlayerClass" />  <seealso name="OnPlayerSpawn" />  <remarks>Kills the player if they are in a vehicle and then they spawn with a bottle in their hand.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the player is not connected.  </returns> 
		</member>
		<member name="M:StopAudioStreamForPlayer" syntax="StopAudioStreamForPlayer(playerid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_stopstream"/>
			<referrer name="cmd_stream"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The player you want to stop the audio stream for
			</param>
			<library>omp_player</library>  <summary>Stops the current audio stream for a player.</summary>    <seealso name="PlayAudioStreamForPlayer" />  <seealso name="PlayerPlaySound" /> 
		</member>
		<member name="M:StopPlayerObject" syntax="StopPlayerObject(playerid, objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
				The ID of the player whose player-object to stop
			</param>
			<param name="objectid">
				The ID of the player-object to stop
			</param>
			<library>omp_object</library>  <summary>Stop a moving player-object after <a href="#MovePlayerObject">MovePlayerObject</a> has been  used.</summary>      <seealso name="MovePlayerObject" />  <seealso name="IsPlayerObjectMoving" />  <seealso name="OnPlayerObjectMoved" />  <seealso name="StopObject" /> 
		</member>
		<member name="M:Streamer_CallbackHook" syntax="Streamer_CallbackHook(callback, ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
			<referrer name="OnPlayerEditObject"/>
			<referrer name="OnPlayerSelectObject"/>
			<referrer name="OnPlayerPickUpPickup"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="OnPlayerLeaveCheckpoint"/>
			<referrer name="OnPlayerEnterRaceCheckpoint"/>
			<referrer name="OnPlayerLeaveRaceCheckpoint"/>
			<param name="callback">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_OnFilterScriptInit" syntax="Streamer_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="SSCANF_gOPC"/>
			<dependency name="SSCANF_gOPDC"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:Streamer_OnGameModeInit" syntax="Streamer_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="funcidx"/>
			<dependency name="zcmd_g_HasOPCE"/>
			<dependency name="zcmd_g_HasOPCS"/>
		</member>
		<member name="M:Streamer_OnPlayerConnect" syntax="Streamer_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="29"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_gOPC"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerDisconnect" syntax="Streamer_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="SSCANF_Leave"/>
			<dependency name="SSCANF_gOPDC"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerEditObject" syntax="Streamer_OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_OnPlayerEnterCP" syntax="Streamer_OnPlayerEnterCP(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="bCPs"/>
			<dependency name="bCPs"/>
			<dependency name="bj_x"/>
			<dependency name="bj_y"/>
			<dependency name="bj_z"/>
			<dependency name="false"/>
			<dependency name="tCPs"/>
			<dependency name="tCPs"/>
			<dependency name="t_x"/>
			<dependency name="t_y"/>
			<dependency name="t_z"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerEnterRaceCP" syntax="Streamer_OnPlayerEnterRaceCP(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerLeaveCP" syntax="Streamer_OnPlayerLeaveCP(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerLeaveRaceCP" syntax="Streamer_OnPlayerLeaveRaceCP(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerPickUpPickup" syntax="Streamer_OnPlayerPickUpPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:Streamer_OnPlayerSelectObject" syntax="Streamer_OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawAlignment" syntax="TextDrawAlignment(textid, alignment)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the alignment of
			</param>
			<param name="alignment">
				<paraminfo>t_TEXT_DRAW_ALIGN </paraminfo>
				<b><c>1</c></b>-left <b><c>2</c></b>-centered <b><c>3</c></b>-right
			</param>
			<library>omp_textdraw</library>  <summary>Set the alignment of text in a text draw.</summary>      <remarks>For alignment <b><c>2</c></b> (center) the x and y values of <a href="#TextSize">TextSize</a>  need to be swapped, see notes at <a href="#TextDrawTextSize">TextDrawTextSize</a>, also position  coordinate become position of center of textdraw and not left/top edges. </remarks> 
		</member>
		<member name="M:TextDrawBackgroundColour" syntax="TextDrawBackgroundColour(textid, backgroundColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the background colour of
			</param>
			<param name="backgroundColour">
				The colour that the textdraw should be set to
			</param>
			<library>omp_textdraw</library>  <summary>Adjusts the text draw area background colour (the outline/shadow - NOT the box.  For box  colour, see <a href="#TextDrawBoxColour">TextDrawBoxColour</a>).</summary>      <remarks>If <a href="#TextDrawSetOutline">TextDrawSetOutline</a> is used with size &gt; <b><c>0</c></b>,  the outline colour will match the colour used in <a href="#TextDrawBackgroundColour">TextDrawBackgroundColour</a>.  Changing the value of colour seems to alter the colour used in <a href="#TextDrawColour">TextDrawColour</a></remarks>  <remarks>If you want to change the background colour of a textdraw that is already shown, you don't  have to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawBoxColour" syntax="TextDrawBoxColour(textid, boxColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="boxColour">
				The colour (<b>RGBA</b>)
			</param>
			<library>omp_textdraw</library>  <summary>Adjusts the text box colour (only used if <a href="#TextDrawUseBox">TextDrawUseBox</a> 'use'  parameter is <b><c>1</c></b>).</summary>      <remarks>If you want to change the boxcolour of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawColour" syntax="TextDrawColour(textid, textColour)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to change the colour of.
			</param>
			<param name="textColour">
				The colour to set the textdraw to
			</param>
			<library>omp_textdraw</library>  <summary>Sets the text colour of a textdraw.</summary>      <remarks>You can also use GameText colours in TextDraws.</remarks>  <remarks>If the TextDraw is already shown, it must be re-shown (<a href="#TextDrawShowForAll">TextDrawShowForAll</a>/<a  href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>) for the changes of this function to take  effect.</remarks> 
		</member>
		<member name="M:TextDrawCreate" syntax="TextDrawCreate(x, y, format[], ...)">
			<tagname value="Text"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
				The x (left/right) coordinate to create the textdraw at
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
				The y (up/down) coordinate to create the textdraw at
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The text that will appear in the textdraw.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textdraw</library>  <summary>Creates a textdraw.  Textdraws are, as the name implies, text (mainly - there can be boxes,  sprites and model previews (skins/vehicles/weapons/objects too) that is drawn on a player's screens.</summary>        <remarks>  If you choose values for y that are less than 1, the first text row will be invisible and only  the shadow is visible.<br />  If part of the text is off-screen, the colour of the text will not show, only the shadow (if enabled)  will.  </remarks>  <remarks>  Maximum length of textdraw is <b>800</b> characters.  Longer text will crash the legacy (SA:MP) client  in older  versions.<br />  If you use colour codes (such as <b><c>~R~ ~G~</c></b>) beyond 255th character the legacy (SA:MP) client  will  crash trying to display the textdraw.  </remarks>  <remarks>  The x, y coordinate is the top left coordinate for the text draw area based on a 640x480 "canvas"  (irrespective of screen resolution).  If you plan on using <a href="#TextDrawAlignment">TextDrawAlignment</a>  with alignment <b><c>3</c></b> (right), the x, y coordinate is the top right coordinate for the text  draw.<br />  This function merely CREATES the textdraw, you must use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>  or <a href="#TextDrawShowForAll">TextDrawShowForAll</a> to show it.<br />  It is recommended to use WHOLE numbers instead of decimal positions when creating textdraws to  ensure resolution friendly design.  </remarks>  <remarks>Keyboard key mapping codes (such as <b><c>~k~~VEHICLE_ENTER_EXIT~</c></b> don't work beyond  255th character. </remarks>  <returns>The ID of the created textdraw.  Textdraw IDs start at <b><c>0</c></b>.</returns> 
		</member>
		<member name="M:TextDrawFont" syntax="TextDrawFont(textid, font)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="font">
				<paraminfo>t_TEXT_DRAW_FONT </paraminfo>
				There are four font styles, see  <a href="https://open.mp/docs/scripting/functions/TextDrawFont">https://open.mp/docs/scripting/functions/TextDrawFont</a>.  Font value <b><c>4</c></b> specifies that this is a txd sprite; <b><c>5</c></b> specifies that this  textdraw can display preview models.  A font value greater than 5 does not display, and anything  greater than 16 crashes the client
			</param>
			<library>omp_textdraw</library>  <summary>Changes the text font.</summary>      <remarks>If you want to change the font of a textdraw that is already shown, you don't have to recreate  it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawHideForPlayer" syntax="TextDrawHideForPlayer(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_saduty"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player that the textdraw should be hidden for
			</param>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to hide
			</param>
			<library>omp_textdraw</library>  <summary>Hides a textdraw for a specific player.</summary>      <seealso name="TextDrawHideForAll" />  <seealso name="TextDrawShowForPlayer" />  <seealso name="TextDrawShowForAll" /> 
		</member>
		<member name="M:TextDrawLetterSize" syntax="TextDrawLetterSize(textid, width, height)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				Width of a char
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				Height of a char
			</param>
			<library>omp_textdraw</library>  <summary>Sets the width and height of the letters.</summary>        <remarks>When using this function purely for the benefit of affecting the TextDraw box, multiply  'y' by <b><c>0.135</c></b> to convert to <a href="#TextDrawTextSize">TextDrawTextSize</a>-like measurements.  <b>Hint</b>: it is easier and extremely precise to use <b><c>LD_SPAC:white</c></b> sprite for box-only  textdraws, <a href="#TextDrawTextSize">TextDrawTextSize</a> will have regular offsets.</remarks>  <remarks>If you want to change the letter size of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible. </remarks>  <remarks>Fonts appear to look the best with an x to y ratio of <b><c>1</c></b> to <b><c>4</c></b>  (e.g.  if x is <b><c>0.5</c></b> then y should be <b><c>2</c></b>). </remarks> 
		</member>
		<member name="M:TextDrawSetOutline" syntax="TextDrawSetOutline(textid, outlineSize)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the text draw to set the outline thickness of
			</param>
			<param name="outlineSize">
				The thickness of the outline, as an integer. <b><c>0</c></b> for no outline
			</param>
			<library>omp_textdraw</library>  <summary>Sets the thickness of a textdraw's text's outline. <a href="#TextDrawBackgroundColor">TextDrawBackgroundColor</a>  can be used to change the colour.</summary>      <remarks>If you want to change the outline of a textdraw that is already shown, you don't have to  recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawSetProportional" syntax="TextDrawSetProportional(textid, proportional)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the proportionality of
			</param>
			<param name="proportional">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable proportionality, <b><c>0</c></b> to disable
			</param>
			<library>omp_textdraw</library>  <summary>Appears to scale text spacing to a proportional ratio.  Useful when using <a href="#TextDrawLetterSize">TextDrawLetterSize</a>  to ensure the text has even character spacing.</summary>      <remarks>Proportionality is set to <b><c>1</c></b> by default, you might skip this function if you  don't want to disable it. </remarks>  <remarks>If you want to change the proportionality of a textdraw that is already shown, you don't  have to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible. </remarks> 
		</member>
		<member name="M:TextDrawSetShadow" syntax="TextDrawSetShadow(textid, shadowSize)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to set the shadow size of
			</param>
			<param name="shadowSize">
				The size of the shadow. <b><c>1</c></b> is generally used for a normal shadow  size. <b><c>0</c></b> disables the shadow completely
			</param>
			<library>omp_textdraw</library>  <summary>Sets the size of a textdraw's text's shadow.</summary>      <remarks>The shadow can be cut by the box area if the size is set too big for the area.</remarks>  <remarks>If you want to change the shadow of a textdraw that is already shown, you don't have to  recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/<a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The textdraw does not exist.  </returns> 
		</member>
		<member name="M:TextDrawSetString" syntax="TextDrawSetString(textid, format[], ...)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="sekunde"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to change
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The new string for the TextDraw.  May be optionally formatted.
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
			</param>
			<library>omp_textdraw</library>  <summary>Changes the text on a textdraw.</summary>      <remarks>There are limits to the length of textdraw strings - see <a href="https://open.mp/docs/scripting/resources/limits">here</a>  for more info.</remarks> 
		</member>
		<member name="M:TextDrawShowForPlayer" syntax="TextDrawShowForPlayer(playerid, textid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_saduty"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnDialogResponse"/>
			<param name="playerid">
				The ID of the player to show the textdraw for
			</param>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the textdraw to show.  Returned by <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>omp_textdraw</library>  <summary>Shows a textdraw for a specific player.</summary>      <remarks>If only a single player will see a textdraw, it might be wise to use player-textdraws instead.  This is also useful for textdraws that need to show information specific for an individual player.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means either the player and/or textdraw  specified does not exist.  </returns> 
		</member>
		<member name="M:TextDrawTextSize" syntax="TextDrawTextSize(textid, width, height)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The TextDraw to set the size of
			</param>
			<param name="width">
				<paraminfo>Float </paraminfo>
				The size on the x axis (left/right) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<param name="height">
				<paraminfo>Float </paraminfo>
				The size on the y axis (up/down) following the same 640x480 grid as  <a href="#TextDrawCreate">TextDrawCreate</a>
			</param>
			<library>omp_textdraw</library>  <summary>Change the size of a textdraw (box if <a href="#TextDrawUseBox">TextDrawUseBox</a> is enabled  and/or clickable area for use with <a href="#TextDrawSetSelectable">TextDrawSetSelectable</a>).</summary>        <remarks>  The x and y have different meanings with different TextDrawAlignment values:<br />  <ul>  <li><b><c>1</c></b> (left): they are the right-most corner of the box, absolute coordinates.</li>  <li><b><c>2</c></b> (center): they need to inverted (switch the two) and the x value is the overall  width of the box.</li>  <li><b><c>3</c></b> (right): the x and y are the coordinates of the left-most corner of the box  </li>  </ul>  </remarks>  <remarks>  Using font type <b><c>4</c></b> (sprite) and <b><c>5</c></b> (model preview) converts x and y of  this function from corner coordinates to WIDTH and HEIGHT (offsets).<br />  The TextDraw box starts <b><c>10.0</c></b> units up and <b><c>5.0</c></b> to the left as the origin  (<a href="#TextDrawCreate">TextDrawCreate</a> coordinate).<br />  This function defines the clickable area for use with <a href="#TextDrawSetSelectable">TextDrawSetSelectable</a>,  whether a box is shown or not.  </remarks>  <remarks>If you want to change the text size of a textdraw that is already shown, you don't have  to recreate it.  Simply use <a href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>/  <a href="#TextDrawShowForAll">TextDrawShowForAll</a>  after modifying the textdraw and the change will be visible.</remarks> 
		</member>
		<member name="M:TextDrawUseBox" syntax="TextDrawUseBox(textid, enableBox)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="textid">
				<paraminfo>Text </paraminfo>
				The ID of the text textdraw to toggle the box of
			</param>
			<param name="enableBox">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to show a box or <b><c>0</c></b> to not show a box
			</param>
			<library>omp_textdraw</library>  <summary>Toggle whether a textdraw uses a box or not.</summary>      <remarks>If the textdraw is already shown, it must be re-shown (<a href="#TextDrawShowForAll">TextDrawShowForAll</a>/<a  href="#TextDrawShowForPlayer">TextDrawShowForPlayer</a>) to show the changes of this function.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  This means the textdraw specified does not exist.  </returns> 
		</member>
		<member name="M:TogglePlayerControllable" syntax="TogglePlayerControllable(playerid, controllable)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="unfreezePlayer"/>
			<referrer name="Streamer_OnPlayerEnterCP"/>
			<param name="playerid">
				The ID of the player to toggle the controllability of
			</param>
			<param name="controllable">
				<paraminfo>bool </paraminfo>
			</param>
			<library>omp_player</library>  <summary>Toggles whether a player can control their character or not.  The player will also be unable  to move their camera.</summary>    <param name="toggle"><b><c>0</c></b> to make them uncontrollable, <b><c>1</c></b> to make them controllable</param>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player specified does not exist.  </returns> 
		</member>
		<member name="M:TogglePlayerSpectating" syntax="TogglePlayerSpectating(playerid, toggle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="CancelFlyMode"/>
			<referrer name="FlyMode"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<param name="playerid">
				The ID of the player who should spectate
			</param>
			<param name="toggle">
				<paraminfo>bool </paraminfo>
				<b><c>1</c></b> to enable spectating and <b><c>0</c></b> to disable
			</param>
			<library>omp_player</library>  <summary>Toggle whether a player is in spectator mode or not.  While in spectator mode a player can  spectate (watch) other players and vehicles.  After using this function, either <a href="#PlayerSpectatePlayer">PlayerSpectatePlayer</a>  or <a href="#PlayerSpectateVehicle">PlayerSpectateVehicle</a> needs to be used.</summary>      <seealso name="PlayerSpectatePlayer" />  <seealso name="PlayerSpectateVehicle" />  <remarks>If the player is not loaded in before setting the spectate status to false, the connection  can be closed unexpectedly.</remarks>  <remarks>When spectator mode is disabled, <a href="#OnPlayerSpawn">OnPlayerSpawn</a> will automatically  be called, if you wish to restore player to state before spectating, you will have to handle that  in <a href="#OnPlayerSpawn">OnPlayerSpawn</a>.  Note also, that player can also go to class selection  before if they used F4 during spectate, a player also CAN die in spectate mode due to various glitches.</remarks>  <remarks>When a player is in spectate mode their HUD is hidden, making it useful for setting a player's  camera without the HUD.  Also, objects near the player's camera will be streamed in, making this  useful for interpolating cameras.</remarks>  <returns>  <b><c>1</c></b>: The function executed successfully.<br />  <b><c>0</c></b>: The function failed to execute.  The player does not exist.  </returns> 
		</member>
		<member name="M:UsePlayerPedAnims" syntax="UsePlayerPedAnims()">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<library>omp_core</library>  <summary>Uses standard player walking animation (animation of the CJ skin) instead of custom animations  for every skin (e.g.  skating for skater skins).</summary>  <seealso name="ApplyAnimation" />  <seealso name="ClearAnimations" />  <remarks>Only works when placed under <a href="#OnGameModeInit">OnGameModeInit</a>.</remarks>  <remarks>Not using this function causes two-handed weapons (not dual-handed - a single weapon that  is held by both hands) to be held in only one hand.</remarks> 
		</member>
		<member name="M:WPM" syntax="WPM(pID, msg[])">
			<stacksize value="134"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_respawnveh"/>
			<referrer name="cmd_delveh"/>
			<referrer name="cmd_setfill"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseinterior"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_w"/>
			<referrer name="cmd_a"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_fixveh"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="cmd_eveh"/>
			<referrer name="cmd_o"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_setskin"/>
			<referrer name="cmd_givecam"/>
			<referrer name="cmd_setnitro"/>
			<referrer name="cmd_makeadmin"/>
			<referrer name="cmd_givelevel"/>
			<referrer name="cmd_givemoney"/>
			<referrer name="cmd_suspend"/>
			<referrer name="cmd_fmotd"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_uninvite"/>
			<referrer name="cmd_giverank"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_delol"/>
			<referrer name="cmd_news"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_showpos"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_setfskin"/>
			<referrer name="cmd_id"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_su"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_cveh"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<param name="pID">
			</param>
			<param name="msg">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_@BULLET_HIT_TYPE" syntax="_@BULLET_HIT_TYPE()">
			<tagname value="t_BULLET_HIT_TYPE"/>
			<stacksize value="1"/>
			<dependency name="__BULLET_HIT_TYPE"/>
		</member>
		<member name="M:_@CAMERA_MOVE" syntax="_@CAMERA_MOVE()">
			<tagname value="CAMERA_MOVE"/>
			<stacksize value="1"/>
		</member>
		<member name="M:_@CAM_MODE" syntax="_@CAM_MODE()">
			<tagname value="t_CAM_MODE"/>
			<stacksize value="1"/>
			<dependency name="__CAM_MODE"/>
		</member>
		<member name="M:_@CARMODTYPE" syntax="_@CARMODTYPE()">
			<tagname value="t_CARMODTYPE"/>
			<stacksize value="1"/>
			<dependency name="MAX_CARMODS"/>
		</member>
		<member name="M:_@CLICK_SOURCE" syntax="_@CLICK_SOURCE()">
			<tagname value="t_CLICK_SOURCE"/>
			<stacksize value="1"/>
			<dependency name="__CLICK_SOURCE"/>
		</member>
		<member name="M:_@CONNECTION_STATUS" syntax="_@CONNECTION_STATUS()">
			<tagname value="t_CONNECTION_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__CONNSTAT"/>
		</member>
		<member name="M:_@CP_TYPE" syntax="_@CP_TYPE()">
			<tagname value="t_CP_TYPE"/>
			<stacksize value="1"/>
			<dependency name="__CP_TYPE"/>
		</member>
		<member name="M:_@DIALOG_STYLE" syntax="_@DIALOG_STYLE()">
			<tagname value="t_DIALOG_STYLE"/>
			<stacksize value="1"/>
			<dependency name="__DIALOG_STYLE"/>
		</member>
		<member name="M:_@DOWNLOAD_REQUEST" syntax="_@DOWNLOAD_REQUEST()">
			<tagname value="t_DOWNLOAD_REQUEST"/>
			<stacksize value="1"/>
			<dependency name="__DOWNLOAD_REQUEST"/>
		</member>
		<member name="M:_@EDIT_RESPONSE" syntax="_@EDIT_RESPONSE()">
			<tagname value="t_EDIT_RESPONSE"/>
			<stacksize value="1"/>
			<dependency name="__EDIT_RESPONSE"/>
		</member>
		<member name="M:_@FIGHT_STYLE" syntax="_@FIGHT_STYLE()">
			<tagname value="t_FIGHT_STYLE"/>
			<stacksize value="1"/>
			<dependency name="MAX_FIGHT_STYLES"/>
		</member>
		<member name="M:_@FORCE_SYNC" syntax="_@FORCE_SYNC()">
			<tagname value="t_FORCE_SYNC"/>
			<stacksize value="1"/>
			<dependency name="__FORCE_SYNC"/>
		</member>
		<member name="M:_@HTTP_ERROR" syntax="_@HTTP_ERROR()">
			<tagname value="t_HTTP_ERROR"/>
			<stacksize value="1"/>
			<dependency name="__HTTP_ERROR"/>
		</member>
		<member name="M:_@HTTP_METHOD" syntax="_@HTTP_METHOD()">
			<tagname value="t_HTTP_METHOD"/>
			<stacksize value="1"/>
			<dependency name="__HTTP_METHOD"/>
		</member>
		<member name="M:_@KEY" syntax="_@KEY()">
			<tagname value="t_KEY"/>
			<stacksize value="1"/>
			<dependency name="__KEY"/>
		</member>
		<member name="M:_@LANDING_GEAR_STATE" syntax="_@LANDING_GEAR_STATE()">
			<tagname value="t_LANDING_GEAR_STATE"/>
			<stacksize value="1"/>
			<dependency name="__LANDING_GEAR_STATE"/>
		</member>
		<member name="M:_@MAPICON" syntax="_@MAPICON()">
			<tagname value="t_MAPICON"/>
			<stacksize value="1"/>
			<dependency name="__MAPICON"/>
		</member>
		<member name="M:_@OBJECT_MATERIAL_SIZE" syntax="_@OBJECT_MATERIAL_SIZE()">
			<tagname value="t_OBJECT_MATERIAL_SIZE"/>
			<stacksize value="1"/>
			<dependency name="__OBJECT_MATERIAL_SIZE"/>
		</member>
		<member name="M:_@OBJECT_MATERIAL_TEXT_ALIGN" syntax="_@OBJECT_MATERIAL_TEXT_ALIGN()">
			<tagname value="t_OBJECT_MATERIAL_TEXT_ALIGN"/>
			<stacksize value="1"/>
			<dependency name="__OBJECT_MATERIAL_TEXT_ALIGN"/>
		</member>
		<member name="M:_@PLAYER_MARKERS_MODE" syntax="_@PLAYER_MARKERS_MODE()">
			<tagname value="t_PLAYER_MARKERS_MODE"/>
			<stacksize value="1"/>
			<dependency name="__PLAYER_MARKERS_MODE"/>
		</member>
		<member name="M:_@PLAYER_RECORDING_TYPE" syntax="_@PLAYER_RECORDING_TYPE()">
			<tagname value="t_PLAYER_RECORDING_TYPE"/>
			<stacksize value="1"/>
			<dependency name="__PLAYER_RECORDING_TYPE"/>
		</member>
		<member name="M:_@PLAYER_STATE" syntax="_@PLAYER_STATE()">
			<tagname value="t_PLAYER_STATE"/>
			<stacksize value="1"/>
			<dependency name="__PLAYER_STATE"/>
		</member>
		<member name="M:_@SELECT_OBJECT" syntax="_@SELECT_OBJECT()">
			<tagname value="t_SELECT_OBJECT"/>
			<stacksize value="1"/>
			<dependency name="__SELECT_OBJECT"/>
		</member>
		<member name="M:_@SPECIAL_ACTION" syntax="_@SPECIAL_ACTION()">
			<tagname value="t_SPECIAL_ACTION"/>
			<stacksize value="1"/>
			<dependency name="__SPECIAL_ACTION"/>
		</member>
		<member name="M:_@SPECTATE_MODE" syntax="_@SPECTATE_MODE()">
			<tagname value="t_SPECTATE_MODE"/>
			<stacksize value="1"/>
			<dependency name="__SPECTATE_MODE"/>
		</member>
		<member name="M:_@SQLITE_OPEN" syntax="_@SQLITE_OPEN()">
			<tagname value="SQLITE_OPEN"/>
			<stacksize value="1"/>
			<dependency name="__SQLITE_OPEN"/>
		</member>
		<member name="M:_@TEXT_DRAW_ALIGN" syntax="_@TEXT_DRAW_ALIGN()">
			<tagname value="t_TEXT_DRAW_ALIGN"/>
			<stacksize value="1"/>
			<dependency name="__TEXT_DRAW_ALIGN"/>
		</member>
		<member name="M:_@TEXT_DRAW_FONT" syntax="_@TEXT_DRAW_FONT()">
			<tagname value="t_TEXT_DRAW_FONT"/>
			<stacksize value="1"/>
			<dependency name="__TEXT_DRAW_FONT"/>
		</member>
		<member name="M:_@VARTYPE" syntax="_@VARTYPE()">
			<tagname value="t_VARTYPE"/>
			<stacksize value="1"/>
			<dependency name="__VARTYPE"/>
		</member>
		<member name="M:_@VEHICLE_DOOR_STATUS" syntax="_@VEHICLE_DOOR_STATUS()">
			<tagname value="t_VEHICLE_DOOR_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_DOOR_STATUS"/>
		</member>
		<member name="M:_@VEHICLE_LIGHT_STATUS" syntax="_@VEHICLE_LIGHT_STATUS()">
			<tagname value="t_VEHICLE_LIGHT_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_LIGHT_STATUS"/>
		</member>
		<member name="M:_@VEHICLE_MODEL_INFO" syntax="_@VEHICLE_MODEL_INFO()">
			<tagname value="t_VEHICLE_MODEL_INFO"/>
			<stacksize value="1"/>
			<dependency name="MAX_VEHICLE_MODEL_INFOS"/>
		</member>
		<member name="M:_@VEHICLE_PANEL_STATUS" syntax="_@VEHICLE_PANEL_STATUS()">
			<tagname value="t_VEHICLE_PANEL_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_PANEL_STATUS"/>
		</member>
		<member name="M:_@VEHICLE_TYRE_STATUS" syntax="_@VEHICLE_TYRE_STATUS()">
			<tagname value="t_VEHICLE_TYRE_STATUS"/>
			<stacksize value="1"/>
			<dependency name="__VEHICLE_TYRE_STATUS"/>
		</member>
		<member name="M:_@WEAPON" syntax="_@WEAPON()">
			<tagname value="t_WEAPON"/>
			<stacksize value="1"/>
			<dependency name="MAX_WEAPONS"/>
		</member>
		<member name="M:_@WEAPONSKILL" syntax="_@WEAPONSKILL()">
			<tagname value="t_WEAPONSKILL"/>
			<stacksize value="1"/>
			<dependency name="MAX_WEAPONSKILLS"/>
		</member>
		<member name="M:_@WEAPONSTATE" syntax="_@WEAPONSTATE()">
			<tagname value="t_WEAPONSTATE"/>
			<stacksize value="1"/>
			<dependency name="__WEAPONSTATE"/>
		</member>
		<member name="M:_@WEAPON_SLOT" syntax="_@WEAPON_SLOT()">
			<tagname value="t_WEAPON_SLOT"/>
			<stacksize value="1"/>
			<dependency name="MAX_WEAPON_SLOTS"/>
		</member>
		<member name="M:__IsObjectNoCameraCol" syntax="__IsObjectNoCameraCol(objectid)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="HasObjectCameraCollision"/>
			<referrer name="HasPlayerObjectCameraCollision"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:__print" syntax="__print(string[])">
			<attribute name="native"/>
			<referrer name="print"/>
			<referrer name="main"/>
			<referrer name="changeweather"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="savefraks"/>
			<referrer name="savesession"/>
			<referrer name="resetPlayer"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<library>console</library> 
		</member>
		<member name="M:__printf" syntax="__printf(format[], ...)">
			<attribute name="native"/>
			<referrer name="KickEx"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnGameModeExit"/>
			<referrer name="cmd_showpos"/>
			<referrer name="cmd_car"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format string
			</param>
			<param name="...">
				<paraminfo> {LANDING_GEAR_STATE,Bit,Bitmap,XML,XMLEntry,Group,INI,Language,Style,DB,DBResult,Menu,Text,PlayerText,Text3D,PlayerText3D,File,Float,CUSTOM_TAG_TYPES,_} </paraminfo>
				Indefinite number of arguments of any tag
			</param>
			<library>omp_core</library>  <summary>Outputs a formatted string on the console (the server window, not the in-game chat).</summary>      <seealso name="print" />  <seealso name="format" />  <remarks>The format string or its output should not exceed 1024 characters.  Anything beyond that  length can lead to a server to crash.</remarks>  <remarks>This function doesn't support <a href="#strpack">packed</a> strings.</remarks>  <remarks>  <b>Format Specifiers:</b><br />  <ul>  <li><b><c>%i</c></b> - integer (whole number)</li>  <li><b><c>%d</c></b> - integer (whole number).</li>  <li><b><c>%s</c></b> - string</li>  <li><b><c>%f</c></b> - floating-point number (Float: tag)</li>  <li><b><c>%c</c></b> - ASCII character</li>  <li><b><c>%x</c></b> - hexadecimal number</li>  <li><b><c>%b</c></b> - binary number</li>  <li><b><c>%%</c></b> - literal <b><c>%</c></b></li>  <li><b><c>%q</c></b> - escape a text for SQLite. (Added in <b>0.3.7 R2</b>)</li>  </ul>  </remarks>  <remarks>The values for the placeholders follow in the exact same order as parameters in the call.  For example, <b><c>"I am %i years old"</c></b> - the <b><c>%i</c></b> will be replaced with an Integer  variable, which is the person's age.</remarks>  <remarks>You may optionally put a number between the <b><c>%</c></b> and the letter of the placeholder  code.  This number indicates the field width; if the size of the parameter to print at the position  of the placeholder is smaller than the field width, the field is expanded with spaces.  To cut the  number of decimal places beeing shown of a float, you can add <b><c>.&lt;max number&gt;</c></b> between  the <b><c>%</c></b> and the <b><c>f</c></b>. (example: <b><c>%.2f</c></b>)</remarks> 
		</member>
		<member name="M:cache_get_field_count" syntax="cache_get_field_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_fields"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="OnIraumLoad"/>
			<referrer name="OnUserCheck"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="OnPlayerCarsLoad"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_result_count" syntax="cache_get_result_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_results"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_row_count" syntax="cache_get_row_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_rows"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="OnIraumLoad"/>
			<referrer name="OnUserCheck"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="OnPlayerCarsLoad"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_index_bool" syntax="cache_get_value_index_bool(row_idx, column_idx, &amp;destination)">
			<stacksize value="5"/>
			<dependency name="cache_get_value_index_int"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_index_int" syntax="cache_get_value_index_int(row_idx, column_idx, &amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_get_value_index_bool"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name" syntax="cache_get_value_name(row_idx, column_name[], destination[], max_len)">
			<attribute name="native"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="OnPlayerCarsLoad"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
		</member>
		<member name="M:cache_get_value_name_bool" syntax="cache_get_value_name_bool(row_idx, column_name[], &amp;destination)">
			<stacksize value="5"/>
			<dependency name="cache_get_value_name_int"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name_float" syntax="cache_get_value_name_float(row_idx, column_name[], &amp;destination)">
			<attribute name="native"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="OnIraumLoad"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="OnPlayerCarsLoad"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name_int" syntax="cache_get_value_name_int(row_idx, column_name[], &amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_get_value_name_bool"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="OnIraumLoad"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="OnPlayerCarsLoad"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_insert_id" syntax="cache_insert_id()">
			<attribute name="native"/>
			<referrer name="OnHausCreated"/>
			<referrer name="OnPlayerRegister"/>
			<referrer name="CarSavedToDB"/>
		</member>
		<member name="M:cache_num_fields" syntax="cache_num_fields()">
			<stacksize value="4"/>
			<dependency name="cache_get_field_count"/>
		</member>
		<member name="M:cache_num_results" syntax="cache_num_results()">
			<stacksize value="4"/>
			<dependency name="cache_get_result_count"/>
		</member>
		<member name="M:cache_num_rows" syntax="cache_num_rows()">
			<stacksize value="4"/>
			<dependency name="cache_get_row_count"/>
		</member>
		<member name="M:cef_create_browser" syntax="cef_create_browser(player_id, browser_id, url[], hidden, focused)">
			<attribute name="native"/>
			<referrer name="OnCefInitialize"/>
			<param name="player_id">
			</param>
			<param name="browser_id">
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="hidden">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="focused">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:cef_on_player_connect" syntax="cef_on_player_connect(player_id, ip[])">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<param name="player_id">
			</param>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cef_on_player_disconnect" syntax="cef_on_player_disconnect(player_id)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<param name="player_id">
			</param>
		</member>
		<member name="M:changeweather" syntax="changeweather()">
			<stacksize value="5"/>
			<referrer name="cmd_weatherall"/>
			<referrer name="cmd_randweather"/>
			<referrer name="stunde"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetWeather"/>
			<dependency name="__print"/>
			<dependency name="random"/>
			<dependency name="weatherids"/>
		</member>
		<member name="M:clreol" syntax="clreol()">
			<stacksize value="1"/>
			<library>console</library>  <summary>Clear the rest of the line.</summary>  <seealso name="clrscr"/>  <return>This function always returns 0.</return>  <remarks>Clears the line at which the cursor is, from the position of the cursor to the right  margin of the console.  This function does not move the cursor.</remarks> 
		</member>
		<member name="M:clrscr" syntax="clrscr()">
			<stacksize value="1"/>
			<library>console</library>  <summary>Clear the screen.</summary>  <seealso name="clreol"/>  <return>This function always returns 0.</return>  <remarks>Clears the display and moves the cursor to the upper left corner.</remarks> 
		</member>
		<member name="M:cmd_a" syntax="cmd_a(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="553"/>
			<dependency name="AdminRank"/>
			<dependency name="AdminRank"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_accept" syntax="cmd_accept(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="225"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="WPM"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_name"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addequip" syntax="cmd_addequip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addequipex" syntax="cmd_addequipex(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="isaduty"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addschirm" syntax="cmd_addschirm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_addschirmex" syntax="cmd_addschirmex(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="isaduty"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_aduty" syntax="cmd_aduty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="194"/>
			<dependency name="AdminRank"/>
			<dependency name="AdminRank"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="aduty_text"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="isAlevel"/>
			<dependency name="isaduty"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ahelp" syntax="cmd_ahelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ainvite" syntax="cmd_ainvite(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="202"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="pfraktion"/>
			<dependency name="pspawnchange"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_allfinfo" syntax="cmd_allfinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="268"/>
			<dependency name="SendClientMessage"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_gold"/>
			<dependency name="f_green"/>
			<dependency name="f_kasse"/>
			<dependency name="f_lsd"/>
			<dependency name="f_name"/>
			<dependency name="format"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_annehmen" syntax="cmd_annehmen(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="161"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_name"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_arefill" syntax="cmd_arefill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<dependency name="tank"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_asellhouse" syntax="cmd_asellhouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="32"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SEM"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="h_id"/>
			<dependency name="h_preis"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="isAdmin"/>
			<dependency name="saveHaus"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="true"/>
			<dependency name="updateHaus"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_auninvite" syntax="cmd_auninvite(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="201"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="pfraktion"/>
			<dependency name="pskin"/>
			<dependency name="pspawnchange"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ban" syntax="cmd_ban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="263"/>
			<dependency name="SendClientMessage"/>
			<dependency name="isAdmin"/>
			<dependency name="pBan"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_buyhouse" syntax="cmd_buyhouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="32"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="GetPlayerScore"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="h_id"/>
			<dependency name="h_level"/>
			<dependency name="h_preis"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="hatPlayerHaus"/>
			<dependency name="saveHaus"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="updateHaus"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_car" syntax="cmd_car(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="151"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SCM"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="__printf"/>
			<dependency name="besitzer"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="c_r"/>
			<dependency name="c_x"/>
			<dependency name="c_y"/>
			<dependency name="c_z"/>
			<dependency name="db_id"/>
			<dependency name="eingeloggt"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="pfahrzeuge"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_checkspawn" syntax="cmd_checkspawn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="73"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="pspawnchange"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_clear" syntax="cmd_clear(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="186"/>
			<dependency name="GetPlayerWantedLevel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerinStaat"/>
			<dependency name="pwanteds"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_clearchat" syntax="cmd_clearchat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_createfrakcar" syntax="cmd_createfrakcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SendClientMessage"/>
			<dependency name="createfCar"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_createhouse" syntax="cmd_createhouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="269"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SEM"/>
			<dependency name="dbhandle"/>
			<dependency name="getFreeHausID"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="h_interior"/>
			<dependency name="h_level"/>
			<dependency name="h_preis"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="ih_x"/>
			<dependency name="ih_y"/>
			<dependency name="ih_z"/>
			<dependency name="isAdmin"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="strmid"/>
			<dependency name="updateHaus"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_credits" syntax="cmd_credits(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_cveh" syntax="cmd_cveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="82"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="WPM"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<dependency name="tank"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_d" syntax="cmd_d(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="395"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerinStaat"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="rangdrei"/>
			<dependency name="rangeins"/>
			<dependency name="rangfunf"/>
			<dependency name="rangnull"/>
			<dependency name="rangsechs"/>
			<dependency name="rangvier"/>
			<dependency name="rangzwei"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_delallveh" syntax="cmd_delallveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SEM"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_deletehouse" syntax="cmd_deletehouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Delete3DTextLabel"/>
			<dependency name="DestroyPickup"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="dbhandle"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_id"/>
			<dependency name="h_interior"/>
			<dependency name="h_level"/>
			<dependency name="h_pickup"/>
			<dependency name="h_preis"/>
			<dependency name="h_text"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="ih_x"/>
			<dependency name="ih_y"/>
			<dependency name="ih_z"/>
			<dependency name="isAdmin"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_delol" syntax="cmd_delol(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="266"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendFrakMessage"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="isPlayerOnOrangelist"/>
			<dependency name="pOL"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_delveh" syntax="cmd_delveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_discord" syntax="cmd_discord(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_dropguns" syntax="cmd_dropguns(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="293"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_duty" syntax="cmd_duty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="GetPVarInt"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="f_color"/>
			<dependency name="f_dutyx"/>
			<dependency name="f_dutyy"/>
			<dependency name="f_dutyz"/>
			<dependency name="fbase"/>
			<dependency name="fbase"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="pfSkin"/>
			<dependency name="pfraktion"/>
			<dependency name="pskin"/>
			<dependency name="ptazer"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_enter" syntax="cmd_enter(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="bInfo"/>
			<dependency name="bInfo"/>
			<dependency name="b_interior"/>
			<dependency name="b_ix"/>
			<dependency name="b_iy"/>
			<dependency name="b_iz"/>
			<dependency name="b_x"/>
			<dependency name="b_y"/>
			<dependency name="b_z"/>
			<dependency name="f_enterx"/>
			<dependency name="f_entery"/>
			<dependency name="f_enterz"/>
			<dependency name="f_exitx"/>
			<dependency name="f_exity"/>
			<dependency name="f_exitz"/>
			<dependency name="f_inter"/>
			<dependency name="f_world"/>
			<dependency name="fbase"/>
			<dependency name="fbase"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_id"/>
			<dependency name="h_interior"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="ih_x"/>
			<dependency name="ih_y"/>
			<dependency name="ih_z"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_epbonus" syntax="cmd_epbonus(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="135"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ep"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="format"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_equip" syntax="cmd_equip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="f_dutyx"/>
			<dependency name="f_dutyy"/>
			<dependency name="f_dutyz"/>
			<dependency name="fbase"/>
			<dependency name="fbase"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="ptazer"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="staatsequip"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_eveh" syntax="cmd_eveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="73"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="WPM"/>
			<dependency name="false"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_exit" syntax="cmd_exit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="bInfo"/>
			<dependency name="bInfo"/>
			<dependency name="b_ix"/>
			<dependency name="b_iy"/>
			<dependency name="b_iz"/>
			<dependency name="b_x"/>
			<dependency name="b_y"/>
			<dependency name="b_z"/>
			<dependency name="f_enterx"/>
			<dependency name="f_entery"/>
			<dependency name="f_enterz"/>
			<dependency name="f_exitx"/>
			<dependency name="f_exity"/>
			<dependency name="f_exitz"/>
			<dependency name="fbase"/>
			<dependency name="fbase"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="ih_x"/>
			<dependency name="ih_y"/>
			<dependency name="ih_z"/>
			<dependency name="isPlayerInFrak"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_exitiraum" syntax="cmd_exitiraum(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SCM"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_f" syntax="cmd_f(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1238"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="isPlayerinStaat"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="rangdrei"/>
			<dependency name="rangeins"/>
			<dependency name="rangfunf"/>
			<dependency name="rangnull"/>
			<dependency name="rangsechs"/>
			<dependency name="rangvier"/>
			<dependency name="rangzwei"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fakeme" syntax="cmd_fakeme(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="264"/>
			<dependency name="SEM"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerName"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fcar" syntax="cmd_fcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="isPlayerInFrak"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_finfo" syntax="cmd_finfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1035"/>
			<dependency name="SendClientMessage"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_gold"/>
			<dependency name="f_green"/>
			<dependency name="f_kasse"/>
			<dependency name="f_lsd"/>
			<dependency name="f_name"/>
			<dependency name="format"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fixveh" syntax="cmd_fixveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="RepairVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_flip" syntax="cmd_flip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleZAngle"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fly" syntax="cmd_fly(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fmotd" syntax="cmd_fmotd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="134"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="fmotd"/>
			<dependency name="format"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_fraks" syntax="cmd_fraks(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1289"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_name"/>
			<dependency name="format"/>
			<dependency name="strcat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_freeze" syntax="cmd_freeze(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_get" syntax="cmd_get(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="330"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerMoney"/>
			<dependency name="WPM"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="isPlayerinStaat"/>
			<dependency name="pdonut"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_getcarowner" syntax="cmd_getcarowner(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="139"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="besitzer"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_getfrang" syntax="cmd_getfrang(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="pfrang"/>
			<dependency name="rangdrei"/>
			<dependency name="rangeins"/>
			<dependency name="rangfunf"/>
			<dependency name="rangnull"/>
			<dependency name="rangsechs"/>
			<dependency name="rangvier"/>
			<dependency name="rangzwei"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gethere" syntax="cmd_gethere(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="164"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_getherecar" syntax="cmd_getherecar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="203"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getVehicleName"/>
			<dependency name="getVehicleName"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givecam" syntax="cmd_givecam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givelevel" syntax="cmd_givelevel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GetPlayerScore"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_givemoney" syntax="cmd_givemoney(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="pMoney"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_giverank" syntax="cmd_giverank(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gmx" syntax="cmd_gmx(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendRconCommand"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_go" syntax="cmd_go(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="WPM"/>
			<dependency name="false"/>
			<dependency name="hInfo"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gohouse" syntax="cmd_gohouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="WPM"/>
			<dependency name="hInfo"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_goto" syntax="cmd_goto(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="397"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gotocar" syntax="cmd_gotocar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_gotoxyz" syntax="cmd_gotoxyz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_hduty" syntax="cmd_hduty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="160"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="eingeloggt"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_houses" syntax="cmd_houses(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="287"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="strcmp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_id" syntax="cmd_id(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="546"/>
			<dependency name="GetPlayerArmour"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetPlayerScore"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_intinfo" syntax="cmd_intinfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="264"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_inv" syntax="cmd_inv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1033"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="pdonut"/>
			<dependency name="pgold"/>
			<dependency name="pgreen"/>
			<dependency name="plsd"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_invite" syntax="cmd_invite(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="WPM"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_name"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_iraum" syntax="cmd_iraum(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="266"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="SCM"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="WPM"/>
			<dependency name="eingeloggt"/>
			<dependency name="format"/>
			<dependency name="i_int"/>
			<dependency name="i_x"/>
			<dependency name="i_y"/>
			<dependency name="i_z"/>
			<dependency name="innenraum"/>
			<dependency name="innenraum"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<dependency name="world"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_kick" syntax="cmd_kick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="263"/>
			<dependency name="KickEx"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_makeadmin" syntax="cmd_makeadmin(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="savePlayer"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_makeleader" syntax="cmd_makeleader(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="195"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_name"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="pskin"/>
			<dependency name="pspawnchange"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_minigun" syntax="cmd_minigun(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="263"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="SendTeamMessage"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_mv" syntax="cmd_mv(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,_:)"/>
			<dependency name="operator&lt;=(Float:,_:)"/>
			<dependency name="GetObjectPos"/>
			<dependency name="GetObjectRot"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="MoveObject"/>
			<dependency name="isPlayerinStaat"/>
			<dependency name="p1"/>
			<dependency name="p2"/>
			<dependency name="p3"/>
			<dependency name="pdschranke"/>
			<dependency name="pdtor"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_netstat" syntax="cmd_netstat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="NetStatsDisplay"/>
			<dependency name="SetTimer"/>
			<dependency name="gNetStatsPlayerId"/>
			<dependency name="gNetStatsTimerId"/>
			<dependency name="isAdmin"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_news" syntax="cmd_news(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="267"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendFrakMessage"/>
			<dependency name="WPM"/>
			<dependency name="ep"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_nichts" syntax="cmd_nichts(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_o" syntax="cmd_o(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="520"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_orangelist" syntax="cmd_orangelist(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="eingeloggt"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="pOL"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_play" syntax="cmd_play(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_ptp" syntax="cmd_ptp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="3470"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_r" syntax="cmd_r(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="1238"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="isPlayerinStaat"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="rangdrei"/>
			<dependency name="rangeins"/>
			<dependency name="rangfunf"/>
			<dependency name="rangnull"/>
			<dependency name="rangsechs"/>
			<dependency name="rangvier"/>
			<dependency name="rangzwei"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_randweather" syntax="cmd_randweather(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="changeweather"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_reloadxmas" syntax="cmd_reloadxmas(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SEM"/>
			<dependency name="SendRconCommand"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_respawnplayer" syntax="cmd_respawnplayer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_respawnveh" syntax="cmd_respawnveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleToRespawn"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_reviveplayer" syntax="cmd_reviveplayer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="WPM"/>
			<dependency name="dx"/>
			<dependency name="dy"/>
			<dependency name="dz"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_saduty" syntax="cmd_saduty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="aduty_text"/>
			<dependency name="isaduty"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_selectaduty" syntax="cmd_selectaduty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="isAlevel"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_set" syntax="cmd_set(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="533"/>
			<dependency name="SendClientMessage"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="isaduty"/>
			<dependency name="pdonut"/>
			<dependency name="pgold"/>
			<dependency name="pgreen"/>
			<dependency name="plsd"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setarmour" syntax="cmd_setarmour(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setfill" syntax="cmd_setfill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<dependency name="tank"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setfskin" syntax="cmd_setfskin(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="WPM"/>
			<dependency name="pfSkin"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setfstat" syntax="cmd_setfstat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_green"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sethouseinterior" syntax="cmd_sethouseinterior(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SEM"/>
			<dependency name="WPM"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_interior"/>
			<dependency name="isAdmin"/>
			<dependency name="saveHaus"/>
			<dependency name="sscanf"/>
			<dependency name="updateHaus"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sethouselevel" syntax="cmd_sethouselevel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SEM"/>
			<dependency name="WPM"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_id"/>
			<dependency name="h_level"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="isAdmin"/>
			<dependency name="saveHaus"/>
			<dependency name="sscanf"/>
			<dependency name="updateHaus"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sethouseprice" syntax="cmd_sethouseprice(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SEM"/>
			<dependency name="WPM"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_id"/>
			<dependency name="h_preis"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="isAdmin"/>
			<dependency name="saveHaus"/>
			<dependency name="sscanf"/>
			<dependency name="updateHaus"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_sethp" syntax="cmd_sethp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setint" syntax="cmd_setint(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="71"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="format"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setnitro" syntax="cmd_setnitro(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setol" syntax="cmd_setol(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="266"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendFrakMessage"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="pOL"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setpint" syntax="cmd_setpint(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setskin" syntax="cmd_setskin(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="WPM"/>
			<dependency name="pskin"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_settime" syntax="cmd_settime(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="137"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetWorldTime"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_setvw" syntax="cmd_setvw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_showfill" syntax="cmd_showfill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="71"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="sscanf"/>
			<dependency name="tank"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_showfmotd" syntax="cmd_showfmotd(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="134"/>
			<dependency name="SendClientMessage"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="fmotd"/>
			<dependency name="format"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_showiraum" syntax="cmd_showiraum(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="71"/>
			<dependency name="SCM"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_showpos" syntax="cmd_showpos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="212"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="__printf"/>
			<dependency name="format"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_showservervehs" syntax="cmd_showservervehs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="71"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_skininfo" syntax="cmd_skininfo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="135"/>
			<dependency name="GetPlayerSkin"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_slap" syntax="cmd_slap(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="WPM"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spawnchange" syntax="cmd_spawnchange(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="SendClientMessage"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_spec" syntax="cmd_spec(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="PlayerSpectatePlayer"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_specoff" syntax="cmd_specoff(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TogglePlayerSpectating"/>
			<dependency name="false"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_startbus" syntax="cmd_startbus(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateVehicle"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="bCPs"/>
			<dependency name="bCPs"/>
			<dependency name="bj_x"/>
			<dependency name="bj_y"/>
			<dependency name="bj_z"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_startmuell" syntax="cmd_startmuell(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateVehicle"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="tCPs"/>
			<dependency name="tCPs"/>
			<dependency name="t_x"/>
			<dependency name="t_y"/>
			<dependency name="t_z"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stats" syntax="cmd_stats(playerid, params)">
			<attribute name="public"/>
			<stacksize value="2069"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_name"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="pPayDay"/>
			<dependency name="pXP"/>
			<dependency name="pXPMax"/>
			<dependency name="pfraktion"/>
			<dependency name="plevel"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:cmd_stopserver" syntax="cmd_stopserver(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="GameTextForAll"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendRconCommand"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stopstream" syntax="cmd_stopstream(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_stream" syntax="cmd_stream(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_su" syntax="cmd_su(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="pwanteds"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_suicide" syntax="cmd_suicide(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SCM"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="SetPlayerHealth"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_supveh" syntax="cmd_supveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="140"/>
			<dependency name="CreateVehicle"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_suspend" syntax="cmd_suspend(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="137"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isLeader"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="pskin"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_tc" syntax="cmd_tc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="553"/>
			<dependency name="AdminRank"/>
			<dependency name="AdminRank"/>
			<dependency name="SendAdminMessage"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_time" syntax="cmd_time(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="296"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_trade" syntax="cmd_trade(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ShowPlayerDialog"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_unfreeze" syntax="cmd_unfreeze(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_uninvite" syntax="cmd_uninvite(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="136"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isPlayerInFrak"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_use" syntax="cmd_use(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="358"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="operator&gt;=(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="GetPlayerHealth"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="WPM"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="pdonut"/>
			<dependency name="pgold"/>
			<dependency name="pgreen"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sscanf"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_v" syntax="cmd_v(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateVehicle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="WPM"/>
			<dependency name="false"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vcolor" syntax="cmd_vcolor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="ChangeVehicleColours"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="farbe1"/>
			<dependency name="farbe2"/>
			<dependency name="id_x"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_vehicles" syntax="cmd_vehicles(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="326"/>
			<dependency name="SendClientMessage"/>
			<dependency name="besitzer"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="getPlayerName"/>
			<dependency name="getVehicleName"/>
			<dependency name="getVehicleName"/>
			<dependency name="strcmp"/>
			<dependency name="tank"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_w" syntax="cmd_w(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="521"/>
			<dependency name="SendClientMessage"/>
			<dependency name="WPM"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_weather" syntax="cmd_weather(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SEM"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_weatherall" syntax="cmd_weatherall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicCP"/>
			<dependency name="SendClientMessage"/>
			<dependency name="changeweather"/>
			<dependency name="isAdmin"/>
			<dependency name="sscanf"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:cmd_xmas" syntax="cmd_xmas(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="loadxmas"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:createCar" syntax="createCar(playerid, modelid, x, y, z, r)">
			<stacksize value="135"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="CreateVehicle"/>
			<dependency name="GetPlayerName"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="besitzer"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="c_r"/>
			<dependency name="c_x"/>
			<dependency name="c_y"/>
			<dependency name="c_z"/>
			<dependency name="db_id"/>
			<dependency name="dl"/>
			<dependency name="format"/>
			<dependency name="id_x"/>
			<dependency name="kennzeichen"/>
			<dependency name="model"/>
			<dependency name="sInfo"/>
			<dependency name="tank"/>
			<param name="playerid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="r">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:createfCar" syntax="createfCar(playerid, modelid, x, y, z, r, cl1, cl2)">
			<stacksize value="139"/>
			<referrer name="cmd_createfrakcar"/>
			<dependency name="CreateVehicle"/>
			<dependency name="GetPlayerName"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SendClientMessage"/>
			<dependency name="besitzer"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="c_r"/>
			<dependency name="c_x"/>
			<dependency name="c_y"/>
			<dependency name="c_z"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_name"/>
			<dependency name="format"/>
			<dependency name="fraktion"/>
			<dependency name="id_x"/>
			<dependency name="model"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<dependency name="tank"/>
			<param name="playerid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="r">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cl1">
			</param>
			<param name="cl2">
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatround" syntax="floatround(value, method)">
			<attribute name="native"/>
			<referrer name="PayDay"/>
			<referrer name="getPlayerSpeed"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="method">
				<paraminfo>floatround_method </paraminfo>
			</param>
		</member>
		<member name="M:floatsqroot" syntax="floatsqroot(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="getPlayerSpeed"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<referrer name="SEM"/>
			<referrer name="WPM"/>
			<referrer name="KickEx"/>
			<referrer name="pBan"/>
			<referrer name="loadBizes"/>
			<referrer name="OnFraksLoad"/>
			<referrer name="SFM"/>
			<referrer name="saveFrakCarToDB"/>
			<referrer name="createfCar"/>
			<referrer name="loadfrakcars"/>
			<referrer name="updateHaus"/>
			<referrer name="loadJobs"/>
			<referrer name="OnUserCheck"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="PayDay"/>
			<referrer name="getVehicleName"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_fraks"/>
			<referrer name="cmd_ainvite"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_w"/>
			<referrer name="cmd_a"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="cmd_o"/>
			<referrer name="cmd_finfo"/>
			<referrer name="cmd_allfinfo"/>
			<referrer name="cmd_setint"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_showservervehs"/>
			<referrer name="cmd_checkspawn"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_set"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_suspend"/>
			<referrer name="cmd_showfmotd"/>
			<referrer name="cmd_fmotd"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_epbonus"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_uninvite"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_orangelist"/>
			<referrer name="cmd_delol"/>
			<referrer name="cmd_news"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_showiraum"/>
			<referrer name="sekunde"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="saveCarToDB"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="createCar"/>
			<referrer name="cmd_intinfo"/>
			<referrer name="cmd_showfill"/>
			<referrer name="cmd_time"/>
			<referrer name="cmd_skininfo"/>
			<referrer name="cmd_dropguns"/>
			<referrer name="cmd_showpos"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_houses"/>
			<referrer name="cmd_vehicles"/>
			<referrer name="cmd_hduty"/>
			<referrer name="cmd_id"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_su"/>
			<referrer name="cmd_inv"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_annehmen"/>
			<referrer name="cmd_getcarowner"/>
			<referrer name="OnDialogResponse"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
				The string to output the result to
			</param>
			<param name="len">
				The maximum length output can contain
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
				The format string
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
				Indefinite number of arguments of any tag
			</param>
			<library>omp_core</library>  <summary>Formats a string to include variables and other strings inside it.</summary>          <seealso name="print" />  <seealso name="printf" />  <remarks>This function doesn't support <a href="#strpack">packed strings</a>.</remarks>  <remarks>  <b>Format Specifiers:</b><br />  <ul>  <li><b><c>%i</c></b> - integer (whole number)</li>  <li><b><c>%d</c></b> - integer (whole number).</li>  <li><b><c>%s</c></b> - string</li>  <li><b><c>%f</c></b> - floating-point number (Float: tag)</li>  <li><b><c>%c</c></b> - ASCII character</li>  <li><b><c>%x</c></b> - hexadecimal number</li>  <li><b><c>%b</c></b> - binary number</li>  <li><b><c>%%</c></b> - literal <b><c>%</c></b></li>  <li><b><c>%q</c></b> - escape a text for SQLite. (Added in <b>0.3.7 R2</b>)</li>  </ul>  </remarks>  <remarks>The values for the placeholders follow in the exact same order as parameters in the call.  For example, <b><c>"I am %i years old"</c></b> - the <b><c>%i</c></b> will be replaced with an Integer  variable, which is the person's age.</remarks>  <remarks>You may optionally put a number between the <b><c>%</c></b> and the letter of the placeholder  code.  This number indicates the field width; if the size of the parameter to print at the position  of the placeholder is smaller than the field width, the field is expanded with spaces.  To cut the  number of decimal places beeing shown of a float, you can add <b><c>.&lt;max number&gt;</c></b> between  the <b><c>%</c></b> and the <b><c>f</c></b>. (example: <b><c>%.2f</c></b>)</remarks> 
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="Streamer_OnGameModeInit"/>
			<referrer name="Streamer_OnFilterScriptInit"/>
			<referrer name="zcmd_OnGameModeInit"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:getFreeCarID" syntax="getFreeCarID()">
			<stacksize value="2"/>
			<referrer name="OnFrakCarsLoad"/>
			<referrer name="OnPlayerCarsLoad"/>
			<dependency name="cInfo"/>
			<dependency name="id_x"/>
		</member>
		<member name="M:getFreeHausID" syntax="getFreeHausID()">
			<stacksize value="2"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="cmd_createhouse"/>
			<dependency name="hInfo"/>
			<dependency name="h_id"/>
		</member>
		<member name="M:getPlayerName" syntax="getPlayerName(playerid)">
			<stacksize value="29"/>
			<referrer name="KickEx"/>
			<referrer name="pBan"/>
			<referrer name="SFM"/>
			<referrer name="OnUserCheck"/>
			<referrer name="OnPasswordResponse"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_ainvite"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_w"/>
			<referrer name="cmd_a"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_o"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_checkspawn"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_set"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_stats"/>
			<referrer name="cmd_duty"/>
			<referrer name="cmd_suspend"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_uninvite"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_orangelist"/>
			<referrer name="cmd_delol"/>
			<referrer name="cmd_news"/>
			<referrer name="saveCarToDB"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerText"/>
			<referrer name="cmd_dropguns"/>
			<referrer name="cmd_houses"/>
			<referrer name="cmd_vehicles"/>
			<referrer name="cmd_hduty"/>
			<referrer name="cmd_id"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_annehmen"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="GetPlayerName"/>
			<dependency name="getPlayerName"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getPlayerSpeed" syntax="getPlayerSpeed(playerid)">
			<stacksize value="10"/>
			<referrer name="sekunde"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="floatround"/>
			<dependency name="floatsqroot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:getVehicleName" syntax="getVehicleName(v_model)">
			<stacksize value="2061"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="sekunde"/>
			<referrer name="cmd_vehicles"/>
			<dependency name="format"/>
			<dependency name="getVehicleName"/>
			<param name="v_model">
			</param>
		</member>
		<member name="M:getchar" syntax="getchar(echo)">
			<stacksize value="1"/>
			<param name="echo">
				<paraminfo>bool </paraminfo>
				If <c>true</c>, the character read from the keyboard is echoed on the display.
			</param>
			<library>console</library>  <summary>Read one character.</summary>    <seealso name="getstring"/>  <return>The numeric code for the character that is read (this is usually the ASCII code).</return> 
		</member>
		<member name="M:getdate" syntax="getdate(&amp;year, &amp;month, &amp;day)">
			<attribute name="native"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="year">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="month">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="day">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:getstring" syntax="getstring(string[], size, pack)">
			<stacksize value="1"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				
			</param>
			<param name="size">
				
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				
			</param>
			<library>console</library>  <summary>Read a line.</summary>        <seealso name="getchar"/>  <return>The number of characters read, excluding the terminating null character.</return>  <remarks>Function <c>getstring</c> stops reading when either the enter key is typed or the  maximum length is reached.  The maximum length is in cells (not characters) and it includes a   terminating null character.  The function can read both packed and unpacked strings; when reading  a packed string, the function may read more characters than the size parameter specifies, since  each cell holds multiple characters.</remarks> 
		</member>
		<member name="M:gettime" syntax="gettime(&amp;hour, &amp;minute, &amp;second)">
			<attribute name="native"/>
			<referrer name="cmd_news"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="sekunde"/>
			<referrer name="stunde"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_time"/>
			<param name="hour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="minute">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="second">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:getvalue" syntax="getvalue(base, end, ...)">
			<stacksize value="1"/>
			<param name="base">
				Must be between 2 and 36, use 10 for decimal or 16 for hexadecimal.
			</param>
			<param name="end">
				The character code that terminates the input.  More than one character may be listed.
			</param>
			<param name="...">
			</param>
			<library>console</library>  <summary>Read a number.</summary>      <param name="..."></param>  <seealso name="getstring"/>  <return>The value that is read.</return>  <remarks>Read a value (a signed number) from the keyboard.  The <c>getvalue</c> function allows  you to read in a numeric radix from 2 to 36 (the base parameter) with decimal radix by default.  By default the input ends when the user types the enter key, but one or more different keys may  be selected (the end parameter and subsequent). In the list of terminating keys, a positive  number (like <c>'\r'</c>) displays the key and terminates input, and a negative number terminates  input without displaying the terminating key.</remarks> 
		</member>
		<member name="M:gotoxy" syntax="gotoxy(x, y)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="x">
				
			</param>
			<param name="y">
				The new cursor position.
			</param>
			<library>console</library>  <summary>Set cursor location.</summary>      <seealso name="clrscr"/>  <return><c>true</c> if the cursor moved and <c>false</c> if the requested position is invalid.</return>  <remarks>Sets the cursor position on the console.  The upper left corner is at <c>(1,1)</c>.</remarks> 
		</member>
		<member name="M:hatAutoMotor" syntax="hatAutoMotor(vID)">
			<stacksize value="4"/>
			<referrer name="sekunde"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="autosOhneMotor"/>
			<param name="vID">
			</param>
		</member>
		<member name="M:hatPlayerHaus" syntax="hatPlayerHaus(playerid)">
			<stacksize value="31"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="GetPlayerName"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="h_id"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isAdmin" syntax="isAdmin(playerid, a_level)">
			<stacksize value="1"/>
			<referrer name="isaduty"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_ahelp"/>
			<referrer name="cmd_supveh"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_ainvite"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_respawnveh"/>
			<referrer name="cmd_delveh"/>
			<referrer name="cmd_fly"/>
			<referrer name="cmd_setfill"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_sethp"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_deletehouse"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseinterior"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_gotoxyz"/>
			<referrer name="cmd_w"/>
			<referrer name="cmd_a"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_fixveh"/>
			<referrer name="cmd_arefill"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_clearchat"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="cmd_eveh"/>
			<referrer name="cmd_o"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_weather"/>
			<referrer name="cmd_weatherall"/>
			<referrer name="cmd_randweather"/>
			<referrer name="cmd_finfo"/>
			<referrer name="cmd_allfinfo"/>
			<referrer name="cmd_setint"/>
			<referrer name="cmd_setpint"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_setvw"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_specoff"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givecam"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_showservervehs"/>
			<referrer name="cmd_checkspawn"/>
			<referrer name="cmd_delallveh"/>
			<referrer name="cmd_reloadxmas"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_set"/>
			<referrer name="cmd_createfrakcar"/>
			<referrer name="cmd_setnitro"/>
			<referrer name="cmd_makeadmin"/>
			<referrer name="cmd_givelevel"/>
			<referrer name="cmd_stopserver"/>
			<referrer name="cmd_minigun"/>
			<referrer name="cmd_givemoney"/>
			<referrer name="cmd_netstat"/>
			<referrer name="cmd_setfstat"/>
			<referrer name="cmd_gmx"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="a_level">
			</param>
		</member>
		<member name="M:isAlevel" syntax="isAlevel(playerid, a_level)">
			<stacksize value="1"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_selectaduty"/>
			<dependency name="padminlevel"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="a_level">
			</param>
		</member>
		<member name="M:isLeader" syntax="isLeader(playerid)">
			<stacksize value="1"/>
			<referrer name="cmd_suspend"/>
			<dependency name="pfleader"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isMotorOn" syntax="isMotorOn(vID)">
			<stacksize value="17"/>
			<referrer name="sekunde"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="true"/>
			<param name="vID">
			</param>
		</member>
		<member name="M:isPlayerInFrak" syntax="isPlayerInFrak(playerid, f_id)">
			<stacksize value="1"/>
			<referrer name="SFM"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_epbonus"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_uninvite"/>
			<referrer name="cmd_giverank"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_orangelist"/>
			<referrer name="cmd_delol"/>
			<referrer name="cmd_news"/>
			<referrer name="cmd_exit"/>
			<referrer name="cmd_fcar"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
			<param name="f_id">
			</param>
		</member>
		<member name="M:isPlayerInFrakVehicle" syntax="isPlayerInFrakVehicle(playerid, f_id)">
			<stacksize value="4"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="cInfo"/>
			<dependency name="fraktion"/>
			<param name="playerid">
			</param>
			<param name="f_id">
			</param>
		</member>
		<member name="M:isPlayerInRangeOfFrakEnterPoint" syntax="isPlayerInRangeOfFrakEnterPoint(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="f_enterx"/>
			<dependency name="f_entery"/>
			<dependency name="f_enterz"/>
			<dependency name="f_exitx"/>
			<dependency name="f_exity"/>
			<dependency name="f_exitz"/>
			<dependency name="f_inter"/>
			<dependency name="f_world"/>
			<dependency name="fbase"/>
			<dependency name="fbase"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isPlayerInRangeOfFrakExitPoint" syntax="isPlayerInRangeOfFrakExitPoint(playerid)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="f_enterx"/>
			<dependency name="f_entery"/>
			<dependency name="f_enterz"/>
			<dependency name="f_exitx"/>
			<dependency name="f_exity"/>
			<dependency name="f_exitz"/>
			<dependency name="fbase"/>
			<dependency name="fbase"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isPlayerOnOrangelist" syntax="isPlayerOnOrangelist(playerid)">
			<stacksize value="1"/>
			<referrer name="cmd_delol"/>
			<dependency name="pOL"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isPlayerinBadFrak" syntax="isPlayerinBadFrak(playerid)">
			<stacksize value="2"/>
			<referrer name="OnPlayerSpawn"/>
			<dependency name="badfraks"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isPlayerinStaat" syntax="isPlayerinStaat(playerid)">
			<stacksize value="1"/>
			<referrer name="SFM"/>
			<referrer name="cmd_mv"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_get"/>
			<dependency name="pfraktion"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isaduty" syntax="isaduty(playerid)">
			<stacksize value="5"/>
			<referrer name="cmd_aduty"/>
			<referrer name="cmd_delveh"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_addschirmex"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_addequipex"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_set"/>
			<referrer name="cmd_saduty"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="GetPVarInt"/>
			<dependency name="isAdmin"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:loadBizes" syntax="loadBizes()">
			<stacksize value="43"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Create3DTextLabel"/>
			<dependency name="CreatePickup"/>
			<dependency name="bInfo"/>
			<dependency name="bInfo"/>
			<dependency name="b_shopname"/>
			<dependency name="b_x"/>
			<dependency name="b_y"/>
			<dependency name="b_z"/>
			<dependency name="false"/>
			<dependency name="format"/>
		</member>
		<member name="M:loadJobs" syntax="loadJobs()">
			<stacksize value="267"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Create3DTextLabel"/>
			<dependency name="CreatePickup"/>
			<dependency name="JPs"/>
			<dependency name="JPs"/>
			<dependency name="format"/>
			<dependency name="j_x"/>
			<dependency name="j_y"/>
			<dependency name="j_z"/>
			<dependency name="jobname"/>
		</member>
		<member name="M:loadPlayerCars" syntax="loadPlayerCars(playerid)">
			<stacksize value="135"/>
			<referrer name="OnPasswordResponse"/>
			<dependency name="db_id"/>
			<dependency name="dbhandle"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:loadfrakcars" syntax="loadfrakcars()">
			<attribute name="public"/>
			<stacksize value="1030"/>
			<dependency name="dbhandle"/>
			<dependency name="format"/>
			<dependency name="mysql_tquery"/>
		</member>
		<member name="M:loadfraks" syntax="loadfraks()">
			<attribute name="public"/>
			<stacksize value="1031"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="dbhandle"/>
			<dependency name="fInfo"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
		</member>
		<member name="M:loadiraum" syntax="loadiraum()">
			<attribute name="public"/>
			<stacksize value="1030"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<dependency name="dbhandle"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
		</member>
		<member name="M:loadxmas" syntax="loadxmas()">
			<stacksize value="295"/>
			<referrer name="cmd_xmas"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="SetDynamicObjectMaterial"/>
		</member>
		<member name="M:main" syntax="main()">
			<attribute name="entry"/>
			<stacksize value="3"/>
			<dependency name="__print"/>
		</member>
		<member name="M:mysql_close" syntax="mysql_close(handle)">
			<attribute name="native"/>
			<referrer name="OnGameModeExit"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_connect" syntax="mysql_connect(host[], user[], password[], database[], option_id)">
			<tagname value="MySQL"/>
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="host">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="user">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="database">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="option_id">
				<paraminfo>MySQLOpt </paraminfo>
			</param>
		</member>
		<member name="M:mysql_escape_string" syntax="mysql_escape_string(source[], destination[], max_len, handle)">
			<attribute name="native"/>
			<referrer name="OnDialogResponse"/>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_format" syntax="mysql_format(handle, output[], max_len, format[], ...)">
			<attribute name="native"/>
			<referrer name="loadfraks"/>
			<referrer name="savefraks"/>
			<referrer name="saveHaus"/>
			<referrer name="LoadHouses"/>
			<referrer name="loadiraum"/>
			<referrer name="savePlayer"/>
			<referrer name="savesession"/>
			<referrer name="cmd_deletehouse"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="loadPlayerCars"/>
			<referrer name="OnDialogResponse"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:mysql_function_query" syntax="mysql_function_query()">
			<stacksize value="1"/>
			<referrer name="saveFrakCarToDB"/>
			<referrer name="saveCarToDB"/>
		</member>
		<member name="M:mysql_log" syntax="mysql_log(loglevel)">
			<attribute name="native"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="loglevel">
				<paraminfo>E_LOGLEVEL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_tquery" syntax="mysql_tquery(handle, query[], callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="loadfraks"/>
			<referrer name="savefraks"/>
			<referrer name="loadfrakcars"/>
			<referrer name="saveHaus"/>
			<referrer name="LoadHouses"/>
			<referrer name="loadiraum"/>
			<referrer name="savePlayer"/>
			<referrer name="savesession"/>
			<referrer name="cmd_deletehouse"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="loadPlayerCars"/>
			<referrer name="OnDialogResponse"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:pBan" syntax="pBan(adminID, banid, reason[])">
			<stacksize value="522"/>
			<referrer name="cmd_ban"/>
			<dependency name="Ban"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<param name="adminID">
			</param>
			<param name="banid">
			</param>
			<param name="reason">
				<paraminfo> [256] </paraminfo>
			</param>
		</member>
		<member name="M:print" syntax="print(__string[], __foreground, __background)">
			<stacksize value="3"/>
			<dependency name="__print"/>
			<param name="__string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="__foreground">
			</param>
			<param name="__background">
			</param>
			<library>console</library>  <summary>Prints a string to the server console (not in-game chat) and logs (server_log.txt).</summary>  <param name="string">The string to print</param>  <param name="foreground">The string to print</param>  <param name="background">Colour codes for the foreground and the background of the text string;  see function <c>setattr</c> for a list of colours.  When left at <c>-1</c>, the default colours  are used.  Note that a terminal or a host application may not support colours.</param>  <seealso name="printf"/>  <return>This function always returns 0.</return> 
		</member>
		<member name="M:random" syntax="random(max)">
			<attribute name="native"/>
			<referrer name="randomEx"/>
			<referrer name="changeweather"/>
			<referrer name="OnDialogResponse"/>
			<param name="max">
			</param>
		</member>
		<member name="M:randomEx" syntax="randomEx(minnum, maxnum)">
			<stacksize value="3"/>
			<dependency name="random"/>
			<param name="minnum">
			</param>
			<param name="maxnum">
			</param>
		</member>
		<member name="M:resetPlayer" syntax="resetPlayer(playerid)">
			<stacksize value="3"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<dependency name="KillTimer"/>
			<dependency name="__print"/>
			<dependency name="eingeloggt"/>
			<dependency name="padminlevel"/>
			<dependency name="payday"/>
			<dependency name="pskin"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:resetnoclip" syntax="resetnoclip(playerid)">
			<stacksize value="1"/>
			<referrer name="CEF_OnPlayerConnect"/>
			<dependency name="accelmul"/>
			<dependency name="cameramode"/>
			<dependency name="lastmove"/>
			<dependency name="lrold"/>
			<dependency name="mode"/>
			<dependency name="noclipdata"/>
			<dependency name="noclipdata"/>
			<dependency name="udold"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:resetrestart" syntax="resetrestart()">
			<stacksize value="1"/>
			<dependency name="restartcounter"/>
		</member>
		<member name="M:restart" syntax="restart()">
			<stacksize value="4"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SendRconCommand"/>
			<dependency name="restartcounter"/>
			<dependency name="saveallplayers"/>
			<dependency name="savefraks"/>
		</member>
		<member name="M:saveCarToDB" syntax="saveCarToDB(playerid, carid)">
			<stacksize value="142"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="c_r"/>
			<dependency name="c_x"/>
			<dependency name="c_y"/>
			<dependency name="c_z"/>
			<dependency name="dbhandle"/>
			<dependency name="dl"/>
			<dependency name="format"/>
			<dependency name="getPlayerName"/>
			<dependency name="model"/>
			<dependency name="mysql_function_query"/>
			<dependency name="tank"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="carid">
			</param>
		</member>
		<member name="M:saveFrakCarToDB" syntax="saveFrakCarToDB(frakid, carid)">
			<stacksize value="139"/>
			<dependency name="cInfo"/>
			<dependency name="cInfo"/>
			<dependency name="c_r"/>
			<dependency name="c_x"/>
			<dependency name="c_y"/>
			<dependency name="c_z"/>
			<dependency name="db_id"/>
			<dependency name="dbhandle"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="format"/>
			<dependency name="model"/>
			<dependency name="mysql_function_query"/>
			<dependency name="true"/>
			<param name="frakid">
			</param>
			<param name="carid">
			</param>
		</member>
		<member name="M:saveHaus" syntax="saveHaus(id)">
			<stacksize value="138"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseinterior"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_buyhouse"/>
			<dependency name="dbhandle"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="h_id"/>
			<dependency name="h_interior"/>
			<dependency name="h_preis"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<param name="id">
			</param>
		</member>
		<member name="M:savePlayer" syntax="savePlayer(playerid)">
			<stacksize value="1057"/>
			<referrer name="PayDay"/>
			<referrer name="cmd_makeadmin"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<referrer name="saveallplayers"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerScore"/>
			<dependency name="db_id"/>
			<dependency name="dbhandle"/>
			<dependency name="eingeloggt"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pOL"/>
			<dependency name="pPayDay"/>
			<dependency name="pXP"/>
			<dependency name="pXPMax"/>
			<dependency name="padminlevel"/>
			<dependency name="pdeaths"/>
			<dependency name="pdonut"/>
			<dependency name="pfSkin"/>
			<dependency name="pfleader"/>
			<dependency name="pfraktion"/>
			<dependency name="pfrang"/>
			<dependency name="pgold"/>
			<dependency name="pgreen"/>
			<dependency name="plsd"/>
			<dependency name="pskin"/>
			<dependency name="pspawnchange"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<dependency name="sx"/>
			<dependency name="sy"/>
			<dependency name="sz"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:saveallplayers" syntax="saveallplayers()">
			<stacksize value="5"/>
			<referrer name="restart"/>
			<dependency name="eingeloggt"/>
			<dependency name="sInfo"/>
			<dependency name="savePlayer"/>
		</member>
		<member name="M:savefrakcars" syntax="savefrakcars()">
			<stacksize value="1"/>
		</member>
		<member name="M:savefraks" syntax="savefraks()">
			<attribute name="public"/>
			<stacksize value="2062"/>
			<referrer name="restart"/>
			<referrer name="OnGameModeExit"/>
			<dependency name="__print"/>
			<dependency name="dbhandle"/>
			<dependency name="ep"/>
			<dependency name="fInfo"/>
			<dependency name="fInfo"/>
			<dependency name="f_ID"/>
			<dependency name="f_gold"/>
			<dependency name="f_green"/>
			<dependency name="f_kasse"/>
			<dependency name="f_lsd"/>
			<dependency name="fmotd"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
		</member>
		<member name="M:savesession" syntax="savesession(playerid)">
			<stacksize value="1033"/>
			<referrer name="CEF_OnPlayerDisconnect"/>
			<dependency name="__print"/>
			<dependency name="db_id"/>
			<dependency name="dbhandle"/>
			<dependency name="login"/>
			<dependency name="logout"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="sInfo"/>
			<dependency name="sInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:sekunde" syntax="sekunde()">
			<attribute name="public"/>
			<stacksize value="327"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetTimerRemaining"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="Tacho"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="format"/>
			<dependency name="getPlayerSpeed"/>
			<dependency name="getVehicleName"/>
			<dependency name="getVehicleName"/>
			<dependency name="gettime"/>
			<dependency name="hatAutoMotor"/>
			<dependency name="isMotorOn"/>
			<dependency name="stopMotor"/>
			<dependency name="stundentimer"/>
			<dependency name="tank"/>
			<dependency name="tankLabel"/>
			<dependency name="tanktimer"/>
			<dependency name="uhrzeitlabel"/>
		</member>
		<member name="M:setattr" syntax="setattr(foreground, background)">
			<stacksize value="1"/>
			<param name="foreground">
				The string to print
			</param>
			<param name="background">
				Colour codes for the foreground and the background of the text string;  see function <c>setattr</c> for a list of colours.  When left at <c>-1</c>, the default colours  are used.  Note that a terminal or a host application may not support colours
			</param>
			<library>console</library>  <summary>Set text colours.</summary>      <seealso name="clrscr"/>  <return>This function always returns 0.</return>  <remarks>On most systems, the colour value must be a value between zero and seven, as per the  ANSI escape sequences, ISO 6429.  Predefined constants for the colours are <c>black (0)</c>,  <c>red (1)</c>, <c>green (2)</c>, <c>yellow (3)</c>, <c>blue (4)</c>, <c>magenta (5)</c>,  <c>cyan (6)</c>, and <c>white (7)</c>.</remarks> 
		</member>
		<member name="M:sscanf" syntax="sscanf(data[], format[], ...)">
			<attribute name="native"/>
			<referrer name="cmd_tc"/>
			<referrer name="cmd_ainvite"/>
			<referrer name="cmd_auninvite"/>
			<referrer name="cmd_respawnveh"/>
			<referrer name="cmd_delveh"/>
			<referrer name="cmd_setfill"/>
			<referrer name="cmd_reviveplayer"/>
			<referrer name="cmd_sethp"/>
			<referrer name="cmd_setarmour"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseinterior"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_gotoxyz"/>
			<referrer name="cmd_w"/>
			<referrer name="cmd_a"/>
			<referrer name="cmd_slap"/>
			<referrer name="cmd_addschirm"/>
			<referrer name="cmd_respawnplayer"/>
			<referrer name="cmd_addequip"/>
			<referrer name="cmd_fixveh"/>
			<referrer name="cmd_arefill"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_gohouse"/>
			<referrer name="cmd_goto"/>
			<referrer name="cmd_ptp"/>
			<referrer name="cmd_gotocar"/>
			<referrer name="cmd_gethere"/>
			<referrer name="cmd_getherecar"/>
			<referrer name="cmd_eveh"/>
			<referrer name="cmd_o"/>
			<referrer name="cmd_kick"/>
			<referrer name="cmd_weather"/>
			<referrer name="cmd_weatherall"/>
			<referrer name="cmd_finfo"/>
			<referrer name="cmd_allfinfo"/>
			<referrer name="cmd_setint"/>
			<referrer name="cmd_setpint"/>
			<referrer name="cmd_freeze"/>
			<referrer name="cmd_unfreeze"/>
			<referrer name="cmd_setvw"/>
			<referrer name="cmd_setskin"/>
			<referrer name="cmd_spec"/>
			<referrer name="cmd_ban"/>
			<referrer name="cmd_givecam"/>
			<referrer name="cmd_makeleader"/>
			<referrer name="cmd_checkspawn"/>
			<referrer name="cmd_settime"/>
			<referrer name="cmd_fakeme"/>
			<referrer name="cmd_set"/>
			<referrer name="cmd_createfrakcar"/>
			<referrer name="cmd_setnitro"/>
			<referrer name="cmd_makeadmin"/>
			<referrer name="cmd_givelevel"/>
			<referrer name="cmd_givemoney"/>
			<referrer name="cmd_setfstat"/>
			<referrer name="cmd_suspend"/>
			<referrer name="cmd_fmotd"/>
			<referrer name="cmd_f"/>
			<referrer name="cmd_d"/>
			<referrer name="cmd_r"/>
			<referrer name="cmd_invite"/>
			<referrer name="cmd_uninvite"/>
			<referrer name="cmd_giverank"/>
			<referrer name="cmd_setol"/>
			<referrer name="cmd_delol"/>
			<referrer name="cmd_news"/>
			<referrer name="cmd_iraum"/>
			<referrer name="cmd_showfill"/>
			<referrer name="cmd_vcolor"/>
			<referrer name="cmd_showpos"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_setfskin"/>
			<referrer name="cmd_id"/>
			<referrer name="cmd_clear"/>
			<referrer name="cmd_su"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_v"/>
			<referrer name="cmd_cveh"/>
			<referrer name="GetPlayerID"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_vehicle" syntax="sscanf_vehicle(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_weapon" syntax="sscanf_weapon(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:staatsequip" syntax="staatsequip(playerid)">
			<stacksize value="5"/>
			<referrer name="cmd_equip"/>
			<dependency name="GivePlayerWeapon"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:stopMotor" syntax="stopMotor(vID)">
			<stacksize value="17"/>
			<referrer name="sekunde"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="false"/>
			<param name="vID">
			</param>
		</member>
		<member name="M:strcat" syntax="strcat(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="cmd_fraks"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="hatPlayerHaus"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_go"/>
			<referrer name="cmd_eveh"/>
			<referrer name="cmd_set"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_car"/>
			<referrer name="cmd_houses"/>
			<referrer name="cmd_vehicles"/>
			<referrer name="cmd_get"/>
			<referrer name="cmd_use"/>
			<referrer name="cmd_accept"/>
			<referrer name="cmd_cveh"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="hatPlayerHaus"/>
			<referrer name="updateHaus"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="cmd_buyhouse"/>
			<referrer name="OnDialogResponse"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strmid" syntax="strmid(dest[], source[], start, end, maxlength)">
			<attribute name="native"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_buyhouse"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:stunde" syntax="stunde()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="SetWorldTime"/>
			<dependency name="changeweather"/>
			<dependency name="gettime"/>
		</member>
		<member name="M:tolower" syntax="tolower(c)">
			<attribute name="native"/>
			<referrer name="OnPlayerCommandText"/>
			<param name="c">
			</param>
		</member>
		<member name="M:unfreezePlayer" syntax="unfreezePlayer(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:updateHaus" syntax="updateHaus(id)">
			<stacksize value="138"/>
			<referrer name="OnHausesLoad"/>
			<referrer name="cmd_sethouselevel"/>
			<referrer name="cmd_sethouseinterior"/>
			<referrer name="cmd_sethouseprice"/>
			<referrer name="cmd_createhouse"/>
			<referrer name="cmd_asellhouse"/>
			<referrer name="cmd_buyhouse"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Create3DTextLabel"/>
			<dependency name="CreatePickup"/>
			<dependency name="Delete3DTextLabel"/>
			<dependency name="DestroyPickup"/>
			<dependency name="format"/>
			<dependency name="hInfo"/>
			<dependency name="hInfo"/>
			<dependency name="h_besitzer"/>
			<dependency name="h_level"/>
			<dependency name="h_pickup"/>
			<dependency name="h_preis"/>
			<dependency name="h_text"/>
			<dependency name="h_x"/>
			<dependency name="h_y"/>
			<dependency name="h_z"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="id">
			</param>
		</member>
		<member name="M:zcmd_OnGameModeInit" syntax="zcmd_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="SSCANF_gOPC"/>
			<dependency name="SSCANF_gOPDC"/>
			<dependency name="funcidx"/>
		</member>
		<member name="M:zcmd_OnPlayerCommandText" syntax="zcmd_OnPlayerCommandText(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>

	</members>
</doc>
